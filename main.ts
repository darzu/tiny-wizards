namespace SpriteKind {
    export const Dust = SpriteKind.create()
    export const JumpPartical = SpriteKind.create()
    export const Box = SpriteKind.create()
    export const SkidDust = SpriteKind.create()
    export const Spike = SpriteKind.create()
    export const SlimePartical = SpriteKind.create()
    export const Null = SpriteKind.create()
    export const BuildWall = SpriteKind.create()
    export const EndofLevelcamerachange = SpriteKind.create()
    export const DamageNumber = SpriteKind.create()
    export const Torch = SpriteKind.create()
    export const Heart = SpriteKind.create()
    export const PowerUp = SpriteKind.create()
    export const ChargePartical = SpriteKind.create()
    export const WallHazard = SpriteKind.create()
    export const LaunchPad = SpriteKind.create()
    export const Ladder = SpriteKind.create()
    export const Slime = SpriteKind.create()
    export const SkeleArcher = SpriteKind.create()
    export const EnemyDeathPartical = SpriteKind.create()
    export const SkeletonArrow = SpriteKind.create()
    export const ArrowEndAnim = SpriteKind.create()
    export const powerUpMarker = SpriteKind.create()
    export const Bat = SpriteKind.create()
    export const BatAggro = SpriteKind.create()
    export const Bat2 = SpriteKind.create()
    export const Bat3 = SpriteKind.create()
    export const BatAggro2 = SpriteKind.create()
    export const BatAggro3 = SpriteKind.create()
    export const LevelEnd = SpriteKind.create()
    export const BossSpawnBox = SpriteKind.create()
    export const Boss1 = SpriteKind.create()
    export const BossFireball = SpriteKind.create()
    export const BossDeathPartical = SpriteKind.create()
    export const Sign_1 = SpriteKind.create()
    export const Sign_2 = SpriteKind.create()
    export const waterhazard = SpriteKind.create()
}
namespace myTiles {
    //% blockIdentity=images._tile
    export const tile0 = img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`
    //% blockIdentity=images._tile
    export const tile5 = img`
c c c c c b c c c c b c c c c c 
9 9 6 6 b c 9 9 6 b c 9 6 c c c 
6 6 6 6 6 c 9 6 6 6 c 9 6 6 6 c 
6 6 6 6 6 c 6 6 6 6 c 6 6 6 6 c 
b b c c c c c c c c c c c c b b 
b 9 9 6 6 6 c 9 9 6 6 6 6 b 9 6 
c 9 6 6 6 6 c 9 6 6 6 6 6 c 9 6 
c 9 6 6 6 b b b 6 6 6 6 6 c 6 6 
c c c c c c c b c c b b c c c c 
9 9 6 6 6 c 9 9 6 6 b b 9 9 6 6 
6 6 6 6 6 b 6 6 6 6 6 c 6 6 6 6 
b 6 6 6 6 c b 6 6 6 6 c c 6 6 b 
b c c c c c c c c c c c c c c c 
9 c b b 9 6 6 c c 9 6 c b 9 6 6 
6 6 b 9 6 6 6 c 9 6 6 c 9 9 6 6 
6 6 c 6 6 6 6 c c 6 6 c 6 6 6 6 
`
    //% blockIdentity=images._tile
    export const tile6 = img`
c c c c c b c c c c b c c c c d 
9 9 6 6 b c 9 9 6 b c 9 6 9 9 d 
6 6 6 6 6 c 9 6 6 6 c 9 9 9 9 d 
6 6 6 6 6 c 6 6 6 6 c 6 9 d d d 
b b c c c c c c c c c c c c b b 
b 9 9 6 6 6 c 9 9 6 6 6 9 b 9 d 
c 9 6 6 6 6 c 9 6 6 6 6 9 c d d 
c 9 6 6 6 b b b 6 6 6 6 6 c 9 d 
c c c c c c c b c c b b c c c c 
9 9 6 6 6 c 9 9 6 6 b b 9 9 9 d 
6 6 6 6 6 b 6 6 6 6 6 c 6 9 d d 
b 6 6 6 6 c b 6 6 6 6 c c 9 d d 
b c c c c c c c c c c c c c c c 
9 c b b 9 6 6 c c 9 6 c b 9 9 d 
6 6 b 9 6 6 6 c 9 6 6 c 9 9 9 d 
6 6 c 6 6 6 6 c c 6 6 c 6 9 9 d 
`
    //% blockIdentity=images._tile
    export const tile11 = img`
d b c c c b c c c c b c c c c c 
d 9 6 6 b c 9 9 6 b c 9 6 c c c 
d 6 6 6 6 c 9 6 6 6 c 9 6 6 6 c 
d b 6 6 6 c 6 6 6 6 c 6 6 6 6 c 
d b c c c c c c c c c c c c b b 
d 9 9 6 6 6 c 9 9 6 6 6 6 b 9 6 
d 9 6 6 6 6 c 9 6 6 6 6 6 c 9 6 
d d 6 6 6 b b b 6 6 6 6 6 c 6 6 
b c c c c c c b c c b b c c c c 
d d 6 6 6 c 9 9 6 6 b b 9 9 6 6 
d 6 6 6 6 b 6 6 6 6 6 c 6 6 6 6 
d 6 6 6 6 c b 6 6 6 6 c c 6 6 b 
b c c c c c c c c c c c c c c c 
d c b b 9 6 6 c c 9 6 c b 9 6 6 
d 6 b 9 6 6 6 c 9 6 6 c 9 9 6 6 
d 6 c 6 6 6 6 c c 6 6 c 6 6 6 6 
`
    //% blockIdentity=images._tile
    export const tile13 = img`
3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 
4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 
6 6 6 6 6 c 9 6 6 6 c 9 6 6 6 6 
6 6 6 6 6 c 6 6 6 6 c 6 6 6 6 6 
b b c c c c c c c c c c c c b b 
b 9 9 6 6 6 c 9 9 6 6 6 6 b 9 6 
c 9 6 6 6 6 c 9 6 6 6 6 6 c 9 6 
c 9 6 6 6 b b b 6 6 6 6 6 c 6 6 
c c c c c c c b c c b b c c c c 
9 9 6 6 6 c 9 9 6 6 b b 9 9 6 6 
6 6 6 6 6 b 6 6 6 6 6 c 6 6 6 6 
b 6 6 6 6 c b 6 6 6 6 c c 6 6 b 
b c c c c c c c c c c c c c c c 
9 c b b 9 6 6 c c 9 6 c b 9 6 6 
6 6 b 9 6 6 6 c 9 6 6 c 9 9 6 6 
6 6 c 6 6 6 6 c c 6 6 c 6 6 6 6 
`
    //% blockIdentity=images._tile
    export const tile15 = img`
3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 d 
4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 d 
6 6 6 6 6 c 9 6 6 6 c 9 9 9 9 d 
6 6 6 6 6 c 6 6 6 6 c 6 9 d d d 
b b c c c c c c c c c c c c b b 
b 9 9 6 6 6 c 9 9 6 6 6 9 b 9 d 
c 9 6 6 6 6 c 9 6 6 6 6 9 c d d 
c 9 6 6 6 b b b 6 6 6 6 6 c 9 d 
c c c c c c c b c c b b c c c c 
9 9 6 6 6 c 9 9 6 6 b b 9 9 9 d 
6 6 6 6 6 b 6 6 6 6 6 c 6 9 d d 
b 6 6 6 6 c b 6 6 6 6 c c 9 d d 
b c c c c c c c c c c c c c c c 
9 c b b 9 6 6 c c 9 6 c b 9 9 d 
6 6 b 9 6 6 6 c 9 6 6 c 9 9 9 d 
6 6 c 6 6 6 6 c c 6 6 c 6 9 9 d 
`
    //% blockIdentity=images._tile
    export const tile16 = img`
d 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 
d 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 
d 6 6 6 6 c 9 6 6 6 c 9 6 6 6 c 
d b 6 6 6 c 6 6 6 6 c 6 6 6 6 c 
d b c c c c c c c c c c c c b b 
d 9 9 6 6 6 c 9 9 6 6 6 6 b 9 6 
d 9 6 6 6 6 c 9 6 6 6 6 6 c 9 6 
d d 6 6 6 b b b 6 6 6 6 6 c 6 6 
b c c c c c c b c c b b c c c c 
d d 6 6 6 c 9 9 6 6 b b 9 9 6 6 
d 6 6 6 6 b 6 6 6 6 6 c 6 6 6 6 
d 6 6 6 6 c b 6 6 6 6 c c 6 6 b 
b c c c c c c c c c c c c c c c 
d c b b 9 6 6 c c 9 6 c b 9 6 6 
d 6 b 9 6 6 6 c 9 6 6 c 9 9 6 6 
d 6 c 6 6 6 6 c c 6 6 c 6 6 6 6 
`
    //% blockIdentity=images._tile
    export const tile17 = img`
c c c c c b c c c c b c c c c c 
9 9 6 6 b c 9 9 6 b c 9 6 c c c 
6 6 6 6 6 c 9 6 6 6 c 9 6 6 6 c 
6 6 6 6 6 c 6 6 6 6 c 6 6 6 6 c 
b b c c c c c c c c c c c c b b 
b 9 9 6 6 6 c 9 9 6 6 6 6 b 9 6 
c 9 6 6 6 6 c 9 6 6 6 6 6 c 9 6 
c 9 6 6 6 b b b 6 6 6 6 6 c 6 6 
c c c c c c c b c c b b c c c c 
9 9 6 6 6 c 9 9 6 6 b b 9 9 6 6 
6 6 6 6 6 b 6 6 6 6 6 c 6 6 6 6 
b 6 6 6 6 c b 6 6 6 6 c c 6 6 b 
c c c c c c c c b c c b c c c c 
b c c 9 9 6 6 6 c c c c 6 6 6 c 
. . c c 6 6 6 c c . . c c c c c 
. . . c c c c c . . . c . c c . 
`
    //% blockIdentity=images._tile
    export const tile18 = img`
d b c c c b c c c c b c c c c c 
d 9 6 6 b c 9 9 6 b c 9 6 c c c 
d 6 6 6 6 c 9 6 6 6 c 9 6 6 6 c 
d b 6 6 6 c 6 6 6 6 c 6 6 6 6 c 
d b c c c c c c c c c c c c b b 
d 9 9 6 6 6 c 9 9 6 6 6 6 b 9 6 
d 9 6 6 6 6 c 9 6 6 6 6 6 c 9 6 
d d 6 6 6 b b b 6 6 6 6 6 c 6 6 
b c c c c c c b c c b b c c c c 
d d 6 6 6 c 9 9 6 6 b b 9 9 6 6 
d 6 6 6 6 b 6 6 6 6 6 c 6 6 6 6 
d 6 6 6 6 c b 6 6 6 6 c c 6 6 b 
b c c c c c c c c c c c c c c c 
d c b b c c . c c 9 6 c b 9 6 6 
. 6 b c c . . c c c c c . 9 6 . 
. . . . . . . . . . . . . . . . 
`
    //% blockIdentity=images._tile
    export const tile19 = img`
c c c c c b c c c c b c c c c d 
9 9 6 6 b c 9 9 6 b c 9 6 9 9 d 
6 6 6 6 6 c 9 6 6 6 c 9 9 9 9 d 
6 6 6 6 6 c 6 6 6 6 c 6 9 d d d 
b b c c c c c c c c c c c c b b 
b 9 9 6 6 6 c 9 9 6 6 6 9 b 9 d 
c 9 6 6 6 6 c 9 6 6 6 6 9 c d d 
c 9 6 6 6 b b b 6 6 6 6 6 c 9 d 
c c c c c c c b c c b b c c c c 
9 9 6 6 6 c 9 9 6 6 b b 9 9 9 d 
6 6 6 6 6 b 6 6 6 6 6 c 6 9 d d 
b 6 6 6 6 c b 6 6 6 6 c c 9 d d 
b c c c c c c c c c c c c c c c 
9 c c b 9 . . c c c . . c c c d 
. . b c 6 . . c 9 . . . . c c . 
. . . . . . . . . . . . . . . . 
`
    //% blockIdentity=images._tile
    export const tile20 = img`
7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 
7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 
7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 
7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 
7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 
7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 
7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 
7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 
7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 
7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 
7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 
7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 
7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 
7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 
7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 
7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 
`
    //% blockIdentity=images._tile
    export const tile21 = img`
4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 
4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 
4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 
4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 
4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 
4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 
4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 
4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 
4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 
4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 
4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 
4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 
4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 
4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 
4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 
4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 
`
    //% blockIdentity=images._tile
    export const tile22 = img`
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
`
    //% blockIdentity=images._tile
    export const tile23 = img`
a a a a a a a a a a a a a a a a 
a a a a a a a a a a a a a a a a 
a a a a a a a a a a a a a a a a 
a a a a a a a a a a a a a a a a 
a a a a a a a a a a a a a a a a 
a a a a a a a a a a a a a a a a 
a a a a a a a a a a a a a a a a 
a a a a a a a a a a a a a a a a 
a a a a a a a a a a a a a a a a 
a a a a a a a a a a a a a a a a 
a a a a a a a a a a a a a a a a 
a a a a a a a a a a a a a a a a 
a a a a a a a a a a a a a a a a 
a a a a a a a a a a a a a a a a 
a a a a a a a a a a a a a a a a 
a a a a a a a a a a a a a a a a 
`
    //% blockIdentity=images._tile
    export const tile24 = img`
1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
. 1 1 1 1 1 1 1 1 1 1 1 1 1 1 . 
. 1 1 1 1 1 1 1 1 1 1 1 1 1 1 . 
. 1 1 1 1 1 1 1 1 . . 1 1 1 1 . 
. . 1 1 . . 1 1 1 . . 1 1 1 . . 
. . 1 1 . . 1 1 1 . . 1 1 1 . . 
. . 1 1 . . 1 1 . . . 1 1 1 . . 
. . 1 1 . . 1 1 . . . 1 1 1 . . 
. . 1 . . . . 1 . . . 1 1 . . . 
. . 1 . . . . 1 . . . 1 1 . . . 
. . 1 . . . . . . . . 1 1 . . . 
. . . . . . . . . . . 1 1 . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`
    //% blockIdentity=images._tile
    export const tile25 = img`
f f f f f f f f f f f f f f f f 
f f f f f f f f f f f f f f f f 
f f f f f f f f f f f f f f f f 
f f f f f f f f f f f f f f f f 
f f f f f f f f f f f f f f f f 
f f f f f f f f f f f f f f f f 
f f f f f f f f f f f f f f f f 
f f f f f f f f f f f f f f f f 
f f f f f f f f f f f f f f f f 
f f f f f f f f f f f f f f f f 
f f f f f f f f f f f f f f f f 
f f f f f f f f f f f f f f f f 
f f f f f f f f f f f f f f f f 
f f f f f f f f f f f f f f f f 
f f f f f f f f f f f f f f f f 
f f f f f f f f f f f f f f f f 
`
    //% blockIdentity=images._tile
    export const tile26 = img`
5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 
5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 
5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 
5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 
5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 
5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 
5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 
5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 
5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 
5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 
5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 
5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 
5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 
5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 
5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 
5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 
`
    //% blockIdentity=images._tile
    export const tile27 = img`
e e e e e e e e e e e e e e e e 
e e e e e e e e e e e e e e e e 
e e e e e e e e e e e e e e e e 
e e e e e e e e e e e e e e e e 
e e e e e e e e e e e e e e e e 
e e e e e f f f f f f f e e e e 
e e e e e e e e f e e e e e e e 
e e e e e e e e f e e e e e e e 
e e e e e e e e f e e e e e e e 
e e e e e e e e f e e e e e e e 
e e e e e e e e e e e e e e e e 
e e e e e e e e e e e e e e e e 
e e e e e e e e e e e e e e e e 
e e e e e e e e e e e e e e e e 
e e e e e e e e e e e e e e e e 
e e e e e e e e e e e e e e e e 
`
    //% blockIdentity=images._tile
    export const tile29 = img`
. . . . 1 1 1 1 1 1 1 1 . . . . 
. . . . 1 6 6 6 6 6 6 1 . . . . 
. . . 1 1 6 6 6 6 6 6 1 1 . . . 
. . . . 1 6 6 6 6 6 6 1 . . . . 
. . . 1 1 6 6 6 6 6 6 1 . . . . 
. . . . 1 6 6 6 6 6 6 1 1 . . . 
. . . . 1 6 6 6 6 6 6 1 . . . . 
. . . . 1 6 6 6 6 6 6 1 . . . . 
. . . 1 1 6 6 6 6 6 6 1 . . . . 
. . . . 1 6 6 6 6 6 6 1 1 . . . 
. . . . 1 6 6 6 6 6 6 1 . . . . 
. . . . 1 6 6 6 6 6 6 1 . . . . 
. . . 1 1 6 6 6 6 6 6 1 . . . . 
. . . . 1 6 6 6 6 6 6 1 . . . . 
. . . . 1 6 6 6 6 6 6 1 1 . . . 
. . . . 1 1 1 1 1 1 1 1 . . . . 
`
    //% blockIdentity=images._tile
    export const tile30 = img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
f . . . . . . . . . . . . . . f 
f 1 1 . . . . . . . . . . . 1 f 
f . 1 1 . . . . . . . . 1 1 1 f 
f . . 1 1 1 1 1 1 1 1 1 1 . . f 
f . . . . . . . . . . . . . . f 
f . . . . . . . . . . . . . . f 
f . . . . . . . . . . . . . . f 
`
    //% blockIdentity=images._tile
    export const tile31 = img`
. . . . . . . 1 1 . . . . . . . 
. . . . . . 1 . . 1 . . . . . . 
. . . . . . 1 . . 1 . . . . . . 
. . . . . . . 1 1 . . . . . . . 
. . . . . . 1 1 1 . . . . . . . 
. . . . . . 1 . . 1 . . . . . . 
. . . . . . 1 . . 1 . . . . . . 
. . . . . . . 1 1 . . . . . . . 
. . . . . . 1 . . 1 . . . . . . 
. . . . . . 1 . . 1 . . . . . . 
. . . . . . 1 . . 1 . . . . . . 
. . . . . . . 1 1 . . . . . . . 
. . . . . . 1 . . 1 . . . . . . 
. . . . . . 1 . . 1 . . . . . . 
. . . . . . 1 . . 1 . . . . . . 
. . . . . . . 1 1 . . . . . . . 
`
    //% blockIdentity=images._tile
    export const tile32 = img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . 1 1 . . . . . . . . 
. . . . . 1 1 1 1 . . . . . . . 
. . . . . f 1 f 1 . . . . . . . 
. . . e . 1 1 1 . . . . . . . . 
. . e . . . . 1 . . . . . . . . 
. . e 1 1 1 b b b . . . . . . . 
. . e . . . b 1 1 . . . . . . . 
. . . e . . . b b . . . . . . . 
. . . . . . . 1 . . . . . . . . 
. . . . . . c c c . . . . . . . 
. . . . . . 1 . 1 . . . . . . . 
. . . . . . 1 . 1 . . . . . . . 
`
    //% blockIdentity=images._tile
    export const tile33 = img`
. . . . . . . . 1 . . . . . . . 
. . . . . . . 1 1 . . . . . . . 
. . . . . . . . 1 . . . . . . . 
. . c c c . . 1 1 1 . . c c . . 
. . c c c . . . . . . c c c c . 
. c c c c c c c c c c c . b c c 
. c c b b c 1 c c 1 c . . b c c 
. c c b . c 1 c c 1 c c . b c c 
. c b b . c c c c c c c . b c c 
. c b . . c f f f f c . . b c c 
. c b b . . c f f c . . . b c c 
. c c b . . . . . . . . . c c . 
. . c c c . . . . . . . c c c . 
. . . c c . . . . . . . c . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`
    //% blockIdentity=images._tile
    export const tile34 = img`
. . . . . . . 1 1 . . . . . . . 
. . . . . . 1 . . 1 . . . . . . 
. . . . . . . . 1 . . . . . . . 
. . c c c . . 1 . . . . c c . . 
. . c c c . 1 1 1 1 . c c c c . 
. c c c c c c c c c c c . b c c 
. c c b b c 1 c c 1 c . . b c c 
. c c b . c 1 c c 1 c c . b c c 
. c b b . c c c c c c c . b c c 
. c b . . c f f f f c . . b c c 
. c b b . . c f f c . . . b c c 
. c c b . . . . . . . . . c c . 
. . c c c . . . . . . . c c c . 
. . . c c . . . . . . . c . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`
    //% blockIdentity=images._tile
    export const tile35 = img`
. . . . . . . 1 1 . . . . . . . 
. . . . . . 1 . . 1 . . . . . . 
. . . . . . . . 1 . . . . . . . 
. . c c c . 1 . . 1 . . c c . . 
. . c c c . . 1 1 . . c c c c . 
. c c c c c c c c c c c . b c c 
. c c b b c 1 c c 1 c . . b c c 
. c c b . c 1 c c 1 c c . b c c 
. c b b . c c c c c c c . b c c 
. c b . . c f f f f c . . b c c 
. c b b . . c f f c . . . b c c 
. c c b . . . . . . . . . c c . 
. . c c c . . . . . . . c c c . 
. . . c c . . . . . . . c . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`
    //% blockIdentity=images._tile
    export const tile36 = img`
f f f f f f f f f f f f f f f f 
f f f f f f f f f f f f f f f f 
f f f f f f f f f f f c c f f f 
f f f f f f f f f c c f f f f c 
f f f f f f f f c f f f f b c f 
f f f f f f f f f f f b b f f f 
f f f f f f f f f c b f f f f f 
f f f f f f f f c f f f b f f f 
f f f f f f f f f f f f f f f c 
f f f f f f f f f c f f f b c f 
f f f f f f f f f f f b b f f f 
f f f f f f f f f c b f f f f c 
f f f f f f f f c f f f f b c f 
f f f f f f f f f f f b b f f f 
f f f f f f f f f c b f f f f f 
f f f f f f f f c f f f c f f f 
`
    //% blockIdentity=images._tile
    export const tile37 = img`
f f f f f f f f 8 f f f f 8 f f 
f f f f f f f f f c f f f f 8 f 
f f f f f f f f f c c f f f f f 
f f f f f f f f f f c c 8 c c f 
f f f f f f f f f f f f c c c f 
f f f f f f f f f f f f f f f f 
f f f f f f f f f f f f f f f f 
f f f f f f f f f f f f f f f f 
f f f f f f f c f f f f f f f c 
f f f f f f f c f f f f f f f c 
f f f f f f f c c f f f f f c c 
f f f f f f f c c f f f f f c c 
f f f f f f f c c b f f f c c c 
f f f f f f f c 8 c f b f c c c 
f f f f f f f c c f c c c f c c 
f f f f f f f c f c c c c 8 f b 
`
    //% blockIdentity=images._tile
    export const tile38 = img`
f c b b b c c c f c c 8 b b b f 
c b 8 f f f c c c c c f f f b c 
c b f f f f f c c c f f f f f b 
c b f f f f f 8 b b f f f f f b 
b b c f f f b b f b b f f f c c 
f c c c c c b f f f c c c c c f 
f f c c c c c b b b c c c c f f 
f f c f c f f b b f f c f c f f 
f f f f f f f f f f f f f f f f 
c f f f f f f f c f f f f f f f 
c f f f f f f f c f f f f f f f 
c c f f f f f c c c f f f f f c 
c c c f f f c c c c c f f f b c 
c c b f c f c c c c b f c f 8 c 
c 8 f c c c f c c 8 f c c c f c 
c f c c c c c f c f c c c c c f 
`
    //% blockIdentity=images._tile
    export const tile39 = img`
f f 8 f f f f 8 f f f f f f f f 
f 8 f f f f 8 f f f f f f f f f 
f f f f f 8 c f f f f f f f f f 
f c c c c c f f f f f f f f f f 
f c c c f f f f f f f f f f f f 
f f f f f f f f f f f f f f f f 
f f f f f f f f f f f f f f f f 
f f f f f f f f f f f f f f f f 
c f f f f f f f c f f f f f f f 
c f f f f f f f c f f f f f f f 
c c f f f f f c c f f f f f f f 
c c f f f f f c c f f f f f f f 
c c c f f f c c c f f f f f f f 
c c c f 8 f c c c f f f f f f f 
c c f 8 c c f c c f f f f f f f 
c f c c c c c f c f f f f f f f 
`
    //% blockIdentity=images._tile
    export const tile40 = img`
f f f f f f f f f f f f f f f f 
f f f f f f f f f f f f f f f f 
f f f c c f f f f f f f f f f f 
f c c f f f f c f f f f f f f f 
c f f f f b c f f f f f f f f f 
f f f b b f f f f f f f f f f f 
f c b f f f f f f f f f f f f f 
c f f f b f f f f f f f f f f f 
f f f f f f f c f f f f f f f f 
f c f f f b c f f f f f f f f f 
f f f b b f f f f f f f f f f f 
f c b f f f f c f f f f f f f f 
c f f f f b c f f f f f f f f f 
f f f b b f f f f f f f f f f f 
f c b f f f f f f f f f f f f f 
c f f f c f f f f f f f f f f f 
`
    //% blockIdentity=images._tile
    export const tile41 = img`
2 2 2 e e e e e e e 4 4 e e e e 
d d 2 e e e e e e d 4 4 d d d e 
4 4 d d d d e e d 4 4 4 4 4 4 4 
4 4 4 4 4 4 e e 4 4 4 4 4 4 d 4 
4 d 4 4 4 4 e d 4 4 4 4 4 4 4 4 
e e e e e c c c e e 4 d 4 4 2 e 
4 d e e e 4 d d d e e 2 2 e e d 
4 4 4 4 4 4 4 4 4 d e e e d 4 4 
4 4 4 4 4 4 d 4 4 4 d c 4 4 4 4 
2 e 2 d 4 4 4 4 4 4 c c c c 4 4 
e e e e e e c c e e e e e e 2 2 
e 4 4 d d c c d d d e e e d d e 
4 4 4 4 4 d e 4 4 d d 4 4 4 4 d 
4 4 d 4 4 4 e 4 4 4 4 4 d 4 4 4 
4 4 4 4 e e e e 2 4 4 4 4 4 c c 
e e e e e e e e e e e e c c c c 
`
    //% blockIdentity=images._tile
    export const tile42 = img`
e e e e e b e e e e e e e e e e 
e e e e b d d d e e e e e c c c 
d d d e d d 4 4 4 d 4 d d d d c 
4 4 e e d 4 4 4 4 4 d 4 4 4 4 e 
4 4 e e d d d 4 d 4 4 4 4 4 4 e 
c e e e e e e 4 4 4 4 b e e e e 
c 4 d d d e e c c c c c d 4 4 4 
4 4 4 4 4 4 4 c e 4 d d 4 4 4 d 
4 4 4 d 4 4 4 e e 4 4 4 4 4 d 4 
d 4 4 4 4 4 4 e e e b c c 4 4 4 
c c e e e b c c c d d d c e e e 
c e e e b b d d d 4 4 4 4 4 e d 
d d e e d d 4 4 4 4 4 4 4 4 4 4 
4 4 4 e d 4 4 4 4 4 4 4 d 4 4 4 
4 4 4 4 e c 4 4 4 d 4 4 4 4 4 4 
c e e d e e e e e e e e e e e e 
`
    //% blockIdentity=images._tile
    export const tile43 = img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. c . . . . . . . . . . . c . . 
. c d . . . b b b . . . d c . . 
. c d d d b b b b b d d d c . . 
. . c d b b c c c b b d c . . . 
. . . b b c c b c c b b . . . . 
. . . b c f f b f f c b . . . . 
. . . b c f f b f f c b . . . . 
. . . b b c f f f c b b . . . . 
. . . b b b c f c b b b . . . . 
. . . . b b c f c b b . . . . . 
. . . . c c c . c c c . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`
    //% blockIdentity=images._tile
    export const tile45 = img`
7 7 7 7 7 6 6 6 7 7 7 6 7 7 6 6 
6 6 6 6 7 6 7 7 7 7 7 7 7 6 6 6 
6 6 6 7 7 6 6 6 6 7 6 7 7 7 7 6 
6 7 7 7 7 7 7 7 7 7 6 7 7 6 7 6 
6 7 6 6 6 7 c c 7 7 7 7 7 6 7 7 
7 7 c 6 7 7 c c c 7 7 7 7 7 7 7 
7 c c 6 7 c e f f c f 7 7 f 7 7 
7 e c 7 7 f f e f f e 7 7 f f 7 
f f f f c f f f f f e e f e f 7 
f f c f c f f c c f e f e f f f 
f e e f f e e f f c f f f f f c 
f f f f f f f c e f f f e f f e 
f f f e f f c c e e f f e f f f 
f e f e e e f f f e f f f f f f 
f f f f f f e c c f f c f e e f 
e f c c c e e e e e e f f e e e 
`
    //% blockIdentity=images._tile
    export const tile46 = img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . d d d d d d d d d d d d . 
. . d e e e e e e e e e e e e . 
. . d e e e e e e e e e e e e . 
. . d e e e f e f e f e e e e . 
. . . d e e e e e e e e e e . . 
. . . . . . . c c c . . . . . . 
. . . . . . . e e e . . . . . . 
. . . . . . . e e e . . . . . . 
. . . . . . . e e e . . . . . . 
. . . . . . . e e e . . . . . . 
. . . . . . . e e e . . . . . . 
. . . . . . . e e e . . . . . . 
`
    //% blockIdentity=images._tile
    export const tile47 = img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . d d d d d d d d d d d d . 
. . d e e e e e e e e e e e e . 
. . d e e e e e e e e e e e e . 
. . d e e e f e f e f e f e e . 
. . . d e e e e e e e e e e . . 
. . . . . . . c c c . . . . . . 
. . . . . . . e e e . . . . . . 
. . . . . . . e e e . . . . . . 
. . . . . . . e e e . . . . . . 
. . . . . . . e e e . . . . . . 
. . . . . . . e e e . . . . . . 
. . . . . . . e e e . . . . . . 
`
    //% blockIdentity=images._tile
    export const tile48 = img`
1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
`
    //% blockIdentity=images._tile
    export const tile49 = img`
9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 
9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 
9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 
9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 
9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 
9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 
9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 
9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 
9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 
9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 
9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 
9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 
9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 
9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 
9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 
9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 
`
    //% blockIdentity=images._tile
    export const tile50 = img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
f f f f f f f f f f f f f f f f 
f f f f f f f f f f f f f f f f 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`
}
sprites.onOverlap(SpriteKind.Player, SpriteKind.Bat3, function (sprite, otherSprite) {
    Hurt()
    pause(500)
})
sprites.onOverlap(SpriteKind.Projectile, SpriteKind.SkeleArcher, function (sprite, otherSprite) {
    sprite.destroy()
    for (let index = 0; index < 4; index++) {
        otherSprite.setFlag(SpriteFlag.Invisible, true)
        pause(15)
        otherSprite.setFlag(SpriteFlag.Invisible, false)
        pause(15)
    }
    sprites.changeDataNumberBy(otherSprite, "Hits", sprites.readDataNumber(sprite, "Damage"))
    DmgNoSprite = sprites.create(img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, SpriteKind.DamageNumber)
    DmgNoSprite.setImage(DmgNumberList[DamageAmount])
    DmgNoSprite.setPosition(otherSprite.x, otherSprite.top - 6)
    animation.runMovementAnimation(
    DmgNoSprite,
    animation.animationPresets(animation.bobbing),
    500,
    false
    )
    clock = game.runtime()
    if (sprites.readDataNumber(otherSprite, "Hits") <= 0) {
        SkeleDeathAnim = sprites.create(img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, SpriteKind.EnemyDeathPartical)
        SkeleDeathAnim.setPosition(otherSprite.x, otherSprite.y)
        otherSprite.destroy()
        animation.runImageAnimation(
        SkeleDeathAnim,
        [img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . 1 1 . . . 
. . . . . . . . . . 1 1 1 1 . . 
. . . . . . 1 . . . f 1 f 1 . . 
. . . . . 1 1 . . . 1 1 1 1 . . 
. . . . . . . 1 . . . 1 1 1 . . 
. . . . . . . . 1 1 . . . . . . 
. . . . . . . . 1 . . . . . . . 
. . . 1 . . 1 . . . . 1 . 1 . . 
. . . . 1 1 . . . . . . 1 . . . 
. . . 1 . . 1 . . . 1 1 1 . . . 
. . . . . . . . . 1 1 . . . . . 
. . . . . . . . . . 1 . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`,img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . 1 1 1 . . 
. . . . . . . . . . 1 1 1 1 1 . 
. . . . 1 . . . 1 . 1 1 1 f 1 . 
. . . . . 1 1 1 . . . f 1 1 1 . 
. . . . 1 . . . 1 . . . 1 1 1 . 
. . . . . . . . . . . . . . . . 
. . . . . 1 . . . . . . . 1 . . 
. . . . . 1 1 . . . . . . 1 1 . 
. . . 1 1 1 . . . . . 1 1 1 . . 
. . 1 1 . . . . . . . 1 . . . . 
. . . 1 . . . . . 1 . 1 . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`,img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . 1 . . . . 1 1 1 1 . 
. . . . . . 1 1 . . . 1 1 1 1 . 
. . . . . 1 . . . . . f 1 1 1 . 
. . . 1 1 . . . . . . . 1 1 1 . 
. . . . 1 . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . 1 . . . . . . . 1 1 
. . . . . . 1 1 . . . . . 1 1 . 
. . . . 1 1 . . . . . . 1 . . . 
. . . . 1 . . . . . . . . 1 . . 
. . . . . . . . . . . . . . . . 
`,img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . 1 . . . . . . 1 1 1 1 . 
. . . . 1 1 . . . . . 1 1 1 1 . 
. . . 1 . . . . . . . f 1 1 1 . 
. 1 1 . . . . . . . . . 1 1 1 . 
. . 1 . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . 1 . . . . . . . . . 1 1 
. . . . 1 1 . . . . . . . 1 1 . 
`,img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . 1 . . . . . . . . . . . 
. . . . 1 1 . . . . . 1 1 1 1 . 
. . . 1 . . . . . . . 1 1 1 1 . 
. 1 1 . . . . . . . . f 1 f 1 . 
. . 1 . . . . . . . . . 1 1 1 . 
`],
        100,
        false
        )
    }
})
sprites.onOverlap(SpriteKind.Player, SpriteKind.Heart, function (sprite, otherSprite) {
    info.changeLifeBy(1)
    otherSprite.destroy()
})
sprites.onCreated(SpriteKind.Projectile, function (sprite) {
    if (WeaponLevel == 0 && chargelevel == 0) {
        sprites.setDataNumber(sprite, "Damage", -1)
        DamageAmount = 0
    } else if (WeaponLevel == 0 && chargelevel == 1) {
        sprites.setDataNumber(sprite, "Damage", -2)
        DamageAmount = 1
    } else {
        if (WeaponLevel == 0 && chargelevel == 2) {
            sprites.setDataNumber(sprite, "Damage", -3)
            DamageAmount = 2
        }
    }
    if (WeaponLevel == 1 && chargelevel == 0) {
        sprites.setDataNumber(sprite, "Damage", -3)
        DamageAmount = 2
    } else if (WeaponLevel == 1 && chargelevel == 1) {
        sprites.setDataNumber(sprite, "Damage", -4)
        DamageAmount = 3
    } else {
        if (WeaponLevel == 1 && chargelevel == 2) {
            sprites.setDataNumber(sprite, "Damage", -5)
            DamageAmount = 4
        }
    }
    if (WeaponLevel == 2 && chargelevel == 0) {
        sprites.setDataNumber(sprite, "Damage", -4)
        DamageAmount = 3
    } else if (WeaponLevel == 2 && chargelevel == 1) {
        sprites.setDataNumber(sprite, "Damage", -6)
        DamageAmount = 5
    } else {
        if (WeaponLevel == 2 && chargelevel == 2) {
            sprites.setDataNumber(sprite, "Damage", -8)
            DamageAmount = 7
        }
    }
})
sprites.onOverlap(SpriteKind.Player, SpriteKind.WallHazard, function (sprite, otherSprite) {
    if (sprite.vx < 0) {
        sprite.x = otherSprite.x + 12
    } else {
        sprite.x = otherSprite.x - 12
    }
    WallHazardHurt()
    pause(1000)
})
sprites.onOverlap(SpriteKind.Player, SpriteKind.Bat2, function (sprite, otherSprite) {
    Hurt()
    pause(500)
})
function LevelClear () {
    for (let value of sprites.allOfKind(SpriteKind.Sign_1)) {
        value.destroy()
    }
    for (let value of sprites.allOfKind(SpriteKind.Sign_2)) {
        value.destroy()
    }
    for (let value of sprites.allOfKind(SpriteKind.Box)) {
        value.destroy()
    }
    for (let value of sprites.allOfKind(SpriteKind.Spike)) {
        value.destroy()
    }
    for (let value of sprites.allOfKind(SpriteKind.BuildWall)) {
        value.destroy()
    }
    for (let value of sprites.allOfKind(SpriteKind.EndofLevelcamerachange)) {
        value.destroy()
    }
    for (let value of sprites.allOfKind(SpriteKind.Torch)) {
        value.destroy()
    }
    for (let value of sprites.allOfKind(SpriteKind.Heart)) {
        value.destroy()
    }
    for (let value of sprites.allOfKind(SpriteKind.PowerUp)) {
        value.destroy()
    }
    for (let value of sprites.allOfKind(SpriteKind.WallHazard)) {
        value.destroy()
    }
    for (let value of sprites.allOfKind(SpriteKind.LaunchPad)) {
        value.destroy()
    }
    for (let value of sprites.allOfKind(SpriteKind.Ladder)) {
        value.destroy()
    }
    for (let value of sprites.allOfKind(SpriteKind.Slime)) {
        value.destroy()
    }
    for (let value of sprites.allOfKind(SpriteKind.SkeleArcher)) {
        value.destroy()
    }
    for (let value of sprites.allOfKind(SpriteKind.Bat)) {
        value.destroy()
    }
    for (let value of sprites.allOfKind(SpriteKind.Bat2)) {
        value.destroy()
    }
    for (let value of sprites.allOfKind(SpriteKind.Bat3)) {
        value.destroy()
    }
    for (let value of sprites.allOfKind(SpriteKind.BatAggro)) {
        value.destroy()
    }
    for (let value of sprites.allOfKind(SpriteKind.BatAggro2)) {
        value.destroy()
    }
    for (let value of sprites.allOfKind(SpriteKind.BatAggro3)) {
        value.destroy()
    }
    for (let value of sprites.allOfKind(SpriteKind.LevelEnd)) {
        value.destroy()
    }
    ChangeLevel()
}
sprites.onOverlap(SpriteKind.Player, SpriteKind.Ladder, function (sprite, otherSprite) {
    if (controller.up.isPressed()) {
        climbingladder = 1
    }
    if (controller.up.isPressed()) {
        mySprite.y += -1
    }
    if (controller.down.isPressed()) {
        mySprite.y += 1
    }
    if (controller.A.isPressed() && (controller.left.isPressed() || controller.right.isPressed())) {
        mySprite.vy = -120
        mySprite.vx += 22 * SpriteFlipHoriz
    } else {
        if (climbingladder == 1) {
            mySprite.x = otherSprite.x
            mySprite.ay = 0
            mySprite.vy = 0
            mySprite.vx = 0
        }
    }
})
scene.onOverlapTile(SpriteKind.Player, myTiles.tile50, function (sprite, location) {
    checkpoint = 1
})
sprites.onOverlap(SpriteKind.Player, SpriteKind.BossFireball, function (sprite, otherSprite) {
    Hurt()
    otherSprite.destroy(effects.fire, 500)
})
sprites.onCreated(SpriteKind.Dust, function (sprite) {
    sprite.destroy(effects.ashes, 10)
})
sprites.onCreated(SpriteKind.BossDeathPartical, function (sprite) {
    BossDeathClock = game.runtime()
})
sprites.onOverlap(SpriteKind.Player, SpriteKind.Boss1, function (sprite, otherSprite) {
    Hurt()
    pause(500)
})
function ChangeLevel () {
    if (Level == 0) {
        tiles.setTilemap(tiles.createTilemap(
            hex`5fa000000000000000000000000000000000000000000000000000000000000000000000000002427272727272727272727272727010101010101010101010101010101010101010101010000000000000000000000000000000000000025262a000000000000000000000000000000000000000000000000000000000000000000000000002526262626262626262626262626010101010101010101010101010101010101010101010000000000000000000000000000000000000025262a000000000000000000000000000000000000000000000000000000000000000000000000002c26262626262626262626262626010101010101010101010101010101010101010101010000000000000000000000000000000000000025262a000000000000000000000000000000000000000000000000000000000000000000000000000014000014000014000000000000010101010101010101010101010101010101010101010000000000000000000000000000000000000025262a000000000000000000000000000000000000000000000000000000000000000000000000000014000014000014000000000000010101010101010101010101010101010101010101010000000000000000000000000000000000000025262a00000000000000000000000000000000000000000000000000000000000000000000000000001400001400001400001a1b1c00010101010101010101010101010101010101010101010000000000000000000000000000000000000025262a0000000000000000000000000000000000000000000000000000000000000000000000000000140000140000000000190f1d00010101010101010101010101010101010101010101010000000000000000000000000000000000000025262a000000000000000000000000000000000000000000000000000000000000000000000000000014000014000000000604040404010101010101010101010101010101010101010101010000000000000000000000000000000000000025262a000000000000000000000000000000000000000000000000000000000000000000000000000014000014000000000301010101010101010101010101010101010101010101010101010000000000000000000000000000000000000025262a00000000000000000000000000000000000000000000000000002223232323232323280000001400000000000000080707070701010101010101010101010101010101010101010101000000000000000000000000000000000000002c262b00000000000000000000000000000000000000000000000000002427272727272727290000001400000000000000000000000001010101010101010101010101010101010101010101000000000000000000000000000000000000000b000b000000000000000000000000000000000000000000000000000025262626262626262a000000140000000000000000000000000301010101010101010101010101010101010101010100000000000022232800000000000000002223232323232800000000000000000000000000001500002f0000000000002c262626262626262a000000140000000000000000000000000301010101010101010101010101010101010101010100000000000024272900000000000000002427272727272900000000000000000000000022232323232323280000000000002526262626262a000000000000000000000000000000000301010101010101010101010101010101010101010100000000000025262a00000000000000002526262626262a00000000000000000000000024272727272727290000000000002526262626262a232323232800000000000000000000000301010101010101010101010101010101010101010100000a002e0025262a00000000000d00002526262626262a000000000000000015000000252626262626262a0c0c0c0c0c0c2526262626262627272727290c0c0c0c0c0c0c0c0c0c0c0301010101010101010101010101010101010101010123232323232325262a23232323232323232526262626262a232323232323232323232323252626262626262a30303030303025262626262626262626262a303030303030303030303003010101010101010101010101010101010101010101272727272727262626272727272727272726262626262626272727272727272727272727262626262626262a30303030303025262626262626262626262a303030303030303030303003010101010101010101010101010101010101010101262626262626262626262626262626262626262626262626262626262626262626262626262626262626262a30303030303025262626262626262626262a303030303030303030303003010101010101010101010101010101010101010101`,
            img`
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
. . . . . . . . . . . . . . . . . . . 2 2 2 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . 2 2 2 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . 2 2 2 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . 2 2 2 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 2 2 2 2 2 2 2 . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . 2 2 2 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 2 2 2 2 2 2 2 . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . 2 2 2 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 2 2 2 2 2 2 2 . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . 2 2 2 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 2 2 2 2 2 2 2 . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . 2 2 2 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 2 2 2 2 2 2 2 2 2 2 2 2 . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . 2 2 2 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 2 2 2 2 2 2 2 2 2 2 2 2 . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . 2 2 2 . . . . . . . . . . . . . . . . . . . . . . . . . . 2 2 2 2 2 2 2 2 2 . . . . . . . . . . . 2 2 2 2 2 2 2 2 2 2 2 2 . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . 2 2 2 . . . . . . . . . . . . . . . . . . . . . . . . . . 2 2 2 2 2 2 2 2 2 . . . . . . . . . . . . . . . . 2 2 2 2 2 2 2 . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 2 2 2 2 2 2 2 2 2 . . . . . . . . . . . . . . . . 2 2 2 2 2 2 2 . . . . . . . . . . . . . . . 
. . . . . . 2 2 2 . . . . . . . . 2 2 2 2 2 2 2 . . . . . . . . . . . . . . . . . . . . . . . . 2 2 2 2 2 2 2 2 2 . . . . . . . . . . . . . . . . 2 2 2 2 2 2 2 . . . . . . . . . . . . . . . 
. . . . . . 2 2 2 . . . . . . . . 2 2 2 2 2 2 2 . . . . . . . . . . . . 2 2 2 2 2 2 2 2 . . . . . . 2 2 2 2 2 2 2 . . . . . . . . . . . . . . . . 2 2 2 2 2 2 2 . . . . . . . . . . . . . . . 
. . . . . . 2 2 2 . . . . . . . . 2 2 2 2 2 2 2 . . . . . . . . . . . . 2 2 2 2 2 2 2 2 . . . . . . 2 2 2 2 2 2 2 2 2 2 2 2 . . . . . . . . . . . 2 2 2 2 2 2 2 . . . . . . . . . . . . . . . 
. . . . . . 2 2 2 . . . . . . . . 2 2 2 2 2 2 2 . . . . . . . . . . . . 2 2 2 2 2 2 2 2 . . . . . . 2 2 2 2 2 2 2 2 2 2 2 2 . . . . . . . . . . . 2 2 2 2 2 2 2 2 . . . . . . . . . . . . . . 
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 . . . . . . . . . . . . . . 
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 . . . . . . . . . . . . . . 
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 . . . . . . . . 2 2 2 2 2 2 
`,
            [myTiles.tile0,myTiles.tile5,myTiles.tile6,myTiles.tile11,myTiles.tile13,myTiles.tile15,myTiles.tile16,myTiles.tile17,myTiles.tile18,myTiles.tile19,myTiles.tile20,myTiles.tile21,myTiles.tile22,myTiles.tile23,myTiles.tile24,myTiles.tile25,myTiles.tile26,myTiles.tile27,myTiles.tile29,myTiles.tile30,myTiles.tile31,myTiles.tile32,myTiles.tile33,myTiles.tile34,myTiles.tile35,myTiles.tile36,myTiles.tile37,myTiles.tile38,myTiles.tile39,myTiles.tile40,myTiles.tile41,myTiles.tile42,myTiles.tile43,myTiles.tile45,sprites.builtin.forestTiles1,sprites.builtin.forestTiles2,sprites.builtin.forestTiles5,sprites.builtin.forestTiles9,sprites.builtin.forestTiles10,sprites.builtin.forestTiles6,sprites.builtin.forestTiles3,sprites.builtin.forestTiles7,sprites.builtin.forestTiles11,sprites.builtin.forestTiles15,sprites.builtin.forestTiles13,sprites.builtin.forestTiles14,myTiles.tile46,myTiles.tile47,myTiles.tile48,myTiles.tile49,myTiles.tile50],
            TileScale.Sixteen
        ))
        scene.setBackgroundImage(img`
f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f 
f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f 
f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f 
f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f 8 8 8 8 8 8 f f f f f f f f f f f f f f f f f 8 8 8 f 8 8 8 8 f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f 
f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f 8 8 8 8 8 8 8 8 8 8 f f f f f f f f f f f f f f 8 8 8 8 8 f 8 8 8 8 8 f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f 
f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f 8 8 8 8 8 8 8 8 8 8 8 8 8 8 f f f f f f f f f f f 8 8 8 8 8 8 8 f f 8 8 8 8 8 f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f 
f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 f f f f f f f f f 8 8 8 8 8 8 8 8 f f 8 8 8 8 8 f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f 
f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f 8 8 8 8 f f f f f f f f f f 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 f f f f f f f 8 8 8 8 8 8 8 8 8 8 f 8 8 8 8 8 8 f f f f 8 8 8 f f f f f f f 8 8 f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f 
f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f 8 8 8 8 8 8 8 8 f f f f 8 8 8 8 8 8 8 8 f f f f f f 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 f f 8 8 8 8 8 8 8 8 8 8 8 8 f f 8 8 8 8 8 f f f f 8 8 8 8 8 f f f f 8 8 8 8 f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f 
f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 f f f f f 8 8 8 8 8 8 8 8 f f 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 f f 8 8 8 8 8 f f f 8 8 8 8 8 f f f f 8 8 8 8 f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f 
f f f f f f f f f f f f f f f 8 8 8 8 8 8 8 8 8 8 8 8 f f f f f f f f f f f f f f f f 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 f f f f f 8 8 8 8 8 8 8 f f f 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 f f f 8 8 8 8 8 f f f f 8 8 8 f f f 8 8 8 8 8 f 8 f f 8 f f f f f f f f f f f f f f f f f f f f f f f f f 
f f f f f f f f f f f f f f f 8 f f 8 f 8 8 8 8 8 8 8 8 f f f f f f f f f f f f f f f f f f 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 f f f f f 8 8 8 8 8 f f f f 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 f f 8 8 8 8 8 8 f f f 8 8 f f f 8 8 8 8 8 8 f 8 8 8 8 f 8 f f f f f f f f f f f f f f f f f f f f f f f 
f f f f f f f f f f f f f 8 8 8 f f f f 8 8 8 8 8 8 8 8 8 8 f f f f 8 8 8 f f f f f f f f f f f f 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 f f f f f 8 8 8 f f f f 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 f f 8 8 8 8 8 8 f f 8 8 f f f 8 8 8 8 8 8 f 8 8 8 8 f 8 f f f f f f f f f f f f f 8 8 f f f f f f f f 
f f f f f f f f f f f 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 f 8 8 8 8 f 8 8 f f f f f f f f f 8 8 8 8 8 8 8 8 8 8 8 8 8 8 f f f f f f f f f f 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 f f 8 8 8 8 8 f f 8 f f f 8 8 8 8 8 8 8 f 8 8 8 f 8 8 f f f f f f f f f f f 8 8 8 8 8 8 f f f f f f 
f f f f f f f f f f f 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 f 8 8 8 f f 8 8 8 8 8 8 f f f f f f f f f f 8 8 8 8 8 8 8 8 f f f f f f f f f f 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 f f 8 8 8 8 f f 8 f f 8 8 8 8 8 8 8 8 f 8 8 f 8 8 8 8 f f f f f f f f f f 8 8 8 8 8 8 f f f f f f 
f f f f f f f f f f 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 f 8 8 f f 8 8 8 8 8 8 f 8 f f f f f f f f f f f f f f f f f f f f f f f f f 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 f f f 8 8 8 f f f f f 8 8 8 8 8 8 8 8 f 8 8 f 8 8 8 8 f f f f f f f f f 8 8 8 8 8 8 8 f f f f f f 
f f f f f f f f f 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 f 8 f f f 8 8 8 8 8 8 f 8 8 8 f f f f f f f f f f f f f f f f f f f f f f f 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 f 8 8 f f f f f 8 8 8 8 8 8 8 8 f 8 f f 8 8 8 8 f f f f f f f f 8 8 8 8 8 8 8 8 f f f f f f 
f f f f f f f f f 8 8 8 8 8 8 8 8 8 8 8 8 f f f 8 8 8 8 8 8 8 8 8 8 f f f 8 f 8 8 8 8 8 8 f 8 8 8 f f f f f f f f f f f f f f f f f f f f f f 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 6 f f f f f f f 8 8 8 8 8 8 8 8 8 f f f 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 f f f f f f 
f f f f f f f f 8 8 8 8 8 8 8 8 8 8 f f f f f 8 8 8 8 8 8 8 8 8 8 8 8 f f 8 f 8 8 8 8 8 8 f f 8 f f 6 f f f f f f f f f f f f f f f f f f f f 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 6 6 f f f f f f 8 8 8 8 8 8 8 8 8 8 f f 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 f f f f f f f 
f f f f f f f f 8 8 8 8 8 8 8 f f f f f f f 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 f 8 8 8 8 8 8 f f 8 f 6 6 6 6 f f f f f f f f f f f f f f f f f f 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 6 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 6 6 6 6 6 6 6 f f f f 8 8 8 8 8 8 8 8 f f f 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 f f f f f f f 
f f f f f f f f 8 8 8 8 8 f f f f f f f f 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 f 8 8 8 8 8 8 f f 8 f 6 6 6 6 6 f f f f f f f f f f f f f f f f f 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 6 6 6 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 6 6 6 6 6 6 6 6 f f f f 6 6 8 8 8 8 8 f f 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 f f f f f f f 
f f f f f f f 8 8 8 8 f f f f f f f f f 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 f 8 8 8 8 8 8 f f f f 6 6 6 6 6 f f f f f f f f f f f f f f f f 8 8 8 8 8 8 8 8 8 8 8 8 6 8 6 6 6 6 6 6 6 6 8 8 8 6 6 6 6 6 6 6 6 8 8 8 8 8 6 6 6 6 6 6 6 6 6 6 f f f 6 6 6 6 6 8 8 f 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 f f f f f f f 
f f f f f f f 8 8 8 f f f f f f f f f 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 f 8 8 8 8 8 8 f 6 f f 6 6 6 6 6 6 f f f f f f f f f f f f f f f 6 6 6 6 6 6 6 6 6 6 6 6 6 8 6 6 6 6 6 6 6 6 8 8 8 6 6 6 6 6 6 6 6 6 6 8 8 6 6 6 6 6 6 6 6 6 6 6 f f f 6 6 6 6 6 6 f 6 8 8 8 6 6 6 6 6 8 8 8 6 6 8 8 8 8 8 8 8 8 8 8 8 f f f f f f f 
f f f f f f f f f f f f f f f f f f 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 f f 8 8 8 8 8 f 6 f f 6 6 6 6 6 6 6 f f f f f f f f f f f f f f 6 6 6 6 6 6 6 6 6 6 6 6 6 8 6 6 6 6 6 6 6 6 8 8 8 6 6 6 6 6 6 6 6 6 6 8 6 6 6 6 6 6 6 6 6 6 6 6 6 f f 6 6 6 6 6 6 f 6 6 6 6 6 6 6 6 6 8 8 8 6 6 6 6 8 6 8 8 8 8 8 8 8 f f f f f f f 
f f f f f f f f f f f f f f f f f 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 f 8 8 8 8 f f 6 f f 6 6 6 6 6 6 6 f f f f f f f f f f f f f f 6 6 6 6 6 6 6 6 6 6 6 6 6 8 8 6 6 6 6 6 6 6 8 8 8 6 6 6 6 6 6 6 6 8 8 6 6 6 6 6 6 6 6 6 6 6 6 6 6 f f 6 6 6 f f 6 6 6 6 6 6 6 6 6 6 6 8 8 8 6 6 6 6 8 6 6 8 8 8 8 8 8 8 f f f f f f 
f f f f f f f f f f f f f f f 9 9 8 8 8 8 9 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 f 8 8 f f 6 6 f 6 6 6 6 6 6 6 6 6 f f f f f f f f f f f f 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 8 8 6 6 6 6 6 6 8 8 6 6 6 6 6 6 6 6 8 8 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 f f f f f f f 6 6 6 6 6 6 6 6 6 6 6 8 8 8 6 6 6 6 8 6 6 6 8 8 8 8 8 8 f f f f f f 
f f f f f f f f f f f f f f 9 9 9 8 8 8 9 9 9 9 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 f f f f 6 6 6 6 6 6 6 6 6 6 6 6 6 f f f f f f f f f f f f 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 8 8 8 6 6 6 6 8 8 6 6 6 6 6 6 6 8 8 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 f f f f 6 6 6 6 6 6 6 6 6 6 6 6 8 8 8 8 6 6 6 6 8 8 6 6 6 6 8 8 8 8 f f f f f f 
f f f f f f f f f f f f f 9 9 9 9 9 8 9 9 9 9 9 9 8 9 8 8 8 8 8 8 8 8 8 8 8 8 8 8 f f 6 6 6 6 6 6 6 6 6 6 6 6 6 6 f f f f f f f f f f f f 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 8 8 6 6 6 8 8 6 6 6 6 6 6 8 8 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 f f f f 6 6 6 6 6 6 6 9 9 6 6 6 8 8 8 8 6 6 6 6 8 8 8 6 6 6 6 6 6 6 f f f f f f 
f f f f f f f f f f f 9 9 9 9 9 9 9 8 8 9 9 9 9 9 8 9 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 f f f f f f f f f f 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 8 8 8 6 8 6 6 6 6 6 8 8 8 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 f f f f 6 6 6 9 9 9 9 9 9 9 6 6 6 8 8 8 8 6 6 6 8 8 8 6 6 6 6 6 6 6 f f f f f f 
f f f f f f f f f f 9 9 9 9 9 9 9 9 8 8 9 9 9 9 9 8 9 9 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 f f f f f f f f f f 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 8 8 8 8 6 6 6 6 8 8 8 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 f f f f 9 9 9 9 9 9 9 9 9 9 9 9 9 8 8 8 8 9 9 9 8 8 8 6 6 6 6 6 6 6 f f f f f f 
f f f f f f f f f f 9 9 9 9 9 9 9 9 8 8 9 9 9 9 9 8 9 9 9 9 8 8 8 8 8 8 8 8 8 8 8 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 f f f f f f f f f f 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 8 8 8 8 6 6 8 8 8 6 6 6 6 6 9 6 9 9 9 9 9 6 6 6 6 6 9 6 6 6 6 f f f f f 9 9 9 9 9 9 f f 9 9 9 9 9 8 8 8 8 9 9 8 8 8 6 6 6 6 6 6 6 f f f f f f 
f f f f f f f f f 9 9 9 9 9 9 9 9 9 8 8 9 9 9 9 9 8 9 9 9 9 8 8 8 8 8 8 8 8 8 8 8 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 f f f f f f f f f 6 6 6 6 6 6 6 6 6 6 6 6 f f 6 6 6 6 6 6 6 6 6 8 8 8 8 8 8 8 6 6 6 6 9 9 9 9 9 9 9 9 9 6 6 6 9 9 9 9 6 6 6 f f f f f f 9 9 9 9 9 f f 9 9 9 9 9 9 8 8 8 8 9 8 8 8 9 6 6 6 6 6 6 f f f f f f 
f f f f f f f f f 9 9 9 9 9 9 9 9 9 8 8 8 9 9 9 9 8 9 9 9 9 8 8 8 8 8 8 8 8 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 f f f f f f f f f 6 6 6 6 6 6 6 6 6 6 6 6 6 f 6 6 6 6 6 6 6 6 6 8 8 8 8 8 8 6 6 6 6 9 9 9 9 9 9 9 9 9 9 6 6 6 9 9 9 9 6 6 9 9 f f f f f 9 9 9 9 9 f f 9 9 9 9 9 9 9 8 8 8 8 9 8 8 9 9 9 9 9 9 9 f f f f f f 
f f f f f f f f f 9 9 9 9 9 9 9 9 9 9 8 8 9 9 9 9 8 9 9 9 9 8 8 9 9 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 f f f f f f f f f 6 6 6 6 6 6 6 6 f f f f f f f 6 6 6 6 6 6 6 6 6 8 8 8 8 9 6 6 6 6 6 6 9 9 9 9 6 6 9 9 6 6 6 9 6 6 6 6 6 9 9 9 f f f f f 9 9 9 f f f 9 9 9 9 9 9 9 9 9 8 8 9 8 8 9 9 f 9 9 9 f f f f f f f 
f f f f f f f f f 9 9 9 9 9 9 9 9 9 9 8 8 8 9 9 9 8 9 9 9 8 8 9 9 9 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 f f f f f f f f f 6 6 6 6 6 6 6 6 6 6 6 f f 6 6 6 6 6 6 6 6 6 6 6 8 8 9 9 9 9 6 6 6 6 6 6 6 6 6 9 6 9 6 6 6 6 6 6 6 6 6 6 9 9 9 9 f f f f 9 9 9 f f f 9 9 9 9 9 9 9 9 9 9 8 8 8 8 9 9 f f f f f f f f f f f 
f f f f f f f f f 9 9 9 9 9 9 9 9 9 9 9 8 8 8 9 9 8 9 9 8 8 8 9 9 9 9 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 f f f f f f f f f 6 6 6 6 6 6 6 6 6 6 f f f 6 6 6 6 6 6 6 6 6 6 6 8 8 9 9 9 9 9 9 6 6 6 6 9 9 9 9 6 6 6 6 6 6 6 6 9 9 9 9 9 9 9 9 9 f f f f 9 9 f f f 9 9 9 9 9 9 9 9 9 9 9 8 8 8 9 9 f f f f f f f f f f f 
f f f f f f f f f 9 9 9 9 9 9 9 9 9 9 9 9 8 8 8 8 8 9 9 8 8 9 9 9 9 9 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 f f f f f f f f f 6 6 6 6 6 6 6 f f f f f f 6 6 6 6 6 6 6 6 6 6 6 8 8 8 8 9 9 9 9 6 6 6 6 9 9 9 9 9 9 9 6 6 9 9 9 9 9 9 9 9 9 9 9 9 f f f f f f f f f 9 9 9 9 9 9 9 9 9 9 9 8 8 8 8 9 9 f f f f f f f f f f 
f f f f f f f f 9 9 9 9 9 9 9 9 9 9 9 9 9 8 8 8 8 9 8 8 8 9 9 9 9 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 9 9 6 6 6 6 6 6 6 f f f f f f f f f 6 6 9 9 9 9 6 f f f f 9 9 9 6 6 6 9 9 6 6 6 6 9 8 8 8 8 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 6 6 9 9 9 9 9 9 9 9 9 9 9 9 f f f f f 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 8 8 8 9 9 9 9 f f f f f f f f 
f f f f f f f f 9 9 9 9 9 9 9 9 9 9 9 9 9 8 8 8 8 8 8 8 8 9 9 9 9 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 9 9 9 9 6 6 6 6 9 9 f f f f f f f f f 9 9 9 9 9 f f f f f 9 9 9 9 6 6 6 9 9 9 9 9 9 9 8 8 8 8 9 9 9 9 9 9 9 9 9 9 9 9 9 9 6 6 6 9 9 9 9 9 9 9 9 9 9 9 9 f f f f 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 8 8 8 9 9 9 9 f f f f f f f 
f f f f f f f f 9 9 9 9 9 9 9 9 9 9 9 9 9 8 8 8 8 8 8 8 8 9 9 9 9 9 6 6 9 9 6 6 6 6 6 6 6 6 6 6 9 9 9 9 6 6 6 9 9 9 f f f f f f f f f 9 9 9 9 f f f 6 6 6 9 9 9 6 6 6 6 9 9 9 9 9 9 9 8 8 8 8 9 9 9 9 9 9 9 9 9 9 9 9 9 9 6 6 6 9 9 9 9 9 9 9 9 9 9 9 9 9 f f f f 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 8 8 8 9 9 9 9 9 f f f f f f 
f f f f f f f f 9 9 9 9 f 9 9 9 9 9 9 9 9 8 8 8 8 8 8 9 9 9 9 9 9 9 9 9 9 9 6 6 6 6 6 6 6 6 6 6 9 9 9 9 6 6 6 9 9 9 f f f f f f f f f f 9 f f f f 9 9 6 6 9 9 9 6 6 6 9 9 9 9 9 9 9 9 8 8 8 8 9 9 9 9 9 9 9 9 9 9 9 9 9 9 6 6 6 9 9 9 9 9 9 9 9 9 9 9 9 9 f f f f 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 8 8 8 8 9 9 9 9 9 f f f f f 
f f f f f f f f 9 9 f f 9 9 9 9 9 9 9 9 9 8 8 8 9 9 9 9 9 9 9 9 9 9 9 9 9 9 6 6 6 9 9 9 6 9 9 6 9 9 9 9 6 6 6 9 9 9 f f f f f f f f f f f f f 9 9 9 9 6 6 9 9 9 6 6 6 9 9 9 9 9 9 9 8 8 8 8 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 6 6 6 9 9 9 9 9 9 9 9 9 9 9 9 f f f f 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 8 8 8 8 9 9 9 9 9 f f f f 
f f f f f f f f f f f 9 9 9 9 9 9 9 9 9 9 8 8 8 8 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 6 6 6 6 6 9 9 9 6 6 9 9 9 9 f f f f f f f f f f f f 9 9 9 9 9 9 6 6 6 6 6 6 6 9 9 9 9 9 9 9 8 8 8 8 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 6 6 9 9 9 9 9 9 9 9 9 9 9 9 f f f f 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 8 8 8 9 9 9 9 9 f f f f 
f f f f f f f f f f 9 9 9 9 9 9 9 9 9 9 9 9 8 8 8 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 6 6 9 9 6 6 9 9 9 6 f f f f f f f f f f f 9 9 9 9 9 9 9 6 6 6 6 6 6 9 9 9 9 9 9 9 9 8 8 8 8 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 6 9 9 9 9 9 9 9 9 9 9 9 9 f f f f 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 8 8 8 9 9 9 9 9 f f f f 
f f f f f f f f f f 9 9 9 9 9 9 9 9 9 9 9 9 8 8 8 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 6 6 9 9 6 6 9 9 6 6 f f f f f f f f f f f 9 9 9 9 9 9 9 9 6 6 6 6 6 9 9 9 9 9 9 9 9 8 8 8 8 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 6 6 9 9 9 9 9 9 9 9 9 9 9 9 f f f f 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 8 8 9 9 9 9 9 f f f f 
f f f f f f f f f 9 9 9 9 9 9 9 9 9 9 9 9 9 8 8 8 8 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 6 6 9 6 6 9 9 6 6 f f f f f f f f f f 9 9 9 9 9 9 9 9 9 9 6 6 6 9 9 9 9 9 9 9 9 9 8 8 8 8 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 6 6 6 9 9 9 9 9 9 9 9 9 9 9 9 f f f f 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 8 8 9 9 9 9 9 f f f f 
f f f f f f f f f 9 9 9 9 9 9 9 9 9 9 9 9 9 8 8 8 8 8 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 6 6 6 6 6 9 6 6 6 f f f f f f f f f f 9 9 9 9 9 9 9 9 9 9 9 6 6 6 9 9 9 9 9 9 9 8 8 8 8 8 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 6 6 6 9 9 9 9 9 9 9 9 9 9 9 9 9 f f f f 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 8 8 8 9 9 9 f f f f f 
f f f f f f f f f 9 9 6 6 6 9 9 6 9 9 9 9 9 8 8 8 8 8 8 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 6 6 6 6 6 6 9 f f f f f f f f f 9 9 9 9 9 9 9 9 9 9 9 9 9 6 6 9 9 9 9 9 9 9 8 8 8 8 8 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 6 6 6 9 9 9 9 9 9 9 9 9 9 9 9 9 f f f f 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 8 8 8 9 9 9 f f f f f 
f f f f f f f f 6 6 6 6 6 6 6 6 6 6 9 6 6 9 8 8 8 8 8 8 8 6 6 9 9 9 9 9 9 9 9 9 6 6 9 9 9 9 9 9 9 9 9 9 6 6 9 6 6 9 f f f f f f f f f 9 9 9 9 9 9 9 9 9 9 9 9 9 6 6 9 9 9 9 9 9 8 8 8 8 8 8 9 9 9 9 9 9 9 9 9 9 8 8 8 9 9 9 9 6 6 6 9 9 9 9 9 9 9 9 9 9 9 9 9 f f f f 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 8 8 8 8 9 9 9 f f f f f 
f f f f f f f f 6 6 6 6 6 6 6 6 6 6 6 6 6 6 8 8 8 8 8 8 8 6 6 6 9 9 9 9 9 9 9 6 6 6 6 9 9 9 9 9 9 9 9 9 9 6 6 6 9 9 f f f f f f f f 9 9 9 9 9 9 9 9 9 9 9 9 9 9 6 6 9 9 9 9 9 8 8 8 8 8 8 8 8 9 9 9 9 9 9 9 9 9 8 8 8 9 9 9 6 6 6 6 9 9 9 9 9 9 9 9 9 9 9 9 9 9 f f f 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 8 8 8 8 8 9 9 9 f f f f f 
f f f f f f f f 6 6 6 6 6 6 6 6 6 6 6 6 6 6 8 8 8 8 8 8 6 6 6 6 6 6 9 9 9 9 6 6 6 6 6 6 9 9 9 9 9 9 9 9 9 6 6 9 9 f f f f f f f f f 9 9 9 9 9 9 9 9 9 9 9 9 9 6 6 6 9 9 9 9 9 8 8 8 8 8 8 8 8 9 9 9 9 9 9 9 9 8 8 8 8 9 9 9 6 6 6 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 f f f 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 8 8 8 8 8 8 9 9 f f f f f 
f f f f f f f f 6 6 6 6 6 6 6 6 6 6 6 6 6 8 8 8 8 8 8 6 6 6 6 6 6 6 6 6 9 9 6 6 6 6 6 6 9 9 9 9 9 9 9 9 9 6 6 9 9 f f f f f f f f f 9 9 9 9 9 9 9 9 9 9 9 9 9 6 6 6 6 6 6 6 8 8 8 8 8 8 8 8 8 9 9 9 9 9 9 9 9 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 9 9 9 9 9 9 9 f f f 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 8 8 8 8 8 8 8 9 9 f f f f f 
f f f f f f f f 8 8 8 8 8 6 6 6 6 6 6 6 8 8 8 8 8 8 8 6 6 6 6 6 6 6 6 6 9 9 6 6 6 6 6 6 6 9 9 9 9 9 9 9 9 6 9 9 f f f f f f f f f f 9 9 9 9 9 9 9 9 9 9 9 9 9 6 6 6 6 6 6 6 8 8 8 8 8 8 8 8 8 9 9 9 9 9 9 9 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 9 9 9 9 9 9 9 f f f 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 8 8 8 8 8 8 8 8 9 f f f f f 
f f f f f f f f 8 8 8 8 8 6 6 6 6 6 6 6 8 8 8 8 8 8 8 6 6 6 6 6 6 8 8 8 8 8 6 6 6 6 6 6 6 6 6 9 9 9 9 9 6 6 9 9 f f f f f f f f f 9 9 9 9 9 9 9 9 9 9 6 9 9 6 6 6 6 6 6 6 6 6 8 8 8 8 8 8 8 8 9 9 9 9 9 9 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 9 9 9 9 9 9 9 f f f 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 8 8 8 8 8 8 8 8 8 f f f f f 
f f f f f f f f 8 8 8 8 8 8 8 8 8 8 6 6 8 8 8 8 8 8 8 8 6 6 8 8 8 8 8 8 8 8 8 8 8 6 6 6 6 6 6 6 6 9 9 9 6 6 9 9 f f f f f f f f f 9 9 9 9 9 9 9 9 9 6 6 6 6 6 6 6 6 6 6 6 6 6 8 8 8 8 8 8 8 8 9 9 9 9 9 9 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 9 9 9 9 9 9 f f f 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 8 8 8 8 8 8 8 8 8 8 f f f f f 
f f f f f f f f 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 6 6 6 6 6 6 6 9 9 9 6 6 6 9 f f f f f f f f f f 9 9 9 9 9 9 9 9 6 6 6 6 6 6 6 6 6 6 6 6 6 6 8 8 8 8 8 8 8 8 9 9 9 9 9 9 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 9 9 9 9 9 f f f f 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 8 8 8 8 8 8 8 8 8 8 f f f f f 
f f f f f f f f 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 6 6 6 8 8 9 9 9 6 6 6 6 6 9 f f f f f f f f f f 9 9 9 9 9 9 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 8 8 8 8 8 8 8 8 9 9 9 9 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 9 9 9 9 f f f f 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 8 8 8 8 8 8 8 8 8 8 f f f f f 
f f f f f f f f 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 9 6 6 6 6 6 6 9 f f f f f f f f f f f 9 9 9 9 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 8 8 8 8 8 8 8 8 8 9 9 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 9 9 9 9 9 f f f f f 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 8 8 8 8 8 8 8 8 8 8 f f f f f 
f f f f f f f f 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 f f f f f f f f f f f f f 9 8 8 8 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 9 9 9 9 9 f f f f f 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 8 8 8 8 8 8 8 8 8 8 8 f f f f 
f f f f f f f f f 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 f f 8 8 8 8 8 8 8 8 8 8 8 8 8 8 f f f f f f f f f f f f f 8 8 8 8 8 6 6 6 6 6 6 6 6 6 6 6 6 6 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 9 9 f f f f f 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 8 8 8 8 8 8 8 8 8 8 8 8 f f f 
f f f f f f f f f 8 8 8 8 8 8 f f f 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 f f f f f f f 8 8 8 8 8 8 8 8 8 8 8 8 f f f f f f f f f f f f f f 8 8 8 8 8 6 6 6 6 6 6 6 6 6 6 6 6 8 8 8 8 f f f 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 f f f f f f 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 8 8 8 8 8 8 8 8 8 8 8 8 8 f f f f 
f f f f f f f f f 8 8 8 8 8 8 f 8 f f 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 f f f f f f f f f f 8 8 8 8 8 8 8 8 8 f f f f f f f f f f f f f f f 8 8 8 8 6 6 6 8 8 8 8 8 8 6 6 8 8 8 8 8 f f f 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 f f f f f 9 9 9 9 9 9 9 9 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 f f f f 
f f f f f f f f f f 8 8 8 8 f 8 8 8 f 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f 8 8 8 8 8 6 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 f f f 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 f f f f f f 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 f f f f 
f f f f f f f f f f f 8 f f 8 8 f 8 f 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 f f 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 f f f f f f f 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 f f f f f 
f f f f f f f f f f f f f 8 8 8 f f f 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f 8 8 8 8 8 8 8 8 8 8 f f f f f f f 8 8 8 8 f f 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 f f f f f f f f 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 f f f f f 
f f f f f f f f f f f f f 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f 8 8 8 f f f f f f f f f f f f f f f 8 8 f 8 8 8 8 8 8 8 8 8 8 8 f 8 8 8 8 f f 8 8 8 8 8 8 8 8 f f f f f f f f f f 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 f f f f f 
f f f f f f f f f f f f f f 8 8 8 8 f f 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f 8 8 8 8 8 8 8 8 8 8 f f f 8 8 f f f 8 8 8 8 8 8 8 f f f f f f f f f f 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 f f f f f 
f f f f f f f f f f f f f f f 8 8 f f f 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f 8 8 8 8 8 8 8 8 8 8 f f 8 8 f f f 8 8 8 8 8 f f f f f f f f f f f 8 8 8 8 8 8 8 8 8 8 8 8 8 8 f f 8 8 8 8 8 8 8 8 8 8 8 8 8 f f f f f 
f f f f f f f f f f f f f f f f 8 f 8 f 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f 8 8 8 8 8 f f 8 8 8 f 8 8 8 8 8 8 8 f f f f f f f f f f f f f 8 8 8 8 8 8 8 8 f f 8 8 f 8 8 f 8 8 8 8 f 8 f f 8 8 f f f f f f 
f f f f f f f f f f f f f f f f f f 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f 8 8 8 8 f 8 8 8 8 8 8 f f f f f f f f f f f f f f f 8 8 8 8 8 8 8 f 8 f 8 f 8 8 f 8 8 8 f f f f 8 8 f f f f f f f 
f f f f f f f f f f f f f f f f f f f f f 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f 8 8 8 8 f f f f f f f f f f f f f f f f f f f f f f f f 
f f f f f f f f f f f f f f f f f f f f f f f f f f f 8 8 8 8 8 8 f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f 
f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f 
f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f 
f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f 
f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f 
f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f 
f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f 
f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f 
f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f 
f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f 
f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f 
f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f 
f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f 
f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f 
f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f 
f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f 
f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f 
f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f 
f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f 
f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f 
f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f 
f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f 
f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f 
f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f 
f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f 
f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f 
f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f 
f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f 
f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f 
f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f 
f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f 
f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f 
f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f 
f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f 
f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f 
f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f 
f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f 
f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f 
f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f 
f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f 
f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f 
f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f 
f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f 
f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f 
f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f 
f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f 
f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f 
f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f 
f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f 
`)
    }
    if (Level == 1) {
        scene.setBackgroundImage(img`
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
`)
        tiles.setTilemap(tiles.createTilemap(
            hex`a1b1c07070707070707000000000000190f1d00001400000000000000000604040404000014000000000000060404040404040000140000000006040404040404040405001400010101010101010101010101020014000000000000000000000000001200140000000000170000000000001502000000000000000000000000000006120000000000000000000000000000150200000000000000000000000000000612000006130500000000000000000015020000030102000000000000000000061200000301020000061305000000000309000003010200000301020000000003000000030102000003010200000000030c0c0c0301020c0c030102000000000304040404040404040404041305000003010101010101010101010101020000030101010101010101010101010200000301010101010101010101010102000003010101010101010101010101020000030101010101010101010101010200000301010101010101010101010102000003001400001400001400000000000000030014000014000014000000001100000300140000140000140000000000001503001400001400000000060404040404040014000000000000001201010101010100140000000016000003010101010101000000000000000000080900000014000000110000000011000b0b000000140000000000040d00000006050000001400041304040404040404040404050014000101010101010101010101010200140001010101010101010101010102001400010101010101010101010101020014000101010101010101010101010900140001010101010101070707090000001400070707070707070000000000110014000000000000000000000000000000000d00000000000000001100000000060404000000000000000000000006040404040a000011000000000d0604040404040405000000000000060404040404040404040404040404040404040404040404040101010101010101010101010101010101010101010101010101010101010101`,
            img`
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
2 2 2 2 2 2 2 2 2 2 2 . . . . . 
2 2 2 2 2 2 2 2 2 . . . . . . . 
2 2 2 2 2 2 2 . . . . . . . . . 
. . . . . . . . . . . 2 2 2 2 2 
. . . . . . . . . 2 2 2 2 2 2 2 
. . . . . . . 2 2 2 2 2 2 2 2 2 
2 . . . 2 2 2 2 2 2 2 2 2 2 2 2 
2 . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
2 . . . . . . . . . . . . . . 2 
. . . . . . . . . . . . . . . . 
2 . . . . . . . . . . . . . . 2 
. . . 2 . 2 . . . . . . . . . . 
2 . . 2 2 2 . . . . . . . . . 2 
. . . 2 2 2 . . 2 . 2 . . . . 2 
2 . . 2 2 2 . . 2 2 2 . . . . 2 
. . . 2 2 2 . . 2 2 2 . . . . 2 
. . . 2 2 2 . . 2 2 2 . . . . 2 
2 2 2 2 2 2 2 2 2 2 2 . 2 . . 2 
2 2 2 2 2 2 2 2 2 2 2 2 2 . . 2 
2 2 2 2 2 2 2 2 2 2 2 2 2 . . 2 
2 2 2 2 2 2 2 2 2 2 2 2 2 . . 2 
2 2 2 2 2 2 2 2 2 2 2 2 2 . . 2 
2 2 2 2 2 2 2 2 2 2 2 2 2 . . 2 
2 2 2 2 2 2 2 2 2 2 2 2 2 . . 2 
. . . . . . . . . . . . . . . 2 
. . . . . . . . . . . . . . . 2 
. . . . . . . . . . . . . . . 2 
. . . . . . . . . 2 2 2 2 2 2 2 
. . . . . . . . . . 2 2 2 2 2 2 
. . . . . . . . . 2 2 2 2 2 2 2 
. . . . . . . . . 2 2 . . . . . 
. . . . . . . . . . . . . . . . 
. . . . 2 . . . . 2 2 . . . . . 
2 . 2 2 2 2 2 2 2 2 2 2 2 . . . 
2 2 2 2 2 2 2 2 2 2 2 2 2 . . . 
2 2 2 2 2 2 2 2 2 2 2 2 2 . . . 
2 2 2 2 2 2 2 2 2 2 2 2 2 . . . 
2 2 2 2 2 2 2 2 2 2 2 2 2 . . . 
2 2 2 2 2 2 2 2 2 2 2 . . . . . 
2 2 2 2 2 2 2 . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . 2 2 2 
. . . . . . . . . . . 2 2 2 2 2 
. . . . . . . . . 2 2 2 2 2 2 2 
2 . . . . . . 2 2 2 2 2 2 2 2 2 
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
`,
            [myTiles.tile0,myTiles.tile5,myTiles.tile6,myTiles.tile11,myTiles.tile13,myTiles.tile15,myTiles.tile16,myTiles.tile17,myTiles.tile18,myTiles.tile19,myTiles.tile20,myTiles.tile21,myTiles.tile22,myTiles.tile23,myTiles.tile24,myTiles.tile25,myTiles.tile26,myTiles.tile27,myTiles.tile29,myTiles.tile30,myTiles.tile31,myTiles.tile32,myTiles.tile33,myTiles.tile34,myTiles.tile35,myTiles.tile36,myTiles.tile37,myTiles.tile38,myTiles.tile39,myTiles.tile40,myTiles.tile41,myTiles.tile42,myTiles.tile43,myTiles.tile45,myTiles.tile46,myTiles.tile47,myTiles.tile48,myTiles.tile49,myTiles.tile50],
            TileScale.Sixteen
        ))
        scene.setBackgroundColor(15)
    }
    if (Level == 2) {
        tiles.setTilemap(tiles.createTilemap(
            hex`a1b1c00000000000000000000000000190f1d000000000000000000000000060404040500000000000000000000000807070709001100110000000000000000000000000000000000000000040413040404040413040404050000000101010101010101010101011200000001000003070200000000001802000000010000000b000000000000000200000001000006040500000000000002000000070000120102000000000000020000000000000301020000000000001200000000000003011200000400000009000006040500030102000001000006000000000000000000000000000000030c0c0c0c0c0c0c0c0c0c00000000000304040404040404040405000004000003020000080707070701020000010000030200000000000000030200000700000302000000000000000b0b0000000000030200000600000015030200000d060404020000060404040404040404040404040200000807070101010101010101010102000000000003020000000000000000020000110000030200001100000000000200000000000b0b00000000000000000200000d0000030200000d00000400000104040404040404040404040404000001070707020e0e0e0301020e0e0800000200000014000000140014000000000417000000140000001400140000000400000000001400110014001400000400000500000000000000000000000000150002000000060c0c0c0500060c0c0c0500020000060104040401040104040401040200000301010101010101010101010102000000080900000000000000000000020000000b0b00000000000000000000020000000605000d00060405000000000213040404040404040101020000000001010101010101010101010200000c0c0101010101010101010101120000060400000000000000001603010200000301000000000000000000080709000012010a00110000001100000b0b0b0000030105000000000000000006040500000301040404040404040404040404130604040101010101010101010101010101010101010101010101010101010101010101`,
            img`
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . 2 2 2 2 2 . . . . 
. . . . . . . 2 2 2 2 2 . . . . 
. . . . . . . . . . . . . . . . 
. . . . 2 2 . 2 2 2 2 2 . 2 2 2 
2 . . . 2 2 2 2 2 2 2 2 2 2 2 2 
. . . . 2 . . 2 2 2 . . . . . . 
2 . . . 2 . . . . . . . . . . . 
2 . . . 2 . . 2 2 2 . . . . . . 
2 . . . 2 . . . 2 2 . . . . . . 
2 . . . . . . 2 2 2 . . . . . . 
. . . . . . . 2 2 . . . 2 . . . 
2 . . 2 2 2 . 2 2 2 . . 2 . . 2 
. . . . . . . . . . . . . . . 2 
. . . . . . . . . . . . . . . 2 
2 2 2 2 2 2 2 2 2 2 . . 2 . . 2 
2 . . 2 2 2 2 2 2 2 . . 2 . . 2 
2 . . . . . . . 2 2 . . 2 . . 2 
2 . . . . . . . . . . . . . . 2 
2 . . 2 . . . . 2 2 . . . 2 2 2 
2 . . 2 2 2 2 2 2 2 2 2 2 2 2 2 
2 . . 2 2 2 2 2 2 2 2 2 2 2 2 2 
2 . . . . . 2 2 . . . . . . . . 
2 . . . . . 2 2 . . . . . . . . 
2 . . . . . . . . . . . . . . . 
2 . . . . . 2 2 . . . . . 2 . . 
2 2 2 2 2 2 2 2 2 2 2 2 2 2 . . 
2 2 2 2 2 2 2 2 2 2 2 2 2 2 . . 
2 . . . . . . . . . . . . . . 2 
. . . . . . . . . . . . . . 2 . 
. . . . . . . . . . . . . 2 . . 
2 . . . . . . . . . . . . . . . 
2 . . . 2 . . . 2 . 2 . . . 2 . 
2 . . 2 2 2 2 2 2 2 2 2 2 2 2 2 
2 . . 2 2 2 2 2 2 2 2 2 2 2 2 2 
2 . . . 2 2 . . . . . . . . . . 
2 . . . . . . . . . . . . . . . 
2 . . . 2 2 . . . 2 2 2 . . . . 
2 . 2 2 2 2 2 2 2 2 2 2 . . . . 
2 2 2 2 2 2 2 2 2 2 2 2 . . . . 
2 2 2 2 2 2 2 2 2 2 2 . . . 2 2 
. . . . . . . . . 2 2 2 . . 2 2 
. . . . . . . . . 2 2 2 . . . 2 
. . . . . . . . . . . . . . 2 2 
2 . . . . . . . . 2 2 2 . . 2 2 
2 2 2 2 2 2 2 2 2 2 2 2 . 2 2 2 
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
`,
            [myTiles.tile0,myTiles.tile5,myTiles.tile6,myTiles.tile11,myTiles.tile13,myTiles.tile15,myTiles.tile16,myTiles.tile17,myTiles.tile18,myTiles.tile19,myTiles.tile20,myTiles.tile21,myTiles.tile22,myTiles.tile23,myTiles.tile24,myTiles.tile25,myTiles.tile26,myTiles.tile27,myTiles.tile29,myTiles.tile30,myTiles.tile31,myTiles.tile32,myTiles.tile33,myTiles.tile34,myTiles.tile35,myTiles.tile36,myTiles.tile37,myTiles.tile38,myTiles.tile39,myTiles.tile40,myTiles.tile41,myTiles.tile42,myTiles.tile43,myTiles.tile45,myTiles.tile46,myTiles.tile47,myTiles.tile48,myTiles.tile49,myTiles.tile50],
            TileScale.Sixteen
        ))
    }
    if (Level == 3) {
        tiles.setTilemap(tiles.createTilemap(
            hex`1aa1b1c0000010101010101010101010101010000000000000000190f1d00000101010101010101010101010100060404040404040404040404010101010101010101010101010003010101010101010101010101010101010101010101010101000301010101010101010000000000141400140000140014000100030100010101010101000000000000000014000014171400010003010001010000000100000004050000000000001400140001000301000b0bb00000b00000b000000000000000000000001010101020000000600000400000400000000000000000000000101010104041304040404040404040405000000000000000000010101010101010101010101010101010200000000000011000000000000010102000000000000140012020000000000000000000000000001010200000011000014000302000d00000000040000000000000101020000000000001400120104040404040404040500000000010102000006040500140003010101010101010101020000000001010200000301020014001201000000000014000102000000000101120000030102001400030100000000001400010200000000010102000003010200140012010000060500140001020000000001010200001201120014000301000003020014000102000000000101020000030102001400120100000302001400070900000000010102000003010200000008070000030200140000000000000007070900000301020000000000000003020014000000000613040000000000030112000000000000000302000000000000080707000a000000030102000000000000040102000000000000000000040405000003010200000000000000030200000000000000000001010226260301022626262626262603022626262626262626260101022525030102252525252525250102252525252525252525`,
            img`
. . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . 
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
2 . . . . . . . . . . . . . 2 2 2 2 2 2 2 2 2 2 2 2 
2 . . . . . . . . . . . . . 2 2 2 2 2 2 2 2 2 2 2 2 
2 . . . . . . . . . . . . . 2 2 2 2 2 2 2 2 2 2 2 2 
2 . 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
2 . 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
2 . 2 2 2 2 2 2 2 2 2 . . . . . . . . . . . . . . . 
2 . 2 2 . 2 2 2 2 2 2 . . . . . . . . . . . . . . . 
2 . 2 2 . 2 2 . . . 2 . . . 2 2 . . . . . . . . . . 
2 . 2 2 . . . . . . 2 . . . 2 . . . . . . . . . . . 
2 . 2 2 . 2 2 . . . 2 . . . 2 2 . . . . . . . . . . 
2 . 2 2 . 2 2 . . . 2 . . . 2 2 . . . . . . . . . . 
2 . . . . 2 2 . . . 2 . . . 2 . . . . 2 2 2 2 2 2 2 
2 . . . . 2 2 . . . . . . . 2 2 . . . 2 2 2 2 2 2 2 
2 . . . . 2 2 . . . . . . . 2 2 . . . . . . . . . . 
2 . . . . 2 2 . . . . . . . 2 . . . . . . . . . . . 
2 . . . . 2 2 . . . . . . . 2 2 . . . . . . . . . . 
2 . . . . 2 2 . . . . . . . 2 2 . . . . . . . . . . 
2 . . . . 2 2 . . . . . . . 2 2 2 2 2 2 2 2 . . . 2 
2 . . . . 2 2 . . . . . . . 2 2 2 2 2 2 2 2 . . . 2 
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 . . . 2 
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 . . . 2 
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 . . . 2 
. . . . . . . . . . . . . . . . . . . . . . . . . 2 
. . . . . . . . . . . . . . . . . . . . . . . . . 2 
. . . . . . . . . . . . . . . . . . . 2 2 2 2 . 2 2 
2 2 2 2 2 . . . . . . . . . . . . 2 2 2 2 2 2 2 2 2 
2 2 2 2 2 . . . . . . . . . . 2 2 2 2 2 2 2 2 2 2 2 
2 2 2 2 2 . . . . . . . . 2 2 2 2 2 2 2 2 2 2 2 2 2 
2 . . . . . . . . . . 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
2 . . . . . . . . 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
2 . . . 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
2 . . . 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
2 . . . 2 . . 2 . . 2 . . . . . . . . . . . 2 2 2 2 
2 . . . . . . . . . . . . . . . . . . . . . 2 2 2 2 
2 . . . 2 . . 2 . . 2 . . . . . . . . . . . 2 2 2 2 
2 2 . 2 2 2 2 2 2 2 2 2 2 . . . . . . . . . 2 2 2 2 
2 2 2 2 2 2 2 2 2 2 2 2 2 . . . . . . . . . . . . . 
2 2 2 . . . . . . . . . 2 . . . . . . . . . . . . . 
2 2 2 . . . . . . . . 2 2 . . . . . . 2 . . . . . . 
2 2 2 . . . . . . . . . 2 2 2 2 2 2 2 2 2 2 . . . . 
2 2 2 . . 2 2 2 . . . 2 2 2 2 2 2 2 2 2 2 2 . . . . 
2 2 2 . . 2 2 2 . . . . 2 . . . . . . . 2 2 . . . . 
2 2 . . . 2 2 2 . . . 2 2 . . . . . . . 2 2 . . . . 
2 2 2 . . 2 2 2 . . . . 2 . . 2 2 . . . 2 2 . . . . 
2 2 2 . . . 2 . . . . 2 2 . . 2 2 . . . 2 2 . . . . 
2 2 2 . . 2 2 2 . . . . 2 . . 2 2 . . . 2 2 . . . . 
2 2 2 . . 2 2 2 . . . 2 2 . . 2 2 . . . . . . . . . 
2 2 2 . . 2 2 2 . . . . . . . 2 2 . . . . . . 2 . 2 
. . . . . 2 2 . . . . . . . . 2 2 . . . . . . 2 2 2 
. . . . . 2 2 2 . . . . . . 2 2 2 . . . . . . . . . 
2 2 2 . . 2 2 2 . . . . . . . 2 2 . . . . . . . . . 
2 2 2 . . 2 2 2 . . . . . . . 2 2 . . . . . . . . . 
2 2 2 . . 2 2 2 . . . . . . . 2 2 . . . . . . . . . 
`,
            [myTiles.tile0,myTiles.tile5,myTiles.tile6,myTiles.tile11,myTiles.tile13,myTiles.tile15,myTiles.tile16,myTiles.tile17,myTiles.tile18,myTiles.tile19,myTiles.tile20,myTiles.tile21,myTiles.tile22,myTiles.tile23,myTiles.tile24,myTiles.tile25,myTiles.tile26,myTiles.tile27,myTiles.tile29,myTiles.tile30,myTiles.tile31,myTiles.tile32,myTiles.tile33,myTiles.tile34,myTiles.tile35,myTiles.tile36,myTiles.tile37,myTiles.tile38,myTiles.tile39,myTiles.tile40,myTiles.tile41,myTiles.tile42,myTiles.tile43,myTiles.tile45,myTiles.tile46,myTiles.tile47,myTiles.tile48,myTiles.tile49,sprites.dungeon.hazardWater,myTiles.tile50],
            TileScale.Sixteen
        ))
    }
    if (Level == 4) {
        tiles.setTilemap(tiles.createTilemap(
            hex`1ab001111000b000000000300000000000000020000000101000004000d0000040000000003000000000000000200000001010006040404040404050000060100111a1b1c1100020000150101000301010101010702000003010000190f1d000002000001010100150200000000000200000301040404040404040200150101010006020000000000020000030101010101010101020001010101001502000006000002000003010101010101010102001400001400060200001200000200000301010101010101010200140000140015020000030000090000030101010101010101020014000014000612000003000000000003010101010101010102001400001400150200000300000000000301010101010101010200000000000006020000120000000000030101010101010101020c0c0c0c0c0c03020000030c0c0c0c0c0301010101010101010707070707070707090000080707070701010101010101010101110011000000000b000000000b000000000003010101010101010000000000000004000d00000400000000000301010101010101040404040000040404040404040400000404010101010101010101070701000003010107070707070000070701010101010101010200000700000301120000000000001700000301010101010101020000000000030102000000000000000000030101010101010102000000000003011200000000061304000003010101010101010200000c0000030102000000000807070000030101010101010102000001000003011200000000000000000003010101010101010200000100000301020000000000000000000301010101010101020000010c0c03011200000613050000000003010101010101010200000707070301020000080709000000000301010101010101020000000b000014000000000000000000000301010101010101020da0000000000060500000000060000000301010101010101010104040500000003020000000003000000030101010101010101010101020c0c0c03020c0c0c0c030c0c0c030101010101010101010101010101010101010101010101010101010101010101010101`,
            img`
. . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . 
2 . . . 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 . . . 2 2 
2 . . . 2 2 . . . . . . . . . . . . 2 . . . . . . . 
2 . . . 2 2 . . 2 . . . . 2 . . . . 2 . . . . . . . 
2 . . . 2 2 . 2 2 2 2 2 2 2 2 . . 2 2 . . . . . . . 
2 . . . 2 2 . 2 2 2 2 2 2 2 2 . . 2 2 . . . . . . . 
2 . . 2 2 2 . . 2 . . . . . 2 . . 2 2 2 2 2 2 2 2 2 
2 . . 2 2 2 . 2 2 . . . . . 2 . . 2 2 2 2 2 2 2 2 2 
2 . 2 2 2 2 . . 2 . . 2 . . 2 . . 2 2 2 2 2 2 2 2 2 
2 . . . . . . 2 2 . . . . . 2 . . 2 2 2 2 2 2 2 2 2 
2 . . . . . . . 2 . . 2 . . 2 . . 2 2 2 2 2 2 2 2 2 
2 . . . . . . 2 . . . 2 . . . . . 2 2 2 2 2 2 2 2 2 
2 . . . . . . . 2 . . 2 . . . . . 2 2 2 2 2 2 2 2 2 
2 . . . . . . 2 2 . . . . . . . . 2 2 2 2 2 2 2 2 2 
2 . . . . . . 2 2 . . 2 . . . . . 2 2 2 2 2 2 2 2 2 
2 2 2 2 2 2 2 2 2 . . 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
. . . . . . . . . . . . . . . . . . 2 2 2 2 2 2 2 2 
. . . . . . . 2 . . . . 2 . . . . . 2 2 2 2 2 2 2 2 
2 2 2 2 . . 2 2 2 2 2 2 2 2 . . 2 2 2 2 2 2 2 2 2 2 
2 2 2 2 . . 2 2 2 2 2 2 2 2 . . 2 2 2 2 2 2 2 2 2 2 
2 . . 2 . . 2 2 . . . . . . . . . . 2 2 2 2 2 2 2 2 
2 . . . . . 2 2 2 . . . . . . . . . 2 2 2 2 2 2 2 2 
2 . . . . . 2 2 . . . . . 2 . 2 . . 2 2 2 2 2 2 2 2 
2 . . . . . 2 2 2 . . . . 2 2 2 . . 2 2 2 2 2 2 2 2 
2 . . 2 . . 2 2 . . . . . . . . . . 2 2 2 2 2 2 2 2 
2 . . 2 . . 2 2 2 . . . . . . . . . 2 2 2 2 2 2 2 2 
2 . . 2 . . 2 2 . . . 2 . 2 . . . . 2 2 2 2 2 2 2 2 
2 . . 2 2 2 2 2 2 . . 2 2 2 . . . . 2 2 2 2 2 2 2 2 
2 . . . . . . . . . . . . . . . . . 2 2 2 2 2 2 2 2 
2 . . . 2 . . . . . . . . . . . . . 2 2 2 2 2 2 2 2 
2 2 2 2 2 2 . . . 2 . 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
2 2 2 2 2 2 . . . 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
. . . . . . . . . . . . . . . . . . 2 2 2 2 2 2 2 2 
. . . . . . . . . . . . . . . . . . 2 2 2 2 2 2 2 2 
. . . . . . . . . . . . . . . . . . 2 2 2 2 2 2 2 2 
. . . . . . . . . . . . . . . . . . 2 2 2 2 2 2 2 2 
. . . . . . . . . . . . 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
. . . . . . . . . . . . 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
. . . . . . . . . . . . . . . . . . 2 2 2 2 2 2 2 2 
. . . . . . . . . . . . . . . . 2 2 2 2 2 2 2 2 2 2 
. . . . . . 2 2 . . . . 2 . . . 2 2 2 2 2 2 2 2 2 2 
2 2 2 . . . 2 2 . . . . 2 . . . 2 2 2 2 2 2 2 2 2 2 
2 2 2 . . . 2 2 . . . . 2 . . . 2 2 2 2 2 2 2 2 2 2 
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
`,
            [myTiles.tile0,myTiles.tile5,myTiles.tile6,myTiles.tile11,myTiles.tile13,myTiles.tile15,myTiles.tile16,myTiles.tile17,myTiles.tile18,myTiles.tile19,myTiles.tile20,myTiles.tile21,myTiles.tile22,myTiles.tile23,myTiles.tile24,myTiles.tile25,myTiles.tile26,myTiles.tile27,myTiles.tile29,myTiles.tile30,myTiles.tile31,myTiles.tile32,myTiles.tile33,myTiles.tile34,myTiles.tile35,myTiles.tile36,myTiles.tile37,myTiles.tile38,myTiles.tile39,myTiles.tile40,myTiles.tile41,myTiles.tile42,myTiles.tile43,myTiles.tile45,myTiles.tile46,myTiles.tile47,myTiles.tile48,myTiles.tile49,myTiles.tile50],
            TileScale.Sixteen
        ))
    }
    BuildLevel()
}
function WallJump () {
    mySprite.vy = -130
    mySprite.vx = WallRight * 100
}
sprites.onOverlap(SpriteKind.Projectile, SpriteKind.Bat3, function (sprite, otherSprite) {
    sprite.destroy()
    for (let index = 0; index < 4; index++) {
        otherSprite.setFlag(SpriteFlag.Invisible, true)
        pause(15)
        otherSprite.setFlag(SpriteFlag.Invisible, false)
        pause(15)
    }
    sprites.changeDataNumberBy(otherSprite, "Hits", sprites.readDataNumber(sprite, "Damage"))
    DmgNoSprite = sprites.create(img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, SpriteKind.DamageNumber)
    DmgNoSprite.setImage(DmgNumberList[DamageAmount])
    DmgNoSprite.setPosition(otherSprite.x, otherSprite.top - 6)
    animation.runMovementAnimation(
    DmgNoSprite,
    animation.animationPresets(animation.bobbing),
    500,
    false
    )
    clock = game.runtime()
    if (sprites.readDataNumber(otherSprite, "Hits") <= 0) {
        otherSprite.destroy(effects.disintegrate, 500)
    }
})
function BuildLevel () {
    mySprite = sprites.create(img`
. . 3 3 3 3 3 . 
. 3 3 3 f f f 3 
3 3 3 f 1 f 1 . 
3 . 3 f f f f . 
. . 1 3 f f 3 . 
. 3 f 3 3 3 f 1 
. . 3 3 3 3 3 . 
. . . . . . . . 
`, SpriteKind.Player)
    if (Level == 4) {
        EndWall2 = sprites.create(img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . 3 . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, SpriteKind.BuildWall)
        EndWall2.setImage(img`
c c c c c c c c c c c c c c c c 
6 6 6 6 c c 6 6 c c 6 6 6 6 6 c 
6 6 6 6 c 6 6 6 c c 6 6 6 6 6 c 
c c c c c 6 6 6 c c 6 6 6 6 6 c 
c c c c c c c c c c c c c c c c 
c c c 6 6 6 6 c c 6 6 6 6 6 c c 
c c c 6 6 6 6 c c 6 6 6 6 6 c c 
c c c c c c c c c c c c c c c c 
6 6 6 6 6 c c 6 6 6 6 6 6 c c 6 
6 6 6 6 6 c c 6 6 6 6 6 6 c c 6 
6 6 6 6 6 c c 6 6 6 6 6 6 c c c 
c c c c c c c c c c c c c c c c 
c c c 6 6 6 6 c c c c c 6 6 6 6 
6 c c 6 6 6 6 c c 6 6 c 6 6 6 6 
6 c c 6 6 6 6 c c 6 6 c 6 6 6 6 
c c c c c c c c c c c c c c c c 
`)
        tiles.placeOnTile(EndWall2, tiles.getTileLocation(21, 13))
        EndWall2 = sprites.create(img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . 3 . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, SpriteKind.BuildWall)
        EndWall2.setImage(img`
c c c c c c c c c c c c c c c c 
6 6 6 6 c c 6 6 c c 6 6 6 6 6 c 
6 6 6 6 c 6 6 6 c c 6 6 6 6 6 c 
c c c c c 6 6 6 c c 6 6 6 6 6 c 
c c c c c c c c c c c c c c c c 
c c c 6 6 6 6 c c 6 6 6 6 6 c c 
c c c 6 6 6 6 c c 6 6 6 6 6 c c 
c c c c c c c c c c c c c c c c 
6 6 6 6 6 c c 6 6 6 6 6 6 c c 6 
6 6 6 6 6 c c 6 6 6 6 6 6 c c 6 
6 6 6 6 6 c c 6 6 6 6 6 6 c c c 
c c c c c c c c c c c c c c c c 
c c c 6 6 6 6 c c c c c 6 6 6 6 
6 c c 6 6 6 6 c c 6 6 c 6 6 6 6 
6 c c 6 6 6 6 c c 6 6 c 6 6 6 6 
c c c c c c c c c c c c c c c c 
`)
        tiles.placeOnTile(EndWall2, tiles.getTileLocation(22, 13))
        EndWall2 = sprites.create(img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . 3 . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, SpriteKind.BuildWall)
        EndWall2.setImage(img`
c c c c c c c c c c c c c c c c 
6 6 6 6 c c 6 6 c c 6 6 6 6 6 c 
6 6 6 6 c 6 6 6 c c 6 6 6 6 6 c 
c c c c c 6 6 6 c c 6 6 6 6 6 c 
c c c c c c c c c c c c c c c c 
c c c 6 6 6 6 c c 6 6 6 6 6 c c 
c c c 6 6 6 6 c c 6 6 6 6 6 c c 
c c c c c c c c c c c c c c c c 
6 6 6 6 6 c c 6 6 6 6 6 6 c c 6 
6 6 6 6 6 c c 6 6 6 6 6 6 c c 6 
6 6 6 6 6 c c 6 6 6 6 6 6 c c c 
c c c c c c c c c c c c c c c c 
c c c 6 6 6 6 c c c c c 6 6 6 6 
6 c c 6 6 6 6 c c 6 6 c 6 6 6 6 
6 c c 6 6 6 6 c c 6 6 c 6 6 6 6 
c c c c c c c c c c c c c c c c 
`)
        tiles.placeOnTile(EndWall2, tiles.getTileLocation(23, 13))
        tiles.setWallAt(tiles.getTileLocation(21, 13), true)
        tiles.setWallAt(tiles.getTileLocation(22, 13), true)
        tiles.setWallAt(tiles.getTileLocation(23, 13), true)
    }
    for (let value of tiles.getTilesByType(myTiles.tile25)) {
        Exit = sprites.create(img`
f f f f f f f f f f f f f f f f 
f f f f f f f f f f f f f f f f 
f f f f f f f f f f f f f f f f 
f f f f f f f f f f f f f f f f 
f f f f f f f f f f f f f f f f 
f f f f f f f f f f f f f f f f 
f f f f f f f f f f f f f f f f 
f f f f f f f f f f f f f f f f 
f f f f f f f f f f f f f f f f 
f f f f f f f f f f f f f f f f 
f f f f f f f f f f f f f f f f 
f f f f f f f f f f f f f f f f 
f f f f f f f f f f f f f f f f 
f f f f f f f f f f f f f f f f 
f f f f f f f f f f f f f f f f 
f f f f f f f f f f f f f f f f 
`, SpriteKind.LevelEnd)
        tiles.placeOnRandomTile(Exit, myTiles.tile25)
        tiles.setTileAt(value, myTiles.tile0)
    }
    for (let value of tiles.getTilesByType(myTiles.tile26)) {
        WallBuildItem = sprites.create(img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. c c c c c c c c c c c c . . . 
c 1 1 1 1 1 1 1 1 1 1 1 1 c . . 
c d d d d d d d d d d d d c . . 
c d c c c c c c c c c c d c . . 
c d b d b b b b b b b b d c . . 
c d b b b b b b b b b b d c . . 
c d b b b b b b b b b b d c . . 
c d b b b b b b b b b b d c . . 
c 1 b b b b b b b b b b 1 c . . 
c 1 1 d 1 1 d 1 1 d 1 1 1 c . . 
c 1 d d d d d d d d d d 1 c . . 
c 1 d 1 1 d 1 1 d 1 1 d 1 c . . 
c b b b b b b b b b b b b c . . 
c c c c c c c c c c c c c c . . 
`, SpriteKind.BossSpawnBox)
        tiles.placeOnRandomTile(WallBuildItem, myTiles.tile26)
        tiles.setTileAt(value, myTiles.tile0)
    }
    for (let value2 of tiles.getTilesByType(myTiles.tile20)) {
        tiles.placeOnRandomTile(mySprite, myTiles.tile20)
        tiles.setTileAt(value2, myTiles.tile0)
    }
    for (let BoxLocations of tiles.getTilesByType(myTiles.tile21)) {
        Box2 = sprites.create(img`
. e e e e e e e e e e e e e e . 
e 1 1 1 1 1 1 1 1 1 1 1 1 1 1 e 
b b b b b b b b b b b b b b b b 
e e e e e e e e e e e e e e e e 
e c 1 e c 1 e c 1 e c 1 e c 1 e 
e c 1 e c 1 e c 1 e c 1 e c 1 e 
e c b e c b e c b e c b e c b e 
e c b e c b e c b e c b e c b e 
e c b e c b e c b e c b e c b e 
e c b e c b e c b e c b e c b e 
e c b e c b e c b e c b e c b e 
e c b e c b e c b e c b e c b e 
e e e e e e e e e e e e e e e e 
c c c c c c c c c c c c c c c c 
e b b b b b b b b b b b b b b e 
. e e e e e e e e e e e e e e . 
`, SpriteKind.Box)
        tiles.placeOnTile(Box2, BoxLocations)
        tiles.setTileAt(BoxLocations, myTiles.tile0)
    }
    for (let value3 of tiles.getTilesByType(myTiles.tile22)) {
        SpikeSprite = sprites.create(img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. 1 . . . 1 . . . 1 . . . 1 . . 
. 1 . . . 1 . . . 1 . . . 1 . . 
. 1 . . . 1 . . . 1 . . . 1 . . 
. 1 1 . . 1 . . . 1 . . 1 1 . . 
. 1 1 . 1 1 1 . 1 1 1 . 1 1 1 . 
. 1 1 . 1 1 1 . 1 1 1 . 1 1 1 . 
. 1 1 . 1 1 1 . 1 1 1 1 1 1 1 . 
1 1 1 1 1 1 1 . 1 1 1 1 1 1 1 1 
1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
`, SpriteKind.Spike)
        tiles.placeOnTile(SpikeSprite, value3)
        tiles.setTileAt(value3, myTiles.tile0)
    }
    for (let value4 of tiles.getTilesByType(myTiles.tile23)) {
        Slime = sprites.create(img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, SpriteKind.Slime)
        Slime.setImage(img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . 7 7 7 7 . . . . . . 
. . . . . 7 7 7 7 7 7 . . . . . 
. . . . 7 7 7 7 7 7 7 7 . . . . 
. . . 7 7 7 9 7 7 9 7 7 7 . . . 
. . 7 7 7 7 9 7 7 9 7 7 7 7 . . 
. . 7 7 7 7 7 7 7 7 7 7 7 7 . . 
. . . 7 7 7 7 7 7 7 7 7 7 . . . 
. . . . 7 7 7 7 7 7 7 7 . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`)
        tiles.placeOnTile(Slime, value4)
        tiles.setTileAt(value4, myTiles.tile0)
    }
    for (let value of tiles.getTilesByType(myTiles.tile32)) {
        SkeletonArcher = sprites.create(img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . 1 1 . . . . . . . . 
. . . . . 1 1 1 1 . . . . . . . 
. . . . . f 1 f 1 . . . . . . . 
. . . . . 1 1 1 . . . . . . . . 
. . . . e . . 1 . . . . . . . . 
. . . e . . b b b . . . . . . . 
. . . e 1 1 b b 1 . . . . . . . 
. . . e . . b 1 b . . . . . . . 
. . . . e . . 1 . . . . . . . . 
. . . . . . c c c . . . . . . . 
. . . . . . c . c . . . . . . . 
. . . . . . 1 . 1 . . . . . . . 
`, SpriteKind.SkeleArcher)
        tiles.placeOnTile(SkeletonArcher, value)
        tiles.setTileAt(value, myTiles.tile0)
    }
    for (let value5 of sprites.allOfKind(SpriteKind.Slime)) {
        sprites.setDataNumber(value5, "Hits", 5)
        sprites.setDataNumber(value5, "Right", 1)
    }
    for (let value5 of sprites.allOfKind(SpriteKind.SkeleArcher)) {
        sprites.setDataNumber(value5, "Hits", 3)
        sprites.setDataNumber(value5, "Shoot", 0)
    }
    for (let value6 of tiles.getTilesByType(myTiles.tile27)) {
        Torch2 = sprites.create(img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, SpriteKind.Torch)
        animation.runImageAnimation(
        Torch2,
        [img`
. . . . . . 5 . . . . . . . . . 
. . . . . . . 4 . . . . . . . . 
. . . . . 5 . . 2 . . . . . . . 
. . . . . 4 4 5 2 2 . . . . . . 
. . . . . . 5 4 4 2 . . . . . . 
. . . . . . 4 5 2 2 . . . . . . 
. . . . . . 4 2 2 . . . . . . . 
. . . . . . . 4 2 . . . . . . . 
. . . . . . b b b b . . . . . . 
. . . . . . . c b . . . . . . . 
. . . . . . . c b . . . . . . . 
. . . . . . . c b . . . . . . . 
. . . . . . . c b . . . . . . . 
. . . . . . . c b . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`,img`
. . . . . . . . . . . . . . . . 
. . . . . . 4 . . . . . . . . . 
. . . . . . . 2 . . . . . . . . 
. . . . . 4 4 4 2 . . . . . . . 
. . . . . . 5 4 2 2 . . . . . . 
. . . . . 5 4 4 2 . . . . . . . 
. . . . . . 4 2 2 . . . . . . . 
. . . . . . . 4 2 . . . . . . . 
. . . . . . b b b b . . . . . . 
. . . . . . . c b . . . . . . . 
. . . . . . . c b . . . . . . . 
. . . . . . . c b . . . . . . . 
. . . . . . . c b . . . . . . . 
. . . . . . . c b . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`,img`
. . . . . . 5 . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . 5 . 2 . . . . . . . . 
. . . . . 4 4 4 2 . . . . . . . 
. . . . . . 5 4 5 2 . . . . . . 
. . . . 5 . 4 5 4 . . . . . . . 
. . . . . 4 2 2 . . . . . . . . 
. . . . . . . 4 2 . . . . . . . 
. . . . . . b b b b . . . . . . 
. . . . . . . c b . . . . . . . 
. . . . . . . c b . . . . . . . 
. . . . . . . c b . . . . . . . 
. . . . . . . c b . . . . . . . 
. . . . . . . c b . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`,img`
. . . . . . . . . . . . . . . . 
. . . . . 5 . . . . . . . . . . 
. . . . . . . . 5 2 . . . . . . 
. . . . . 5 4 . 2 . . . . . . . 
. . . . . 4 5 2 4 . . . . . . . 
. . . . . . 5 4 4 2 . . . . . . 
. . . . . . 4 2 2 . . . . . . . 
. . . . . . . 2 4 . . . . . . . 
. . . . . . b b b b . . . . . . 
. . . . . . . c b . . . . . . . 
. . . . . . . c b . . . . . . . 
. . . . . . . c b . . . . . . . 
. . . . . . . c b . . . . . . . 
. . . . . . . c b . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`],
        100,
        true
        )
        tiles.placeOnTile(Torch2, value6)
        tiles.setTileAt(value6, myTiles.tile0)
    }
    for (let value of tiles.getTilesByType(myTiles.tile29)) {
        WallSpikeHazard = sprites.create(img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, SpriteKind.WallHazard)
        animation.runImageAnimation(
        WallSpikeHazard,
        [img`
. . 1 6 9 6 6 6 6 6 6 9 6 . . . 
. 1 1 6 9 6 6 1 1 6 6 9 6 1 . . 
. . 1 6 9 6 9 6 6 9 6 9 6 1 1 . 
. . . 6 9 6 9 6 6 9 6 9 6 1 . . 
. . 1 6 9 6 f 9 9 f 6 9 6 . . . 
. 1 1 6 9 6 6 f f 6 6 9 6 1 . . 
. . 1 6 9 6 6 6 6 6 6 9 6 1 1 . 
. . . 6 9 6 6 6 6 6 6 9 6 1 . . 
. . 1 6 9 6 6 6 6 6 6 9 6 . . . 
. 1 1 6 9 6 6 6 6 6 6 9 6 1 . . 
. . 1 6 9 6 6 1 1 6 6 9 6 1 1 . 
. . . 6 9 6 9 6 6 9 6 9 6 1 . . 
. . 1 6 9 6 9 6 6 9 6 9 6 . . . 
. 1 1 6 9 6 f 9 9 f 6 9 6 1 . . 
. . 1 6 9 6 6 f f 6 6 9 6 1 1 . 
. . . 6 9 6 6 6 6 6 6 9 6 1 . . 
`,img`
. . . 6 9 6 6 6 6 6 6 9 6 1 . . 
. . 1 6 9 6 6 1 1 6 6 9 6 1 1 . 
. 1 1 6 9 6 9 6 6 9 6 9 6 1 . . 
. . 1 6 9 6 9 6 6 9 6 9 6 . . . 
. . . 6 9 6 f 9 9 f 6 9 6 1 . . 
. . 1 6 9 6 6 f f 6 6 9 6 1 1 . 
. 1 1 6 9 6 6 6 6 6 6 9 6 1 . . 
. . 1 6 9 6 6 6 6 6 6 9 6 . . . 
. . . 6 9 6 6 6 6 6 6 9 6 1 . . 
. . 1 6 9 6 6 6 6 6 6 9 6 1 1 . 
. 1 1 6 9 6 6 1 1 6 6 9 6 1 . . 
. . 1 6 9 6 9 6 6 9 6 9 6 . . . 
. . . 6 9 6 9 6 6 9 6 9 6 1 . . 
. . 1 6 9 6 f 9 9 f 6 9 6 1 1 . 
. 1 1 6 9 6 6 f f 6 6 9 6 1 . . 
. . 1 6 9 6 6 6 6 6 6 9 6 . . . 
`,img`
. . 1 6 9 6 6 6 6 6 6 9 6 1 1 . 
. . . 6 9 6 6 1 1 6 6 9 6 1 . . 
. . 1 6 9 6 9 6 6 9 6 9 6 . . . 
. 1 1 6 9 6 9 6 6 9 6 9 6 1 . . 
. . 1 6 9 6 f 9 9 f 6 9 6 1 1 . 
. . . 6 9 6 6 f f 6 6 9 6 1 . . 
. . 1 6 9 6 6 6 6 6 6 9 6 . . . 
. 1 1 6 9 6 6 6 6 6 6 9 6 1 . . 
. . 1 6 9 6 6 6 6 6 6 9 6 1 1 . 
. . . 6 9 6 6 6 6 6 6 9 6 1 . . 
. . 1 6 9 6 6 1 1 6 6 9 6 . . . 
. 1 1 6 9 6 9 6 6 9 6 9 6 1 . . 
. . 1 6 9 6 9 6 6 9 6 9 6 1 1 . 
. . . 6 9 6 f 9 9 f 6 9 6 1 . . 
. . 1 6 9 6 6 f f 6 6 9 6 . . . 
. 1 1 6 9 6 6 6 6 6 6 9 6 1 . . 
`,img`
. 1 1 6 9 6 6 6 6 6 6 9 6 1 . . 
. . 1 6 9 6 6 1 1 6 6 9 6 . . . 
. . . 6 9 6 9 6 6 9 6 9 6 1 . . 
. . 1 6 9 6 9 6 6 9 6 9 6 1 1 . 
. 1 1 6 9 6 f 9 9 f 6 9 6 1 . . 
. . 1 6 9 6 6 f f 6 6 9 6 . . . 
. . . 6 9 6 6 6 6 6 6 9 6 1 . . 
. . 1 6 9 6 6 6 6 6 6 9 6 1 1 . 
. 1 1 6 9 6 6 6 6 6 6 9 6 1 . . 
. . 1 6 9 6 6 6 6 6 6 9 6 . . . 
. . . 6 9 6 6 1 1 6 6 9 6 1 . . 
. . 1 6 9 6 9 6 6 9 6 9 6 1 1 . 
. 1 1 6 9 6 9 6 6 9 6 9 6 1 . . 
. . 1 6 9 6 f 9 9 f 6 9 6 . . . 
. . . 6 9 6 6 f f 6 6 9 6 1 . . 
. . 1 6 9 6 6 6 6 6 6 9 6 1 1 . 
`],
        100,
        true
        )
        tiles.placeOnTile(WallSpikeHazard, value)
        tiles.setTileAt(value, myTiles.tile0)
    }
    for (let value of tiles.getTilesByType(myTiles.tile30)) {
        JumpPad = sprites.create(img`
1 . . . . . . . . . . . . . . 1 
. 1 1 . . . . . . . . . . 1 1 . 
6 . 3 1 . . . . . . . . 1 3 . 6 
. . . . 3 1 1 1 1 1 1 3 . . . . 
. 6 . . . 9 6 3 6 9 9 . . . 6 . 
6 . . . . . . . . . . . . . . 6 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, SpriteKind.LaunchPad)
        tiles.placeOnTile(JumpPad, value)
        tiles.setTileAt(value, myTiles.tile0)
    }
    for (let value of tiles.getTilesByType(myTiles.tile31)) {
        Rope = sprites.create(img`
. . . . . . 1 . . 1 . . . . . . 
. . . . . . 1 . . 1 . . . . . . 
. . . . . . . 1 1 . . . . . . . 
. . . . . . 1 . . 1 . . . . . . 
. . . . . . 1 . . 1 . . . . . . 
. . . . . . . 1 1 . . . . . . . 
. . . . . . 1 . . 1 . . . . . . 
. . . . . . 1 . . 1 . . . . . . 
. . . . . . 1 . . 1 . . . . . . 
. . . . . . . 1 1 . . . . . . . 
. . . . . . 1 . . 1 . . . . . . 
. . . . . . 1 . . 1 . . . . . . 
. . . . . . . 1 1 . . . . . . . 
. . . . . . 1 . . 1 . . . . . . 
. . . . . . 1 . . 1 . . . . . . 
. . . . . . . 1 1 . . . . . . . 
`, SpriteKind.Ladder)
        tiles.placeOnTile(Rope, value)
        tiles.setTileAt(value, myTiles.tile0)
    }
    for (let value of tiles.getTilesByType(myTiles.tile33)) {
        Bat1 = sprites.create(img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, SpriteKind.Bat)
        tiles.placeOnTile(Bat1, value)
        tiles.setTileAt(value, myTiles.tile0)
    }
    for (let value of tiles.getTilesByType(myTiles.tile34)) {
        Batno2 = sprites.create(img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, SpriteKind.Bat2)
        tiles.placeOnTile(Batno2, value)
        tiles.setTileAt(value, myTiles.tile0)
    }
    for (let value of tiles.getTilesByType(myTiles.tile47)) {
        Sign2 = sprites.create(img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . d d d d d d d d d . . . 
. . . d e e e e e e e e e d . . 
. . d e e e e e e e e e e e d . 
. . d e e e f e f e f e e e d . 
. . . c e e e e e e e e e c . . 
. . . . . . . c c c . . . . . . 
. . . . . . . e e e . . . . . . 
. . . . . . . e e e . . . . . . 
. . . . . . . e e e . . . . . . 
. . . . . . . e e e . . . . . . 
. . . . . . . e e e . . . . . . 
. . . . . . . e e e . . . . . . 
`, SpriteKind.Sign_2)
        tiles.placeOnTile(Sign2, value)
        tiles.setTileAt(value, myTiles.tile0)
    }
    for (let value of tiles.getTilesByType(myTiles.tile46)) {
        Sign1 = sprites.create(img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . d d d d d d d d d . . . 
. . . d e e e e e e e e e d . . 
. . d e e e e e e e e e e e d . 
. . d e e e f e f e f e e e d . 
. . . c e e e e e e e e e c . . 
. . . . . . . c c c . . . . . . 
. . . . . . . e e e . . . . . . 
. . . . . . . e e e . . . . . . 
. . . . . . . e e e . . . . . . 
. . . . . . . e e e . . . . . . 
. . . . . . . e e e . . . . . . 
. . . . . . . e e e . . . . . . 
`, SpriteKind.Sign_1)
        tiles.placeOnTile(Sign1, value)
        tiles.setTileAt(value, myTiles.tile0)
    }
    for (let value of tiles.getTilesByType(myTiles.tile35)) {
        Batno3 = sprites.create(img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, SpriteKind.Bat3)
        tiles.placeOnTile(Batno3, value)
        tiles.setTileAt(value, myTiles.tile0)
    }
    for (let value of sprites.allOfKind(SpriteKind.Bat)) {
        sprites.setDataBoolean(value, "Aggro", false)
        sprites.setDataNumber(value, "Hits", 2)
        sprites.setDataNumber(value, "BatLeft", -1)
        sprites.setDataNumber(value, "BatDown", 1)
        BatVisionRange = sprites.create(img`
. . . . . . . . . . . . . . . . . . . . . . . . . . . . 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 . . . . . . . . . . . . . 
. . . . . . . . . . . . . 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 . . . . . . . . . . . . 
. . . . . . . . . . . . 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 . . . . . . . . . . . 
. . . . . . . . . . . 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 . . . . . . . . . . 
. . . . . . . . . . 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 . . . . . . . . . 
. . . . . . . . . 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 . . . . . . . . 
. . . . . . . . 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 . . . . . . . 
. . . . . . . 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 . . . . . . 
. . . . . . . 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 . . . . . . 
. . . . . . 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 . . . . . 
. . . . . 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 . . . . 
. . . . . 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 . . . . 
. . . . 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 . . . 
. . . . 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 . . . 
. . . 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 . . 
. . . 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 . . 
. . . 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 . . 
. . 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 . 
. . 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 . 
. . 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 . 
. 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
. 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
. 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
. 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
. 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
. 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
. 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
. 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
. 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
. 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
. 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
. 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
. 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
. 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
. 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
. 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
. 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
. . 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 . 
. . 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 . 
. . 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 . 
. . . 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 . . 
. . . 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 . . 
. . . 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 . . 
. . . . 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 . . . 
. . . . 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 . . . 
. . . . . 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 . . . . 
. . . . . 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 . . . . 
. . . . . . 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 . . . . . 
. . . . . . . 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 . . . . . . 
. . . . . . . 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 . . . . . . 
. . . . . . . . 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 . . . . . . . 
. . . . . . . . . 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 . . . . . . . . 
. . . . . . . . . . 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 . . . . . . . . . 
. . . . . . . . . . . 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 . . . . . . . . . . 
. . . . . . . . . . . . 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 . . . . . . . . . . . 
. . . . . . . . . . . . . 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 . . . . . . . . . . . . 
. . . . . . . . . . . . . . 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
`, SpriteKind.BatAggro)
    }
    for (let value of sprites.allOfKind(SpriteKind.Bat2)) {
        sprites.setDataBoolean(value, "Aggro", false)
        sprites.setDataNumber(value, "Hits", 2)
        sprites.setDataNumber(value, "BatLeft", -1)
        sprites.setDataNumber(value, "BatDown", 1)
        BatVisionRange2 = sprites.create(img`
. . . . . . . . . . . . . . . . . . . . . . . . . . . . 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 . . . . . . . . . . . . . 
. . . . . . . . . . . . . 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 . . . . . . . . . . . . 
. . . . . . . . . . . . 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 . . . . . . . . . . . 
. . . . . . . . . . . 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 . . . . . . . . . . 
. . . . . . . . . . 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 . . . . . . . . . 
. . . . . . . . . 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 . . . . . . . . 
. . . . . . . . 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 . . . . . . . 
. . . . . . . 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 . . . . . . 
. . . . . . . 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 . . . . . . 
. . . . . . 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 . . . . . 
. . . . . 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 . . . . 
. . . . . 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 . . . . 
. . . . 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 . . . 
. . . . 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 . . . 
. . . 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 . . 
. . . 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 . . 
. . . 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 . . 
. . 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 . 
. . 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 . 
. . 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 . 
. 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
. 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
. 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
. 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
. 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
. 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
. 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
. 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
. 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
. 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
. 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
. 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
. 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
. 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
. 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
. 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
. 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
. . 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 . 
. . 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 . 
. . 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 . 
. . . 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 . . 
. . . 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 . . 
. . . 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 . . 
. . . . 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 . . . 
. . . . 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 . . . 
. . . . . 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 . . . . 
. . . . . 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 . . . . 
. . . . . . 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 . . . . . 
. . . . . . . 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 . . . . . . 
. . . . . . . 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 . . . . . . 
. . . . . . . . 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 . . . . . . . 
. . . . . . . . . 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 . . . . . . . . 
. . . . . . . . . . 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 . . . . . . . . . 
. . . . . . . . . . . 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 . . . . . . . . . . 
. . . . . . . . . . . . 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 . . . . . . . . . . . 
. . . . . . . . . . . . . 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 . . . . . . . . . . . . 
. . . . . . . . . . . . . . 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
`, SpriteKind.BatAggro2)
    }
    for (let value of sprites.allOfKind(SpriteKind.Bat3)) {
        sprites.setDataBoolean(value, "Aggro", false)
        sprites.setDataNumber(value, "Hits", 2)
        sprites.setDataNumber(value, "BatLeft", -1)
        sprites.setDataNumber(value, "BatDown", 1)
        BatVisionRange3 = sprites.create(img`
. . . . . . . . . . . . . . . . . . . . . . . . . . . . 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 . . . . . . . . . . . . . 
. . . . . . . . . . . . . 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 . . . . . . . . . . . . 
. . . . . . . . . . . . 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 . . . . . . . . . . . 
. . . . . . . . . . . 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 . . . . . . . . . . 
. . . . . . . . . . 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 . . . . . . . . . 
. . . . . . . . . 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 . . . . . . . . 
. . . . . . . . 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 . . . . . . . 
. . . . . . . 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 . . . . . . 
. . . . . . . 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 . . . . . . 
. . . . . . 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 . . . . . 
. . . . . 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 . . . . 
. . . . . 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 . . . . 
. . . . 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 . . . 
. . . . 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 . . . 
. . . 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 . . 
. . . 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 . . 
. . . 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 . . 
. . 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 . 
. . 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 . 
. . 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 . 
. 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
. 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
. 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
. 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
. 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
. 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
. 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
. 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
. 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
. 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
. 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
. 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
. 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
. 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
. 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
. 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
. 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
. . 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 . 
. . 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 . 
. . 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 . 
. . . 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 . . 
. . . 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 . . 
. . . 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 . . 
. . . . 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 . . . 
. . . . 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 . . . 
. . . . . 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 . . . . 
. . . . . 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 . . . . 
. . . . . . 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 . . . . . 
. . . . . . . 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 . . . . . . 
. . . . . . . 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 . . . . . . 
. . . . . . . . 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 . . . . . . . 
. . . . . . . . . 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 . . . . . . . . 
. . . . . . . . . . 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 . . . . . . . . . 
. . . . . . . . . . . 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 . . . . . . . . . . 
. . . . . . . . . . . . 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 . . . . . . . . . . . 
. . . . . . . . . . . . . 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 . . . . . . . . . . . . 
. . . . . . . . . . . . . . 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
`, SpriteKind.BatAggro3)
    }
    EndCamera = sprites.create(img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, SpriteKind.Null)
    mySprite.z = 1
    DmgNumberList = [img`
. 1 . 
1 1 . 
. 1 . 
. 1 . 
1 1 1 
`, img`
. 1 1 . 
1 . . 1 
. . 1 . 
. 1 . . 
1 1 1 1 
`, img`
. 1 1 . 
1 . . 1 
. . 1 . 
. . 1 . 
1 . . 1 
. 1 1 . 
`, img`
. . 1 1 . 
. 1 . 1 . 
1 . . 1 . 
1 1 1 1 1 
. . . 1 . 
. . . 1 . 
`, img`
1 1 1 1 1 
1 . . . . 
1 1 1 . . 
. . . 1 . 
1 . . . 1 
. 1 1 1 . 
`, img`
. . . 1 1 
. . 1 . . 
. 1 . . . 
1 1 1 1 . 
1 . . . 1 
. 1 1 1 . 
`, img`
. 1 1 1 1 
. . . . 1 
. . . . 1 
. . . 1 . 
. . 1 . . 
. 1 . . . 
`, img`
. 1 1 . 
1 . . 1 
1 . . 1 
. 1 1 . 
1 . . 1 
1 . . 1 
. 1 1 . 
`]
    PowerUpMarkerUp = sprites.create(img`
. . . . . 
. . . . . 
. . . . . 
. . . . . 
. . . . . 
. . . . . 
`, SpriteKind.powerUpMarker)
    color.clearFadeEffect()
}
sprites.onOverlap(SpriteKind.Projectile, SpriteKind.Boss1, function (sprite, otherSprite) {
    sprite.destroy()
    for (let index = 0; index < 4; index++) {
        otherSprite.setFlag(SpriteFlag.Invisible, true)
        pause(15)
        otherSprite.setFlag(SpriteFlag.Invisible, false)
        pause(15)
    }
    sprites.changeDataNumberBy(otherSprite, "Hits", sprites.readDataNumber(sprite, "Damage"))
    DmgNoSprite = sprites.create(img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, SpriteKind.DamageNumber)
    DmgNoSprite.setImage(DmgNumberList[DamageAmount])
    DmgNoSprite.z = 10
    DmgNoSprite.setPosition(otherSprite.x, otherSprite.top - 5)
    animation.runMovementAnimation(
    DmgNoSprite,
    animation.animationPresets(animation.bobbing),
    500,
    false
    )
    if (sprites.readDataNumber(otherSprite, "Hits") <= 0) {
        otherSprite.destroy()
        BossDeathAnimationClock = game.runtime()
        BossDeathAnimation = sprites.create(img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, SpriteKind.BossDeathPartical)
        BossDeathAnimation.setPosition(otherSprite.x, otherSprite.y)
        animation.runImageAnimation(
        BossDeathAnimation,
        [img`
. . d d d d d d d d d d d d d d d d d d d d d d d d d d d d . . . . . . . . . . 
. . b b b b b b b b b b b b b b b b b b b b b b b b b b b d . . . . . . . . . . 
d d b b b b b b b b b b b b b b b b b b b b b b b b b b b d d d . . . . . . . . 
c b b b b b b b b b b b b b b b b b b b b b b b b b b b b b b b . . . . . . . . 
c b b b b b b b b b b b b b b b b b b b b b b b b b b b b b b b . . . . . . . . 
c b b b b b b b b b b b b b b b b b b b b b b b b b b b b b b b . . . . . . . . 
c b b b b b b b b b b b b b b b b b b b b b b b b b b b b b b b . . . . . . . . 
c b b b b b b b b b b b b b b b b b b b b b b b b b b b b b b b . . . . . . . . 
c b b b b b b d d d d d b b b b b b b b b d d d d d d b b b b b . . . . . . . . 
c b b b b b b f f f f b b b b b b b b b b b f f f f b b b b b b . . . . . . . . 
c b b b b b b b b b f f b b b b b b b b f f f b b b b b b b b b . . . . . . . . 
c b b b b b b b b b b f f b b b b b b b f f f b b b b b b b b b . . . . . . . . 
c b b b b b b b b b f f f f b b b b b f f f f b b b b b b b b b . . . . . . . . 
c b b b b b b b b f f f f f f b b b f f f f f f b b b b b b b b . . . . . . . . 
c b b b b b b b b f f f f f f b b b f f f f f f f b b b b b b b . . . . . . . . 
c b b b b b f f f f c c c c c c b c c c c c c c f f f f b b b b . . . . . . . . 
c b b b b b f c c c c b b b b b b b b b b b b c c c c c c b b b . . . . . . . . 
c b b b c c c c b b b b b b b b b b b b b b b b b b b c c c c b . . . . . . . . 
c b b b b b b b b b b b b b b b b b b b b b b b b b b b b b b b . . . . . . . . 
c b b b b b b b b b b b b b b b b b b b b b b b b b b b b b b b . . . . . . . . 
c b b b b b b b b b b f f f f f f f f f f f f b b b b b b b b b . . . . . . . . 
c b b b b b b b b f f f c c c c c c c c c c f f f b b b b b b b . . . . . . . . 
c b b b b b b f f f c c b b b b b b b b b b c c f f b b b b b b . . . . . . . . 
c b b b b b f f b b b b b b b b b b b b b b b b b f f b b b b b . . . . . . . . 
c b b b b b b b b b b b b b b b b b b b b b b b b b f b b b b b . . . . . . . . 
c b b b b b b b b b b b b b b b b b b b b b b b b b b b b b b b . . . . . . . . 
c b b b b b b b b b b b b b b b b b b b b b b b b b b b b b b b . . . . . . . . 
c b b b b b b b b b b b b b b b b b b b b b b b b b b b b b b b . . . . . . . . 
c b b b b b b b b b b b b b b b b b b b b b b b b b b b b b b b . . . . . . . . 
c c c b b b b b b b b b b b b b b b b b b b b b b b b b b b c c . . . . . . . . 
. . c b b b b b b b b b b b b b b b b b b b b b b b b b b b . . . . . . . . . . 
. . c c c c c c c c c c c c c c c c c c c c c c c c c c c c . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
`,img`
. . d d d d d d d d d d d d d f d d d d d d d d d d d d d d . . . . . . . . . . 
. . b b b b b b b b b b b b b f f f b b b b b b b b b b b d . . . . . . . . . . 
d d b b b b b b b b b b b b b b b f f b b b b b b b b b b d d d . . . . . . . . 
c b b b b b b b b b b b b b b b b b f b b b b b b b b b b b b b . . . . . . . . 
c b b b b b b b b b b b b b b b b b f f b b b b b b b b b b b b . . . . . . . . 
c b b b b b b b b b b b b b b b f f f b b b b b b b b b b b b b . . . . . . . . 
c b b b b b b b b b b b b b b f f b b b b b b b b b b b b b b b . . . . . . . . 
c b b b b b b b b b b b b b b f b b b b b b b b b b b b b b b b . . . . . . . . 
c b b b b b b b b b b b b b b b b b b b b b b b b b b b b b b b . . . . . . . . 
c b b b b b b d d d d d b b b b b b b b b d d d d d d b b b b b . . . . . . . . 
c b b b b b b f f f f b b b b b b b b b b b f f f f b b b b b b . . . . . . . . 
c b b b b b b b b b f f b b b b b b b b f f f b b b b b b b b b . . . . . . . . 
c b b b b b b b b b b f f b b b b b b b f f f b b b b b b b b b . . . . . . . . 
c b b b b b b b b b f f f f b b b b b f f f f b b b b b b b b b . . . . . . . . 
c b b b b b b b b f f f f f f b b b f f f f f f b b b b b b b b . . . . . . . . 
c b b b b b b b b f f f f f f b b b f f f f f f f b b b b b b b . . . . . . . . 
c b b b b b f f f f c c c c c c b c c c c c c c f f f f b b b b . . . . . . . . 
c b b b b b f c c c c b b b b b b b b b b b b c c c c c c b b b . . . . . . . . 
c b b b c c c c b b b b b b b b b b b b b b b b b b b c c c c b . . . . . . . . 
c b b b b b b b b b b b b b b b b b b b b b b b b b b b b b b b . . . . . . . . 
c b b b b b b b b b b b b b b b b b b b b b b b b b b b b b b b . . . . . . . . 
c b b b b b b b b b b f f f f f f f f f f f f b b b b b b b b b . . . . . . . . 
c b b b b b b b b f f f c c c c c c c c c c f f f b b b b b b b . . . . . . . . 
c b b b b b b f f f c c b b b b b b b b b b c c f f b b b b b b . . . . . . . . 
c b b b b b f f b b b b b b b b b b b b b b b b b f f b b b b b . . . . . . . . 
c b b b b b b b b b b b b b b b b b b b b b b b b b f b b b b b . . . . . . . . 
c b b b b b b b b b b b b b b b b b b b b b b b b b b b b b b b . . . . . . . . 
c b b b b b b b b b b b b b b b b b b b b b b b b b b b b b b b . . . . . . . . 
c b b b b b b b b b b b b b b b b b b b b b b b b b b b b b b b . . . . . . . . 
c c c b b b b b b b b b b b b b b b b b b b b b b b b b b b c c . . . . . . . . 
. . c b b b b b b b b b b b b b b b b b b b b b b b b b b b . . . . . . . . . . 
. . c c c c c c c c c c c c c c c c c c c c c c c c c c c c . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
`,img`
. . d d d d d d d d d d d d d f d d d d d d d d d d d d d d . . . . . . . . . . 
. . b b b b b b b b b b b b b f f f b b b b b b b b b b b d . . . . . . . . . . 
d d b b b b b b b b b b b b b b b f f b b b b b b b b b b d d d . . . . . . . . 
c b b b b b b b b b b b b b b b b b f b b b b b b b b b b b b b . . . . . . . . 
c b b b b b b b b b b b b b b b b b f f b b b b b b b b b b b b . . . . . . . . 
c b b b b b b b b b b b b b b b f f f b b b b b b b b b b b b b . . . . . . . . 
c b b b b b b b b b b b b b b f f b b b b b b b b b b b b b b b . . . . . . . . 
c b b b b b b b b b b b b f f f b b b b b b b b b b b b b b b b . . . . . . . . 
c b b b b b b d d d d d b b b f f f b b b d d d d d d b b b b b . . . . . . . . 
c b b b b b b f f f f b b b b b b f b b b b f f f f b b b b b b . . . . . . . . 
c b b b b b b b b b f f b b b b b f f b f f f b b b b b b b b b . . . . . . . . 
c b b b b b b b b b b f f b b b b b f b f f f b b b b b b b b b . . . . . . . . 
c b b b b b b b b b f f f f b b b b f f f f f b b b b b b b b b . . . . . . . . 
c b b b b b b b b f f f f f f b b b f f f f f f b b b b b b b b . . . . . . . . 
c b b b b b b b b f f f f f f b b b f f f f f f f b b b b b b b . . . . . . . . 
c b b b b b f f f f c c c c c c b c c c c c c c f f f f b b b b . . . . . . . . 
c b b b b b f c c c c b b b b b b f f b b b b c c c c c c b b b . . . . . . . . 
c b b b c c c c b b b b b b b b b f b b b b b b b b b c c c c b . . . . . . . . 
c b b b b b b b b b b b b b b f f f b b b b b b b b b b b b b b . . . . . . . . 
c b b b b b b b b b b b b b b f b b b b b b b b b b b b b b b b . . . . . . . . 
c b b b b b b b b f f f f f f f f f f f f f f f f b b b b b b b . . . . . . . . 
c b b b b b b f f f c c c c c c c c c c c c c c f f b b b b b b . . . . . . . . 
c b b b b b f f b b b b b b f b b b b b b b b b b f f b b b b b . . . . . . . . 
c b b b b b b b b b b b b b f b b b b b b b b b b b b b b b b b . . . . . . . . 
c b b b b b b b b b b b b b b b b b b b b b b b b b b b b b b b . . . . . . . . 
c b b b b b b b b b b b b b b b b b b b b b b b b b b b b b b b . . . . . . . . 
c b b b b b b b b b b b b b b b b b b b b b b b b b b b b b b b . . . . . . . . 
c b b b b b b b b b b b b b b b b b b b b b b b b b b b b b b b . . . . . . . . 
c b b b b b b b b b b b b b b b b b b b b b b b b b b b b b b b . . . . . . . . 
c c c b b b b b b b b b b b b b b b b b b b b b b b b b b b c c . . . . . . . . 
. . c b b b b b b b b b b b b b b b b b b b b b b b b b b b . . . . . . . . . . 
. . c c c c c c c c c c c c c c c c c c c c c c c c c c c c . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
`,img`
. . d d d d d d d d d d d d d f d d d d d d d d d d d d d d . . . . . . . . . . 
. . b b b b b b b b b b b b b f f f b b b b b b b b b b b d . . . . . . . . . . 
d d b b b b b b b b b b b b b b b f f b b b b b b b b b b d d d . . . . . . . . 
c b b b b b b b b b b b b b b b b b f b b b b b b b b b b b b b . . . . . . . . 
c b b b b b b b b b b b b b b b b b f f b b b b b b b b b b b b . . . . . . . . 
c b b b b b b b b b b b b b b b f f f b b b b b b b b b b b b b . . . . . . . . 
c b b b b b b b b b b b b b b f f b b b b b b b b b b b b b b b . . . . . . . . 
c b b b b b b b b b b b b f f f b b b b b b b b b b b b b b b b . . . . . . . . 
c b b b b b b d d d d d b b b f f f b b b d d d d d d b b b b b . . . . . . . . 
c b b b b b b f f f f b b b b b b f b b b b f f f f b b b b b b . . . . . . . . 
c b b b b b b b b b f f b b b b b f f b f f f b b b b b b b b b . . . . . . . . 
c b b b b b b b b b b f f b b b b b f b f f f b b b b b b b b b . . . . . . . . 
c b b b b b b b b b f f f f b b b b f f f f f b b b b b b b b b . . . . . . . . 
c b b b b b b b b f f f f f f b b b f f f f f f b b b b b b b b . . . . . . . . 
c b b b b b b b b f f f f f f b b b f f f f f f f b b b b b b b . . . . . . . . 
c b b b b b f f f f c c c c c c b c c c c c c c f f f f b b b b . . . . . . . . 
c b b b b b f c c c c b b b b b b f f b b b b c c c c c c b b b . . . . . . . . 
c b b b c c c c b b b b b b b b b f b b b b b b b b b c c c c b . . . . . . . . 
c b b b b b b b b b b b b b b f f f b b b b b b b b b b b b b b . . . . . . . . 
c b b b b b b b b b b b b b b f b b b b b b b b b b b b b b b b . . . . . . . . 
c b b b b b b b b f f f f f f f f f f f f f f f f b b b b b b b . . . . . . . . 
c b b b b b b f f f c c c c c c c c c c c c c c f f b b b b b b . . . . . . . . 
c b b b b b f f b b b b b b f b b b b b b b b b b f f b b b b b . . . . . . . . 
c b b b b b b b b b b b b b f b b b b b b b b b b b b b b b b b . . . . . . . . 
c b b b b b b b b b b b b b f f b b b b b b b b b b b b b b b b . . . . . . . . 
c b b b b b b b b b b b b b b f f f f b b b b b b b b b b b b b . . . . . . . . 
c b b b b b b b b b b b b b b f b b f f b b b b b b b b b b b b . . . . . . . . 
c b b b b b b b b b b b f f f f b b b f f b b b b b b b b b b b . . . . . . . . 
c b b b b b b b b b b f f b b b b b b b f f b b b b b b b b b b . . . . . . . . 
c c c b b b b b b b b f b b b b b b b b b f b b b b b b b b c c . . . . . . . . 
. . c b b b b b b b f f b b b b b b b b b f b b b b b b b b . . . . . . . . . . 
. . c c c c c c c c f c c c c c c c c c c c c c c c c c c c . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
`,img`
. . d d d d d d d d d d d d d f . . . . d d d d d d d d d d d d d d . . . . . . 
. . b b b b b b b b b b b b b f f f . . . . . b b b b b b b b b b b d . . . . . 
d d b b b b b b b b b b b b b b b f f . . . . . b b b b b b b b b b d d d . . . 
c b b b b b b b b b b b b b b b b b f . . . . . b b b b b b b b b b b b b . . . 
c b b b b b b b b b b b b b b b b b f f . . . . . b b b b b b b b b b b b . . . 
c b b b b b b b b b b b b b b b f f f . . . . . b b b b b b b b b b b b b . . . 
c b b b b b b b b b b b b b b f f . . . . . b b b b b b b b b b b b b b b . . . 
c b b b b b b b b b b b b f f f . . . . . b b b b b b b b b b b b b b b b . . . 
c b b b b b b d d d d d b b b f f f . . . . . b b b d d d d d d b b b b b . . . 
c b b b b b b f f f f b b b b b b f . . . . . b b b b f f f f b b b b b b . . . 
c b b b b b b b b b f f b b b b b f f . . . . . b f f f b b b b b b b b b . . . 
c b b b b b b b b b b f f b b b b b f . . . . . b f f f b b b b b b b b b . . . 
c b b b b b b b b b f f f f b b b b f . . . . . f f f f b b b b b b b b b . . . 
c b b b b b b b b f f f f f f b b b f . . . . . f f f f f b b b b b b b b . . . 
c b b b b b b b b f f f f f f b b b f . . . . . f f f f f f b b b b b b b . . . 
c b b b b b f f f f c c c c c c b c c . . . . . c c c c c f f f f b b b b . . . 
c b b b b b f c c c c b b b b b b f f . . . . . b b b b c c c c c c b b b . . . 
c b b b c c c c b b b b b b b b b f . . . . . b b b b b b b b b c c c c b . . . 
c b b b b b b b b b b b b b b f f f . . . . . b b b b b b b b b b b b b b . . . 
c b b b b b b b b b b b b b b f . . . . . b b b b b b b b b b b b b b b b . . . 
c b b b b b b b b f f f f f f . . . . . f f f f f f f f f f b b b b b b b . . . 
c b b b b b b f f f c c c c c . . . . . c c c c c c c c c f f b b b b b b . . . 
c b b b b b f f b b b b b b f . . . . . b b b b b b b b b b f f b b b b b . . . 
c b b b b b b b b b b b b b f . . . . . b b b b b b b b b b b b b b b b b . . . 
c b b b b b b b b b b b b b f f . . . . . b b b b b b b b b b b b b b b b . . . 
c b b b b b b b b b b b b b b f . . . . . . . . b b b b b b b b b b b b b . . . 
c b b b b b b b b b b b b b b f . . . . . . . . . b b b b b b b b b b b b . . . 
c b b b b b b b b b b b f f f f . b b . . . . . . . b b b b b b b b b b b . . . 
c b b b b b b b b b b f f . . . . b b b . . . . . . . b b b b b b b b b b . . . 
c c c b b b b b b b b f . . b b b b b b b . . . . . . b b b b b b b b c c . . . 
. . c b b b b b b b f . . b b b b b b b b b . . . . . b b b b b b b b . . . . . 
. . c c c c c c c c f . . b b b b b b b b b . . . . . c c c c c c c c . . . . . 
. . . . . . . . . . . . c c c c c c c c c c c . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
`,img`
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . d d d d d d d d d d d d d d . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . b b b b b b b b b b b d . . . 
. d d d d d d d d d d d d d f . . . . . . . . . . . b b b b b b b b b b d d d . 
. b b b b b b b b b b b b b f f f . . . . . . . . . b b b b b b b b b b b b b . 
d b b b b b b b b b b b b b b b f f . . . . . . . . . b b b b b b b b b b b b . 
b b b b b b b b b b b b b b b b b f . . . . . . . . b b b b b b b b b b b b b . 
b b b b b b b b b b b b b b b b b f f . . . . . b b b b b b b b b b b b b b b . 
b b b b b b b b b b b b b b b f f f . . . . . b b b b b b b b b b b b b b b b . 
b b b b b b b b b b b b b b f f . . . . . . . . . b b b d d d d d d b b b b b . 
b b b b b b b b b b b b f f f . . . . . . . . . . b b b b f f f f b b b b b b . 
b b b b b b d d d d d b b b f f f . . . . . . . . . b f f f b b b b b b b b b . 
b b b b b b f f f f b b b b b b f . . . . . . . . . b f f f b b b b b b b b b . 
b b b b b b b b b f f b b b b b f f . . . . . . . . f f f f b b b b b b b b b . 
b b b b b b b b b b f f b b b b b f . . . . . . . . f f f f f b b b b b b b b . 
b b b b b b b b b f f f f b b b b f . . . . . . . . f f f f f f b b b b b b b . 
b b b b b b b b f f f f f f b b b f . . . . . . . . c c c c c f f f f b b b b . 
b b b b b b b b f f f f f f b b b f . . . . . . . . b b b b c c c c c c b b b . 
b b b b b f f f f c c c c c c b c c . . . . . . . b b b b b b b b b c c c c b . 
b b b b b f c c c c b b b b b b f f . . . . . . . b b b b b b b b b b b b b b . 
b b b c c c c b b b b b b b b b f . . . . . . b b b b b b b b b b b b b b b b . 
b b b b b b b b b b b b b b f f f . . . . . f f f f f f f f f f b b b b b b b . 
b b b b b b b b b b b b b b f . . . . . . . c c c c c c c c c f f b b b b b b . 
b b b b b b b b f f f f f f . . . . . . . . b b b b b b b b b b f f b b b b b . 
b b b b b b f f f c c c c c . . . . . . . . b b b b b b b b b b b b b b b b b . 
b b b b b f f b b b b b b f . . . . . . . . . b b b b b b b b b b b b b b b b . 
b b b b b b b b b b b b b f . . . . . . . . . . . . b b b b b b b b b b b b b . 
b b b b b b b b b b b b b f f . . . . . . . . . . . . b b b b b b b b b b b b . 
b b b b b b b b b b b b b b f . . . . . . . . . . . . . b b b b b b b b b b b . 
b b b b b b b b b b b b b b f . . . . . . . . . . . . . . b b b b b b b b b b . 
b b b b b b b b b b b f f f f . . b b . . . . . . . . . . b b b b b b b b c c . 
b b b b b b b b b b f f . . . . . b b b . . . . . . . . . b b b b b b b b . . . 
c c b b b b b b b b f . . . b b b b b b b . . . . . . . . c c c c c c c c . . . 
. c b b b b b b b f . . . b b b b b b b b b . . . . . . . . . . . . . . . . . . 
. c c c c c c c c f . . . b b b b b b b b b . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . c c c c c c c c c c c . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
`,img`
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. d d d d d d d d d d d d d f . . . . . . . . . . . . . . . . . . . . . . . . . 
. b b b b b b b b b b b b b f f f . . . . . . . . . . . . . . . . . . . . . . . 
d b b b b b b b b b b b b b b b f f . . . . . . . . . . . . . . . . . . . . . . 
b b b b b b b b b b b b b b b b b f . . . . . . . . . . . . . . . . . . . . . . 
b b b b b b b b b b b b b b b b b f f . . . . . . . d d d d d d d d d d d d d d 
b b b b b b b b b b b b b b b f f f . . . . . . . . . . . b b b b b b b b b b b 
b b b b b b b b b b b b b b f f . . . . . . . . . . . . . . b b b b b b b b b b 
b b b b b b b b b b b b f f f . . . . . . . . . . . . . . . b b b b b b b b b b 
b b b b b b d d d d d b b b f f f . . . . . . . . . . . . . . b b b b b b b b b 
b b b b b b f f f f b b b b b b f . . . . . . . . . . . . . b b b b b b b b b b 
b b b b b b b b b f f b b b b b f f . . . . . . . . . . b b b b b b b b b b b b 
b b b b b b b b b b f f b b b b b f . . . . . . . . . b b b b b b b b b b b b b 
b b b b b b b b b f f f f b b b b f . . . . . . . . . . . b b b d d d d d d b b 
b b b b b b b b f f f f f f b b b f . . . . . . . . . . . b b b b f f f f b b b 
b b b b b b b b f f f f f f b b b f . . . . . . . . . . . . b f f f b b b b b b 
b b b b b f f f f c c c c c c b c c . . . . . . . . . . . . b f f f b b b b b b 
b b b b b f c c c c b b b b b b f f . . . . . . . . . . . . f f f f b b b b b b 
b b b c c c c b b b b b b b b b f . . . . . . . . . . . . . f f f f f b b b b b 
b b b b b b b b b b b b b b f f f . . . . . . . . . . . . . f f f f f f b b b b 
b b b b b b b b b b b b b b f . . . . . . . . . . . . . . . c c c c c f f f f b 
b b b b b b b b f f f f f f . . . . . . . . . . . . . . . . b b b b c c c c c c 
b b b b b b f f f c c c c c . . . . . . . . . . . . . . . b b b b b b b b b c c 
b b b b b f f b b b b b b f . . . . . . . . . . . . . . . b b b b b b b b b b b 
b b b b b b b b b b b b b f . . . . . . . . . . . . . b b b b b b b b b b b b b 
b b b b b b b b b b b b b f f . . . . . . . . . . . f f f f f f f f f f b b b b 
b b b b b b b b b b b b b b f . . . . . . . . . . . c c c c c c c c c f f b b b 
b b b b b b b b b b b b b b f . . . . . . . . . . . b b b b b b b b b b f f b b 
b b b b b b b b b b b f f f f . . . . . . . . . . . b b b b b b b b b b b b b b 
b b b b b b b b b b f f . . . . . . . . . . . . . . . b b b b b b b b b b b b b 
`],
        200,
        false
        )
    }
})
function BossSpawn () {
    BossIntroClock = game.runtime()
    Boss = sprites.create(img`
f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f 
f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f 
f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f 
f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f 
f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f 
f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f 
f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f 
f f f f f f f d d d d f f f f f f f f f f f f d d d d f f f f f 
f f f f f f f f c c c d d d f f f f f f d d d c c c f f f f f f 
f f f f f f f f c c c c c c d f f f f d c c c c c c f f f f f f 
f f f f f f f f f f c c c c c f f f f c c c c c f f f f f f f f 
f f f f f f f f f f c c c c c c f f c c c c c c f f f f f f f f 
f f f f f f f f f f f c c c c c f f c c c c c f f f f f f f f f 
f f f f f f f f f f f f f f c c f f c c f f f f f f f f f f f f 
f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f 
f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f 
f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f 
f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f 
f f f f f f f f f d f f f d c d f f f d c d f f f d f f f f f f 
f f f f f f f f f c d f d c c c d f d c c c d f d c f f f f f f 
f f f f f f f f c c c d c c c c c d c c c c c d c c c f f f f f 
f f f f f f f c c c c c c c c c c c c c c c c c c c c c f f f f 
f f f f f f f f c c c c c c c c c c c c c c c c c c c f f f f f 
f f f f f f f f f c c c c c f c c c c c f c c c c c f f f f f f 
f f f f f f f f f f c c c f f f c c c f f f c c c f f f f f f f 
f f f f f f f f f f f c f f f f f c f f f f f c f f f f f f f f 
f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f 
f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f 
f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f 
f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f 
f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f 
f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f 
`, SpriteKind.Boss1)
    sprites.setDataNumber(Boss, "Hits", 85)
    Boss.setFlag(SpriteFlag.Ghost, true)
    bossIntro = 1
    Boss.setPosition(190, 0)
    for (let index = 0; index < 15; index++) {
        Boss.y += 10
        pause(200)
    }
    for (let index = 0; index < 7; index++) {
        Boss.setImage(img`
. . . d d d d d d d d d d d d d d d d d d d d d d d d d d . . . 
. . . d b b b b b b b b b b b b b b b b b b b b b b b b b . . . 
. . . d b b b b b b b b b b b b b b b b b b b b b b b b b . . . 
. d d d b b b b b b b b b b b b b b b b b b b b b b b b b d d . 
. c c b b b b b b b b b b b b b b b b b b b b b b b b b b b b . 
. c c b b b b b b b b b b b b b b b b b b b b b b b b b b b b . 
. c c b b b b b b b b b b b b b b b b b b b b b b b b b b b b . 
. c c b b b d d d d d b b b b b b b b b b b b d d d d d b b b . 
. c c b b b f f f f f d d d b b b b b b d d d f f f f f b b b . 
. c c b b b b b c f f f f f d b b b b d f f f f f c b b b b b . 
. c c b b b b b b f f f f f f b b b b f f f f f f b b b b b b . 
. c c b b b b b b b c f f f f b b b b f f f f c b b b b b b b . 
. c c b b b b b b b f f f f f f b b f f f f f f b b b b b b b . 
. c c b b b b b c c c c c c c c b b c c c c c c c b b b b b b . 
. c c b b b b b b b b b b b b b b b b b b b b b b b b b b b b . 
. c c b b b b b b b b b b b b b b b b b b b b b b b b b b b b . 
. c c b b b b b b b b b b b b b b b b b b b b b b b b b b b b . 
. c c b b b b b b b b b b b b b b b b b b b b b b b b b b b b . 
. c c b b b b b f d b b b d f d b b b d f d b b b d f b b b b . 
. c c b b b b f f f d b d f f f d b d f f f d b d f f f b b b . 
. c c b b b f f f f f d f f f f f d f f f f f d f f f f b b b . 
. c c b b f f f f f f f f f f f f f f f f f f f f f f c b b b . 
. c c b b f f f c f f f f f c f f f f f c f f f f f c b b b b . 
. c c b b c f c b c f f f c b c f f f c b c f f f c b b b b b . 
. c c b b b c b b b c f c b b b c f c b b b c f c b b b b b b . 
. c c b b b b b b b b b b b b b b b b b b b b b b b b b b b b . 
. c c b b b b b b b b b b b b b b b b b b b b b b b b b b b b . 
. c c b b b b b b b b b b b b b b b b b b b b b b b b b b b b . 
. c c c c b b b b b b b b b b b b b b b b b b b b b b b c c c . 
. . . c c b b b b b b b b b b b b b b b b b b b b b b b . . . . 
. . . c c b b b b b b b b b b b b b b b b b b b b b b b . . . . 
. . . c c c c c c c c c c c c c c c c c c c c c c c c c . . . . 
`)
        pause(50)
        Boss.setImage(img`
f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f 
f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f 
f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f 
f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f 
f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f 
f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f 
f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f 
f f f f f f f d d d d f f f f f f f f f f f f d d d d f f f f f 
f f f f f f f f c c c d d d f f f f f f d d d c c c f f f f f f 
f f f f f f f f c c c c c c d f f f f d c c c c c c f f f f f f 
f f f f f f f f f f c c c c c f f f f c c c c c f f f f f f f f 
f f f f f f f f f f c c c c c c f f c c c c c c f f f f f f f f 
f f f f f f f f f f f c c c c c f f c c c c c f f f f f f f f f 
f f f f f f f f f f f f f f c c f f c c f f f f f f f f f f f f 
f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f 
f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f 
f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f 
f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f 
f f f f f f f f f d f f f d c d f f f d c d f f f d f f f f f f 
f f f f f f f f f c d f d c c c d f d c c c d f d c f f f f f f 
f f f f f f f f c c c d c c c c c d c c c c c d c c c f f f f f 
f f f f f f f c c c c c c c c c c c c c c c c c c c c c f f f f 
f f f f f f f f c c c c c c c c c c c c c c c c c c c f f f f f 
f f f f f f f f f c c c c c f c c c c c f c c c c c f f f f f f 
f f f f f f f f f f c c c f f f c c c f f f c c c f f f f f f f 
f f f f f f f f f f f c f f f f f c f f f f f c f f f f f f f f 
f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f 
f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f 
f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f 
f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f 
f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f 
f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f 
`)
        pause(100)
    }
    for (let index = 0; index < 4; index++) {
        Boss.setImage(img`
. . . d d d d d d d d d d d d d d d d d d d d d d d d d d . . . 
. . . d b b b b b b b b b b b b b b b b b b b b b b b b b . . . 
. . . d b b b b b b b b b b b b b b b b b b b b b b b b b . . . 
. d d d b b b b b b b b b b b b b b b b b b b b b b b b b d d . 
. c c b b b b b b b b b b b b b b b b b b b b b b b b b b b b . 
. c c b b b b b b b b b b b b b b b b b b b b b b b b b b b b . 
. c c b b b b b b b b b b b b b b b b b b b b b b b b b b b b . 
. c c b b b d d d d d b b b b b b b b b b b b d d d d d b b b . 
. c c b b b f f f f f d d d b b b b b b d d d f f f f f b b b . 
. c c b b b b b c f f f f f d b b b b d f f f f f c b b b b b . 
. c c b b b b b b f f f f f f b b b b f f f f f f b b b b b b . 
. c c b b b b b b b c f f f f b b b b f f f f c b b b b b b b . 
. c c b b b b b b b f f f f f f b b f f f f f f b b b b b b b . 
. c c b b b b b c c c c c c c c b b c c c c c c c b b b b b b . 
. c c b b b b b b b b b b b b b b b b b b b b b b b b b b b b . 
. c c b b b b b b b b b b b b b b b b b b b b b b b b b b b b . 
. c c b b b b b b b b b b b b b b b b b b b b b b b b b b b b . 
. c c b b b b b b b b b b b b b b b b b b b b b b b b b b b b . 
. c c b b b b b f d b b b d f d b b b d f d b b b d f b b b b . 
. c c b b b b f f f d b d f f f d b d f f f d b d f f f b b b . 
. c c b b b f f f f f d f f f f f d f f f f f d f f f f b b b . 
. c c b b f f f f f f f f f f f f f f f f f f f f f f c b b b . 
. c c b b f f f c f f f f f c f f f f f c f f f f f c b b b b . 
. c c b b c f c b c f f f c b c f f f c b c f f f c b b b b b . 
. c c b b b c b b b c f c b b b c f c b b b c f c b b b b b b . 
. c c b b b b b b b b b b b b b b b b b b b b b b b b b b b b . 
. c c b b b b b b b b b b b b b b b b b b b b b b b b b b b b . 
. c c b b b b b b b b b b b b b b b b b b b b b b b b b b b b . 
. c c c c b b b b b b b b b b b b b b b b b b b b b b b c c c . 
. . . c c b b b b b b b b b b b b b b b b b b b b b b b . . . . 
. . . c c b b b b b b b b b b b b b b b b b b b b b b b . . . . 
. . . c c c c c c c c c c c c c c c c c c c c c c c c c . . . . 
`)
        pause(200)
        Boss.setImage(img`
. . . d d d d d d d d d d d d d d d d d d d d d d d d d d . . . 
. . . d b b b b b b b b b b b b b b b b b b b b b b b b b . . . 
. . . d b b b b b b b b b b b b b b b b b b b b b b b b b . . . 
. d d d b b b b b b b b b b b b b b b b b b b b b b b b b d d . 
. c c b b b b b b b b b b b b b b b b b b b b b b b b b b b b . 
. c c b b b b b b b b b b b b b b b b b b b b b b b b b b b b . 
. c c b b b b b b b b b b b b b b b b b b b b b b b b b b b b . 
. c c b b b d d d d d b b b b b b b b b b b b d d d d d b b b . 
. c c b b f f f f f f d d d b b b b b b d d d f f f f f f b b . 
. c c b b b b f f f f f f f d b b b b d f f f f f f f b b b b . 
. c c b b b b b f f f f f f f b b b b f f f f f f f b b b b b . 
. c c b b b b b f f f f f f f b b b b f f f f f f f b b b b b . 
. c c b b b b b b b f f f f b b b b b b f f f f b b b b b b b . 
. c c b b b b b c c c c c c b b b b b b c c c c c b b b b b b . 
. c c b b b b b b b b b b b b b b b b b b b b b b b b b b b b . 
. c c b b b b b b b b b b b b b b b b b b b b b b b b b b b b . 
. c c b b b b b b b b b b b b b b b b b b b b b b b b b b b b . 
. c c b b b b b b b b b b b b b b b b b b b b b b b b b b b b . 
. c c b b b b b b b b b b b b b b b b b b b b b b b b b b b b . 
. c c b b b b b b b b b b b b b b b b b b b b b b b b b b b b . 
. c c b b b b d f d b b b d f d b b b d f d b b b d f b b b b . 
. c c b b b b f f f d b d f f f d b d f f f d b d f f f b b b . 
. c c b b b f f f f f d f f f f f d f f f f f d f f f b b b b . 
. c c b b c f c b c f f f c b c f f f c b c f f f c b b b b b . 
. c c b b b c b b b c f c b b b c f c b b b c f c b b b b b b . 
. c c b b b b b b b b b b b b b b b b b b b b b b b b b b b b . 
. c c b b b b b b b b b b b b b b b b b b b b b b b b b b b b . 
. c c b b b b b b b b b b b b b b b b b b b b b b b b b b b b . 
. c c c c b b b b b b b b b b b b b b b b b b b b b b b c c c . 
. . . c c b b b b b b b b b b b b b b b b b b b b b b b . . . . 
. . . c c b b b b b b b b b b b b b b b b b b b b b b b . . . . 
. . . c c c c c c c c c c c c c c c c c c c c c c c c c . . . . 
`)
        pause(200)
    }
    Boss.setFlag(SpriteFlag.Ghost, false)
    bossIntro = 2
    sprites.setDataNumber(Boss, "Right", 1)
}
sprites.onDestroyed(SpriteKind.BossFireball, function (sprite) {
    if (Math.percentChance(50)) {
        ItemDrop = Math.randomRange(1, 2)
        if (ItemDrop == 1) {
            Heart2 = sprites.create(img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . c 2 . . . 2 2 . . . . 
. . . . c 2 2 2 . 2 2 4 2 . . . 
. . . . c 2 2 2 2 2 4 2 2 . . . 
. . . . c 2 2 2 2 2 2 2 2 . . . 
. . . . . c 2 2 2 2 2 2 . . . . 
. . . . . . c 2 2 2 2 . . . . . 
. . . . . . . c 2 2 . . . . . . 
. . . . . . . . c . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, SpriteKind.Heart)
            Heart2.setPosition(sprite.x, sprite.y)
            animation.runMovementAnimation(
            Heart2,
            animation.animationPresets(animation.bobbing),
            2000,
            true
            )
        } else if (ItemDrop == 2) {
            PowerUp2 = sprites.create(img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . a a . . . . . . . . 
. . . . . a 1 1 a . . . . . . . 
. . . . a 1 1 1 1 a . . . . . . 
. . . a 1 1 1 1 1 1 a . . . . . 
. . a 1 1 1 1 1 1 1 1 a . . . . 
. . . a a a 1 1 a a a . . . . . 
. . . . . a 1 1 a . . . . . . . 
. . . . . a 1 1 a . . . . . . . 
. . . . . a 1 1 a . . . . . . . 
. . . . . a 1 1 a . . . . . . . 
. . . . . . a a . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, SpriteKind.PowerUp)
            PowerUp2.setPosition(sprite.x, sprite.y)
            animation.runMovementAnimation(
            PowerUp2,
            animation.animationPresets(animation.bobbing),
            2000,
            true
            )
        }
    } else {
        ItemDrop = 0
    }
})
sprites.onOverlap(SpriteKind.Player, SpriteKind.Sign_1, function (sprite, otherSprite) {
    animation.runImageAnimation(
    PowerUpMarkerUp,
    [img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . 1 1 . . . . . . . . . . . 
. . . 1 1 . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`,img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . 1 1 . . 1 1 . . . . . . . 
. . . 1 1 . . 1 1 . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`,img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . 1 1 . . 1 1 . . 1 1 . . . 
. . . 1 1 . . 1 1 . . 1 1 . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`,img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . 1 1 . . 1 1 . . 1 1 . . . 
. . . 1 1 . . 1 1 . . 1 1 . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`,img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`],
    200,
    false
    )
    if (controller.up.isPressed()) {
        game.setDialogFrame(img`
. . b b b b b b b b b b b b b b b b b b b b . . 
. b d 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 d b . 
b d 1 d b b b b b b b b b b b b b b b b d 1 d b 
b 1 d b b b b b b b b b b b b b b b b b b d 1 b 
b 1 b d 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 d b 1 b 
b 1 b 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 b 1 b 
b 1 b 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 b 1 b 
b 1 b 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 b 1 b 
b 1 b 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 b 1 b 
b 1 b 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 b 1 b 
b 1 b 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 b 1 b 
b 1 b 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 b 1 b 
b 1 b 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 b 1 b 
b 1 b 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 b 1 b 
b 1 b 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 b 1 b 
b 1 b 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 b 1 b 
b 1 b 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 b 1 b 
b 1 b 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 b 1 b 
b 1 b 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 b 1 b 
b 1 b d 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 d b 1 b 
b d 1 b b b b b b b b b b b b b b b b b b 1 d b 
b b d 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 d b b 
. b b b b b b b b b b b b b b b b b b b b b b . 
. . b b b b b b b b b b b b b b b b b b b b . . 
`)
        game.showLongText("Jump with A. Shoot with B.", DialogLayout.Bottom)
        game.showLongText("Hold B to charge up.", DialogLayout.Bottom)
        game.showLongText("Wall jump by holding towards a wall and jumping.", DialogLayout.Bottom)
    }
})
function WallHazardHurt () {
    scene.cameraShake(2, 500)
    mySprite.setVelocity(SpriteFlipHoriz * -130, -30)
    info.changeLifeBy(-1)
    if (WeaponLevel >= 1) {
        animation.runImageAnimation(
        PowerUpMarkerUp,
        [img`
. . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . 
`,img`
. . . . . . . . . . . . 1 . . 
. . . . . . . . . . . . 1 . . 
1 . . 1 . 1 . 1 . . . . . . . 
1 . . 1 . 1 . 1 . . . . . . . 
1 1 . . 1 . . 1 1 . . . . . . 
. . . . . . . . . . . . . . . 
`,img`
. . . . . . . . . . . . 1 . . 
. . . . . . . . . . . . 1 . . 
1 . . 1 . 1 . 1 . . . . 1 . . 
1 . . 1 . 1 . 1 . . . . 1 . . 
1 1 . . 1 . . 1 1 . . . 1 . . 
. . . . . . . . . . . . . . . 
`,img`
. . . . . . . . . . . . 1 . . 
. . . . . . . . . . . . 1 . . 
1 . . 1 . 1 . 1 . . . . 1 . . 
1 . . 1 . 1 . 1 . . . 1 1 1 . 
1 1 . . 1 . . 1 1 . . . 1 . . 
. . . . . . . . . . . . . . . 
`,img`
. . . . . . . . . . . . 1 . . 
. . . . . . . . . . . . 1 . . 
1 . . 1 . 1 . 1 . . 1 . 1 . 1 
1 . . 1 . 1 . 1 . . . 1 1 1 . 
1 1 . . 1 . . 1 1 . . . 1 . . 
. . . . . . . . . . . . . . . 
`,img`
. . . . . . . . . . . . 1 . . 
. . . . . . . . . . . . 1 . . 
1 . . 1 . 1 . 1 . . 1 . 1 . 1 
1 . . 1 . 1 . 1 . . . 1 1 1 . 
1 1 . . 1 . . 1 1 . . . 1 . . 
. . . . . . . . . . . . . . . 
`,img`
. . . . . . . . . . . . . . . 
. . . . . . . . . . . . 1 . . 
1 . . 1 . 1 . 1 . . . . 1 . . 
1 . . 1 . 1 . 1 . . 1 . 1 . 1 
1 1 . . 1 . . 1 1 . . 1 1 1 . 
. . . . . . . . . . . . 1 . . 
`,img`
. . . . . . . . . . . . 1 . . 
. . . . . . . . . . . . 1 . . 
1 . . 1 . 1 . 1 . . 1 . 1 . 1 
1 . . 1 . 1 . 1 . . . 1 1 1 . 
1 1 . . 1 . . 1 1 . . . 1 . . 
. . . . . . . . . . . . . . . 
`,img`
. . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . 
`],
        100,
        false
        )
        WeaponLevel += -1
    }
    for (let index = 0; index < 4; index++) {
        mySprite.setFlag(SpriteFlag.Invisible, true)
        pause(50)
        mySprite.setFlag(SpriteFlag.Invisible, false)
        pause(50)
    }
}
sprites.onOverlap(SpriteKind.Player, SpriteKind.PowerUp, function (sprite, otherSprite) {
    otherSprite.destroy()
    if (WeaponLevel < 2) {
        WeaponLevel += 1
        animation.runImageAnimation(
        PowerUpMarkerUp,
        [img`
. . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . 
`,img`
. . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . 
1 . . 1 . 1 . 1 . . . . . . . 
1 . . 1 . 1 . 1 . . . . 1 . . 
1 1 . . 1 . . 1 1 . . . 1 . . 
. . . . . . . . . . . . . . . 
`,img`
. . . . . . . . . . . . 1 . . 
. . . . . . . . . . . . 1 . . 
1 . . 1 . 1 . 1 . . . . 1 . . 
1 . . 1 . 1 . 1 . . . . 1 . . 
1 1 . . 1 . . 1 1 . . . 1 . . 
. . . . . . . . . . . . . . . 
`,img`
. . . . . . . . . . . . 1 . . 
. . . . . . . . . . . 1 1 1 . 
1 . . 1 . 1 . 1 . . . . 1 . . 
1 . . 1 . 1 . 1 . . . . 1 . . 
1 1 . . 1 . . 1 1 . . . 1 . . 
. . . . . . . . . . . . . . . 
`,img`
. . . . . . . . . . . . 1 . . 
. . . . . . . . . . . 1 1 1 . 
1 . . 1 . 1 . 1 . . 1 . 1 . 1 
1 . . 1 . 1 . 1 . . . . 1 . . 
1 1 . . 1 . . 1 1 . . . 1 . . 
. . . . . . . . . . . . . . . 
`,img`
. . . . . . . . . . . . 1 . . 
. . . . . . . . . . . 1 1 1 . 
1 . . 1 . 1 . 1 . . 1 . 1 . 1 
1 . . 1 . 1 . 1 . . . . 1 . . 
1 1 . . 1 . . 1 1 . . . 1 . . 
. . . . . . . . . . . . . . . 
`,img`
. . . . . . . . . . . . . . . 
. . . . . . . . . . . . 1 . . 
1 . . 1 . 1 . 1 . . . 1 1 1 . 
1 . . 1 . 1 . 1 . . 1 . 1 . 1 
1 1 . . 1 . . 1 1 . . . 1 . . 
. . . . . . . . . . . . 1 . . 
`,img`
. . . . . . . . . . . . 1 . . 
. . . . . . . . . . . 1 1 1 . 
1 . . 1 . 1 . 1 . . 1 . 1 . 1 
1 . . 1 . 1 . 1 . . . . 1 . . 
1 1 . . 1 . . 1 1 . . . 1 . . 
. . . . . . . . . . . . . . . 
`,img`
. . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . 
`],
        100,
        false
        )
    }
    if (WeaponLevel >= 2) {
        animation.runImageAnimation(
        PowerUpMarkerUp,
        [img`
. . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . 
`,img`
. . . . . . . . . . . . . . . 
. 1 . . . 1 . . 1 . . 1 . 1 . 
. 1 1 . 1 1 . 1 . 1 . . 1 . . 
. 1 . 1 . 1 . 1 1 1 . 1 . 1 . 
. 1 . . . 1 . 1 . 1 . 1 . 1 . 
. . . . . . . . . . . . . . . 
`,img`
. 1 . . . 1 . . 1 . . 1 . 1 . 
. 1 1 . 1 1 . 1 . 1 . . 1 . . 
. 1 . 1 . 1 . 1 1 1 . 1 . 1 . 
. 1 . . . 1 . 1 . 1 . 1 . 1 . 
. . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . 
`,img`
. 1 . 1 . 1 . 1 1 1 . 1 . 1 . 
. 1 . . . 1 . 1 . 1 . 1 . 1 . 
. . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . 
`,img`
. . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . 
. 1 . . . 1 . . 1 . . 1 . 1 . 
. 1 1 . 1 1 . 1 . 1 . . 1 . . 
`,img`
. . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . 
. 1 . . . 1 . . 1 . . 1 . 1 . 
. 1 1 . 1 1 . 1 . 1 . . 1 . . 
. 1 . 1 . 1 . 1 1 1 . 1 . 1 . 
. 1 . . . 1 . 1 . 1 . 1 . 1 . 
`,img`
. . . . . . . . . . . . . . . 
. 1 . . . 1 . . 1 . . 1 . 1 . 
. 1 1 . 1 1 . 1 . 1 . . 1 . . 
. 1 . 1 . 1 . 1 1 1 . 1 . 1 . 
. 1 . . . 1 . 1 . 1 . 1 . 1 . 
. . . . . . . . . . . . . . . 
`,img`
. . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . 
`,img`
. . . . . . . . . . . . . . . 
. 1 . . . 1 . . 1 . . 1 . 1 . 
. 1 1 . 1 1 . 1 . 1 . . 1 . . 
. 1 . 1 . 1 . 1 1 1 . 1 . 1 . 
. 1 . . . 1 . 1 . 1 . 1 . 1 . 
. . . . . . . . . . . . . . . 
`,img`
. . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . 
`],
        100,
        false
        )
    }
})
sprites.onOverlap(SpriteKind.Player, SpriteKind.BossSpawnBox, function (sprite, otherSprite) {
    otherSprite.destroy(effects.disintegrate, 500)
    WallBuild()
    BossSpawn()
})
controller.B.onEvent(ControllerButtonEvent.Released, function () {
    ChargeUpSprite.destroy()
    if (WeaponLevel == 0) {
        if (chargeShot < 30) {
            chargelevel = 0
            if (ShootUp == 0) {
                if (SpriteFlipHoriz == -1) {
                    projectile = sprites.createProjectileFromSprite(img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . 4 . . . . . . . . . . 
. . . . 4 . . . . . . . . . . . 
. . . . . 4 . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, mySprite, -300, 0)
                }
                if (SpriteFlipHoriz == 1) {
                    projectile = sprites.createProjectileFromSprite(img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . 4 . . . . . . 
. . . . . . . . . . 4 . . . . . 
. . . . . . . . . 4 . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, mySprite, 300, 0)
                }
            } else if (ShootUp == 1) {
                projectile = sprites.createProjectileFromSprite(img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . 4 . . . . . . . . 
. . . . . . 4 . 4 . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, mySprite, 0, -300)
            } else {
                if (ShootUp == -1) {
                    projectile = sprites.createProjectileFromSprite(img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . 4 . 4 . . . . . . . 
. . . . . . . 4 . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, mySprite, 0, 300)
                }
            }
        } else if (chargeShot >= 30 && chargeShot < 120) {
            chargelevel = 1
            if (ShootUp == 0) {
                if (SpriteFlipHoriz == -1) {
                    projectile = sprites.createProjectileFromSprite(img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . 4 . . . . . . . . . 
. . . . . 4 . . . . . . . . . . 
. . . . 4 . . . . . . . . . . . 
. . . . . 4 . . . . . . . . . . 
. . . . . . 4 . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, mySprite, -300, 0)
                }
                if (SpriteFlipHoriz == 1) {
                    projectile = sprites.createProjectileFromSprite(img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . 4 . . . . . . . 
. . . . . . . . . 4 . . . . . . 
. . . . . . . . . . 4 . . . . . 
. . . . . . . . . 4 . . . . . . 
. . . . . . . . 4 . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, mySprite, 300, 0)
                }
            } else if (ShootUp == 1) {
                projectile = sprites.createProjectileFromSprite(img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . 4 . . . . . . . . 
. . . . . . 4 . 4 . . . . . . . 
. . . . . 4 . . . 4 . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, mySprite, 0, -300)
            } else {
                if (ShootUp == -1) {
                    projectile = sprites.createProjectileFromSprite(img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . 4 . . . 4 . . . . . . 
. . . . . . 4 . 4 . . . . . . . 
. . . . . . . 4 . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, mySprite, 0, 300)
                }
            }
        } else {
            if (chargeShot > 120) {
                chargelevel = 2
                if (ShootUp == 0) {
                    if (SpriteFlipHoriz == -1) {
                        projectile = sprites.createProjectileFromSprite(img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . 4 4 . . . . . . . . . 
. . . . 4 4 . . . . . . . . . . 
. . . 4 4 . . . . . . . . . . . 
. . . . 4 4 . . . . . . . . . . 
. . . . . 4 4 . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, mySprite, -300, 0)
                    }
                    if (SpriteFlipHoriz == 1) {
                        projectile = sprites.createProjectileFromSprite(img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . 4 4 . . . . . . . 
. . . . . . . . 4 4 . . . . . . 
. . . . . . . . . 4 4 . . . . . 
. . . . . . . . . . 4 4 . . . . 
. . . . . . . . . 4 4 . . . . . 
. . . . . . . . 4 4 . . . . . . 
. . . . . . . 4 4 . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, mySprite, 300, 0)
                    }
                } else if (ShootUp == 1) {
                    projectile = sprites.createProjectileFromSprite(img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . 4 . . . . . . . . 
. . . . . . 4 4 4 . . . . . . . 
. . . . . 4 4 . 4 4 . . . . . . 
. . . . 4 4 . . . 4 4 . . . . . 
. . . . 4 . . . . . 4 . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, mySprite, 0, -300)
                } else {
                    if (ShootUp == -1) {
                        projectile = sprites.createProjectileFromSprite(img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . 4 . . . . . 4 . . . . . 
. . . . 4 4 . . . 4 4 . . . . . 
. . . . . 4 4 . 4 4 . . . . . . 
. . . . . . 4 4 4 . . . . . . . 
. . . . . . . 4 . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, mySprite, 0, 300)
                        mySprite.vy = -200
                    }
                }
                projectile.startEffect(effects.fire)
            }
        }
    }
    if (WeaponLevel == 1) {
        if (chargeShot < 30) {
            chargelevel = 0
            if (ShootUp == 0) {
                if (SpriteFlipHoriz == -1) {
                    projectile = sprites.createProjectileFromSprite(img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . 4 . . . . . . . . 
. . . . . . 4 . . . . . . . . . 
. . . . . 4 . . . . . . . . . . 
. . . . 4 . . . . . . . . . . . 
. . . . . 4 . . . . . . . . . . 
. . . . . . 4 . . . . . . . . . 
. . . . . . . 4 . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, mySprite, -300, 0)
                }
                if (SpriteFlipHoriz == 1) {
                    projectile = sprites.createProjectileFromSprite(img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . 4 . . . . . . . . 
. . . . . . . . 4 . . . . . . . 
. . . . . . . . . 4 . . . . . . 
. . . . . . . . . . 4 . . . . . 
. . . . . . . . . 4 . . . . . . 
. . . . . . . . 4 . . . . . . . 
. . . . . . . 4 . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, mySprite, 300, 0)
                }
            } else if (ShootUp == 1) {
                projectile = sprites.createProjectileFromSprite(img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . 4 . . . . . . . . 
. . . . . . 4 . 4 . . . . . . . 
. . . . . 4 . . . 4 . . . . . . 
. . . . 4 . . . . . 4 . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, mySprite, 0, -300)
            } else {
                if (ShootUp == -1) {
                    projectile = sprites.createProjectileFromSprite(img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . 4 . . . . . 4 . . . . . 
. . . . . 4 . . . 4 . . . . . . 
. . . . . . 4 . 4 . . . . . . . 
. . . . . . . 4 . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, mySprite, 0, 300)
                }
            }
        } else if (chargeShot >= 30 && chargeShot < 120) {
            chargelevel = 1
            if (ShootUp == 0) {
                if (SpriteFlipHoriz == -1) {
                    projectile = sprites.createProjectileFromSprite(img`
. . . . . . . . . . . . . . . . 
. . . . . . . . 4 . . . . . . . 
. . . . . . . 4 9 . . . . . . . 
. . . . . . 4 9 . . . . . . . . 
. . . . . 4 9 . . . . . . . . . 
. . . . 4 9 . . . . . . . . . . 
. . . . . 4 9 . . . . . . . . . 
. . . . . . 4 9 . . . . . . . . 
. . . . . . . 4 9 . . . . . . . 
. . . . . . . . 4 . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, mySprite, -300, 0)
                }
                if (SpriteFlipHoriz == 1) {
                    projectile = sprites.createProjectileFromSprite(img`
. . . . . . . . . . . . . . . . 
. . . . . . 4 . . . . . . . . . 
. . . . . . 9 4 . . . . . . . . 
. . . . . . . 9 4 . . . . . . . 
. . . . . . . . 9 4 . . . . . . 
. . . . . . . . . 9 4 . . . . . 
. . . . . . . . 9 4 . . . . . . 
. . . . . . . 9 4 . . . . . . . 
. . . . . . 9 4 . . . . . . . . 
. . . . . . 4 . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, mySprite, 300, 0)
                }
            } else if (ShootUp == 1) {
                projectile = sprites.createProjectileFromSprite(img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . 4 . . . . . . . . 
. . . . . . 4 9 4 . . . . . . . 
. . . . . 4 9 . 9 4 . . . . . . 
. . . . 4 9 . . . 9 4 . . . . . 
. . . 4 9 . . . . . 9 4 . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, mySprite, 0, -300)
            } else {
                if (ShootUp == -1) {
                    projectile = sprites.createProjectileFromSprite(img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . 4 9 . . . . . 9 4 . . . . 
. . . . 4 9 . . . 9 4 . . . . . 
. . . . . 4 9 . 9 4 . . . . . . 
. . . . . . 4 9 4 . . . . . . . 
. . . . . . . 4 . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, mySprite, 0, 300)
                }
            }
        } else {
            if (chargeShot > 120) {
                chargelevel = 2
                if (ShootUp == 0) {
                    if (SpriteFlipHoriz == -1) {
                        projectile = sprites.createProjectileFromSprite(img`
. . . . . . . . 4 . . . . . . . 
. . . . . . . 4 9 . . . . . . . 
. . . . . . 4 9 . . . . . . . . 
. . . . . 4 9 4 . . . . . . . . 
. . . . 4 9 4 . . . . . . . . . 
. . . 4 9 1 9 . . . . . . . . . 
. . . . 4 9 4 . . . . . . . . . 
. . . . . 4 9 4 . . . . . . . . 
. . . . . . 4 9 . . . . . . . . 
. . . . . . . 4 9 . . . . . . . 
. . . . . . . . 4 . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, mySprite, -300, 0)
                    }
                    if (SpriteFlipHoriz == 1) {
                        projectile = sprites.createProjectileFromSprite(img`
. . . . . . 4 . . . . . . . . . 
. . . . . . 9 4 . . . . . . . . 
. . . . . . . 9 4 . . . . . . . 
. . . . . . . 4 9 4 . . . . . . 
. . . . . . . . 4 9 4 . . . . . 
. . . . . . . . 9 1 9 4 . . . . 
. . . . . . . . 4 9 4 . . . . . 
. . . . . . . 4 9 4 . . . . . . 
. . . . . . . 9 4 . . . . . . . 
. . . . . . 9 4 . . . . . . . . 
. . . . . . 4 . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, mySprite, 300, 0)
                    }
                } else if (ShootUp == 1) {
                    projectile = sprites.createProjectileFromSprite(img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . 4 . . . . . . . . 
. . . . . . 4 9 4 . . . . . . . 
. . . . . 4 9 1 9 4 . . . . . . 
. . . . 4 9 4 9 4 9 4 . . . . . 
. . . 4 9 4 . . . 4 9 4 . . . . 
. . 4 9 . . . . . . . 9 4 . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, mySprite, 0, -300)
                } else {
                    if (ShootUp == -1) {
                        projectile = sprites.createProjectileFromSprite(img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . 4 9 . . . . . . . 9 4 . . . 
. . . 4 9 4 . . . 4 9 4 . . . . 
. . . . 4 9 4 9 4 9 4 . . . . . 
. . . . . 4 9 1 9 4 . . . . . . 
. . . . . . 4 9 4 . . . . . . . 
. . . . . . . 4 . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, mySprite, 0, 300)
                        mySprite.vy = -200
                    }
                }
                projectile.startEffect(effects.fire)
            }
        }
    }
    if (WeaponLevel == 2) {
        if (chargeShot < 30) {
            chargelevel = 0
            if (ShootUp == 0) {
                if (SpriteFlipHoriz == -1) {
                    projectile = sprites.createProjectileFromSprite(img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . 1 1 1 1 1 1 1 1 1 . . . 
. . . . 1 1 1 1 1 1 1 1 1 . . . 
. . . . 1 1 1 1 1 1 1 1 1 . . . 
. . . . 1 1 1 1 1 1 1 1 1 . . . 
. . . . 1 1 1 1 1 1 1 1 1 . . . 
. . . . 1 1 1 1 1 1 1 1 1 . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, mySprite, -300, 0)
                }
                if (SpriteFlipHoriz == 1) {
                    projectile = sprites.createProjectileFromSprite(img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . 1 1 1 1 1 1 1 1 1 . . . 
. . . . 1 1 1 1 1 1 1 1 1 . . . 
. . . . 1 1 1 1 1 1 1 1 1 . . . 
. . . . 1 1 1 1 1 1 1 1 1 . . . 
. . . . 1 1 1 1 1 1 1 1 1 . . . 
. . . . 1 1 1 1 1 1 1 1 1 . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, mySprite, 300, 0)
                }
            } else if (ShootUp == 1) {
                projectile = sprites.createProjectileFromSprite(img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . 1 1 1 1 1 1 . . . . . 
. . . . . 1 1 1 1 1 1 . . . . . 
. . . . . 1 1 1 1 1 1 . . . . . 
. . . . . 1 1 1 1 1 1 . . . . . 
. . . . . 1 1 1 1 1 1 . . . . . 
. . . . . 1 1 1 1 1 1 . . . . . 
. . . . . 1 1 1 1 1 1 . . . . . 
. . . . . 1 1 1 1 1 1 . . . . . 
. . . . . 1 1 1 1 1 1 . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, mySprite, 0, -300)
            } else {
                if (ShootUp == -1) {
                    projectile = sprites.createProjectileFromSprite(img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . 1 1 1 1 1 1 . . . . . 
. . . . . 1 1 1 1 1 1 . . . . . 
. . . . . 1 1 1 1 1 1 . . . . . 
. . . . . 1 1 1 1 1 1 . . . . . 
. . . . . 1 1 1 1 1 1 . . . . . 
. . . . . 1 1 1 1 1 1 . . . . . 
. . . . . 1 1 1 1 1 1 . . . . . 
. . . . . 1 1 1 1 1 1 . . . . . 
. . . . . 1 1 1 1 1 1 . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, mySprite, 0, 300)
                }
            }
        } else if (chargeShot >= 30 && chargeShot < 120) {
            chargelevel = 1
            if (ShootUp == 0) {
                if (SpriteFlipHoriz == -1) {
                    projectile = sprites.createProjectileFromSprite(img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . 1 1 1 1 1 1 1 1 1 1 1 1 1 . 
. . 1 1 1 1 1 1 1 1 1 1 1 1 1 . 
. . 1 1 1 1 1 1 1 1 1 1 1 1 1 . 
. . 1 1 1 1 1 1 1 1 1 1 1 1 1 . 
. . 1 1 1 1 1 1 1 1 1 1 1 1 1 . 
. . 1 1 1 1 1 1 1 1 1 1 1 1 1 . 
. . 1 1 1 1 1 1 1 1 1 1 1 1 1 . 
. . 1 1 1 1 1 1 1 1 1 1 1 1 1 . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, mySprite, -300, 0)
                }
                if (SpriteFlipHoriz == 1) {
                    projectile = sprites.createProjectileFromSprite(img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . 1 1 1 1 1 1 1 1 1 1 1 1 1 . 
. . 1 1 1 1 1 1 1 1 1 1 1 1 1 . 
. . 1 1 1 1 1 1 1 1 1 1 1 1 1 . 
. . 1 1 1 1 1 1 1 1 1 1 1 1 1 . 
. . 1 1 1 1 1 1 1 1 1 1 1 1 1 . 
. . 1 1 1 1 1 1 1 1 1 1 1 1 1 . 
. . 1 1 1 1 1 1 1 1 1 1 1 1 1 . 
. . 1 1 1 1 1 1 1 1 1 1 1 1 1 . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, mySprite, 300, 0)
                }
            } else if (ShootUp == 1) {
                projectile = sprites.createProjectileFromSprite(img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . 1 1 1 1 1 1 1 1 . . . . . 
. . . 1 1 1 1 1 1 1 1 . . . . . 
. . . 1 1 1 1 1 1 1 1 . . . . . 
. . . 1 1 1 1 1 1 1 1 . . . . . 
. . . 1 1 1 1 1 1 1 1 . . . . . 
. . . 1 1 1 1 1 1 1 1 . . . . . 
. . . 1 1 1 1 1 1 1 1 . . . . . 
. . . 1 1 1 1 1 1 1 1 . . . . . 
. . . 1 1 1 1 1 1 1 1 . . . . . 
. . . 1 1 1 1 1 1 1 1 . . . . . 
. . . 1 1 1 1 1 1 1 1 . . . . . 
. . . 1 1 1 1 1 1 1 1 . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, mySprite, 0, -300)
            } else {
                if (ShootUp == -1) {
                    projectile = sprites.createProjectileFromSprite(img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . 1 1 1 1 1 1 1 1 . . . . . 
. . . 1 1 1 1 1 1 1 1 . . . . . 
. . . 1 1 1 1 1 1 1 1 . . . . . 
. . . 1 1 1 1 1 1 1 1 . . . . . 
. . . 1 1 1 1 1 1 1 1 . . . . . 
. . . 1 1 1 1 1 1 1 1 . . . . . 
. . . 1 1 1 1 1 1 1 1 . . . . . 
. . . 1 1 1 1 1 1 1 1 . . . . . 
. . . 1 1 1 1 1 1 1 1 . . . . . 
. . . 1 1 1 1 1 1 1 1 . . . . . 
. . . 1 1 1 1 1 1 1 1 . . . . . 
. . . 1 1 1 1 1 1 1 1 . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, mySprite, 0, 300)
                }
            }
        } else {
            if (chargeShot > 120) {
                chargelevel = 2
                if (ShootUp == 0) {
                    if (SpriteFlipHoriz == -1) {
                        projectile = sprites.createProjectileFromSprite(img`
. . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . 
1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
. . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . 
`, mySprite, -300, 0)
                    }
                    if (SpriteFlipHoriz == 1) {
                        projectile = sprites.createProjectileFromSprite(img`
. . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . 
1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
. . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . 
`, mySprite, 300, 0)
                    }
                } else if (ShootUp == 1) {
                    projectile = sprites.createProjectileFromSprite(img`
. . . 1 1 1 1 1 1 1 1 1 1 . . . 
. . . 1 1 1 1 1 1 1 1 1 1 . . . 
. . . 1 1 1 1 1 1 1 1 1 1 . . . 
. . . 1 1 1 1 1 1 1 1 1 1 . . . 
. . . 1 1 1 1 1 1 1 1 1 1 . . . 
. . . 1 1 1 1 1 1 1 1 1 1 . . . 
. . . 1 1 1 1 1 1 1 1 1 1 . . . 
. . . 1 1 1 1 1 1 1 1 1 1 . . . 
. . . 1 1 1 1 1 1 1 1 1 1 . . . 
. . . 1 1 1 1 1 1 1 1 1 1 . . . 
. . . 1 1 1 1 1 1 1 1 1 1 . . . 
. . . 1 1 1 1 1 1 1 1 1 1 . . . 
. . . 1 1 1 1 1 1 1 1 1 1 . . . 
. . . 1 1 1 1 1 1 1 1 1 1 . . . 
. . . 1 1 1 1 1 1 1 1 1 1 . . . 
. . . 1 1 1 1 1 1 1 1 1 1 . . . 
. . . 1 1 1 1 1 1 1 1 1 1 . . . 
. . . 1 1 1 1 1 1 1 1 1 1 . . . 
. . . 1 1 1 1 1 1 1 1 1 1 . . . 
. . . 1 1 1 1 1 1 1 1 1 1 . . . 
`, mySprite, 0, -300)
                } else {
                    if (ShootUp == -1) {
                        projectile = sprites.createProjectileFromSprite(img`
. . . 1 1 1 1 1 1 1 1 1 1 . . . 
. . . 1 1 1 1 1 1 1 1 1 1 . . . 
. . . 1 1 1 1 1 1 1 1 1 1 . . . 
. . . 1 1 1 1 1 1 1 1 1 1 . . . 
. . . 1 1 1 1 1 1 1 1 1 1 . . . 
. . . 1 1 1 1 1 1 1 1 1 1 . . . 
. . . 1 1 1 1 1 1 1 1 1 1 . . . 
. . . 1 1 1 1 1 1 1 1 1 1 . . . 
. . . 1 1 1 1 1 1 1 1 1 1 . . . 
. . . 1 1 1 1 1 1 1 1 1 1 . . . 
. . . 1 1 1 1 1 1 1 1 1 1 . . . 
. . . 1 1 1 1 1 1 1 1 1 1 . . . 
. . . 1 1 1 1 1 1 1 1 1 1 . . . 
. . . 1 1 1 1 1 1 1 1 1 1 . . . 
. . . 1 1 1 1 1 1 1 1 1 1 . . . 
. . . 1 1 1 1 1 1 1 1 1 1 . . . 
. . . 1 1 1 1 1 1 1 1 1 1 . . . 
. . . 1 1 1 1 1 1 1 1 1 1 . . . 
. . . 1 1 1 1 1 1 1 1 1 1 . . . 
. . . 1 1 1 1 1 1 1 1 1 1 . . . 
`, mySprite, 0, 300)
                        mySprite.vy = -200
                    }
                }
                projectile.startEffect(effects.fire)
            }
        }
    }
})
sprites.onOverlap(SpriteKind.Projectile, SpriteKind.Box, function (sprite, otherSprite) {
    sprite.destroy()
    otherSprite.destroy(effects.disintegrate, 100)
})
sprites.onCreated(SpriteKind.ArrowEndAnim, function (sprite) {
    sprites.setDataNumber(sprite, "WallHit", game.runtime() + 500)
})
sprites.onOverlap(SpriteKind.Player, SpriteKind.Slime, function (sprite, otherSprite) {
    Hurt()
    pause(500)
})
sprites.onOverlap(SpriteKind.Player, SpriteKind.BatAggro2, function (sprite, otherSprite) {
    for (let value of sprites.allOfKind(SpriteKind.Bat2)) {
        sprites.setDataBoolean(value, "Aggro", true)
        value.follow(sprite, 30)
    }
})
controller.A.onEvent(ControllerButtonEvent.Pressed, function () {
    if (mySprite.vy == 0) {
        mySprite.vy = -130
        JumpStuff = sprites.create(img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . 1 . . . . . . . 
. . . . . . . . 1 1 . . . . . . 
. . . . . . 1 1 1 1 1 . . . . . 
. . . . . . 1 1 . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, SpriteKind.JumpPartical)
        JumpStuff.setPosition(mySprite.x, mySprite.y)
        animation.runImageAnimation(
        JumpStuff,
        [img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. 1 . . . 1 . . . . . . . . . . 
. . . . 1 . 1 . . . . . . . . . 
. . . . . 1 . . . . . 1 . . . . 
. . . . . . . . 1 . 1 . 1 . . . 
. . . 1 . . . . . . . 1 . . 1 . 
. . . . . . . 1 . . . . . . . . 
. . . . . . 1 . . . . . . 1 . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`,img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . 1 . . . 
. . . . . . . 1 . . . 1 . 1 . . 
. . . 1 . . . . . . . . 1 . . . 
. . 1 . 1 . . . . . . . . . . . 
. . . 1 . . . . 1 . . . . . . . 
. . . . . . . 1 . 1 . . . . . . 
. . . . . . . . 1 . . . . . . . 
. . . . . . . . . . . . . 1 . . 
. . . . . 1 . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`],
        100,
        false
        )
        pause(200)
        JumpStuff.destroy()
    }
})
sprites.onOverlap(SpriteKind.Player, SpriteKind.Bat, function (sprite, otherSprite) {
    Hurt()
    pause(500)
})
sprites.onOverlap(SpriteKind.Player, SpriteKind.LaunchPad, function (sprite, otherSprite) {
    animation.runImageAnimation(
    otherSprite,
    [img`
1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 
. . 6 . . 9 9 3 3 9 9 . . 6 . . 
6 6 . . 6 . . . . . . 6 . . 6 6 
. . 6 6 . . . . . . . . 6 6 . . 
. 6 . . . . . . . . . . . . 6 . 
6 . . . . . . . . . . . . . . 6 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`,img`
1 . . . . . . . . . . . . . . 1 
. 1 . . . . . . . . . . . . 1 . 
6 . 1 . . . . . . . . . . 1 . 6 
. . . 1 1 . . . . . . 1 1 . . . 
. . 6 . . 1 1 1 1 1 1 . . 6 . . 
6 6 . . . 9 9 3 3 9 9 . . . 6 6 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`,img`
1 . . . . . . . . . . . . . . 1 
. 1 1 . . . . . . . . . . 1 1 . 
6 . . 1 1 . . . . . . 1 1 . . 6 
. . 6 . . 1 1 1 1 1 1 . . 6 . . 
. 6 . . . 9 9 3 3 9 9 . . . 6 . 
6 . . . . . . . . . . . . . . 6 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`,img`
1 1 1 . . . . . . . . . . 1 1 1 
. . . 1 1 . . . . . . 1 1 . . . 
6 . 6 . . 1 1 1 1 1 1 . . 6 . 6 
. 6 . . . 9 9 3 3 9 9 . . . 6 . 
. . . . . . . . . . . . . . . . 
6 . . . . . . . . . . . . . . 6 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`],
    100,
    false
    )
    mySprite.vy = -220
})
function WallBuild () {
    if (true) {
        EndWall = sprites.create(img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . 3 . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, SpriteKind.BuildWall)
        EndWall.setImage(img`
c c c c c c c c c c c c c c c c 
6 6 6 6 c c 6 6 c c 6 6 6 6 6 c 
6 6 6 6 c 6 6 6 c c 6 6 6 6 6 c 
c c c c c 6 6 6 c c 6 6 6 6 6 c 
c c c c c c c c c c c c c c c c 
c c c 6 6 6 6 c c 6 6 6 6 6 c c 
c c c 6 6 6 6 c c 6 6 6 6 6 c c 
c c c c c c c c c c c c c c c c 
6 6 6 6 6 c c 6 6 6 6 6 6 c c 6 
6 6 6 6 6 c c 6 6 6 6 6 6 c c 6 
6 6 6 6 6 c c 6 6 6 6 6 6 c c c 
c c c c c c c c c c c c c c c c 
c c c 6 6 6 6 c c c c c 6 6 6 6 
6 c c 6 6 6 6 c c 6 6 c 6 6 6 6 
6 c c 6 6 6 6 c c 6 6 c 6 6 6 6 
c c c c c c c c c c c c c c c c 
`)
        tiles.placeOnTile(EndWall, tiles.getTileLocation(1, 13))
        EndWall = sprites.create(img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . 3 . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, SpriteKind.BuildWall)
        EndWall.setImage(img`
c c c c c c c c c c c c c c c c 
6 6 6 6 c c 6 6 c c 6 6 6 6 6 c 
6 6 6 6 c 6 6 6 c c 6 6 6 6 6 c 
c c c c c 6 6 6 c c 6 6 6 6 6 c 
c c c c c c c c c c c c c c c c 
c c c 6 6 6 6 c c 6 6 6 6 6 c c 
c c c 6 6 6 6 c c 6 6 6 6 6 c c 
c c c c c c c c c c c c c c c c 
6 6 6 6 6 c c 6 6 6 6 6 6 c c 6 
6 6 6 6 6 c c 6 6 6 6 6 6 c c 6 
6 6 6 6 6 c c 6 6 6 6 6 6 c c c 
c c c c c c c c c c c c c c c c 
c c c 6 6 6 6 c c c c c 6 6 6 6 
6 c c 6 6 6 6 c c 6 6 c 6 6 6 6 
6 c c 6 6 6 6 c c 6 6 c 6 6 6 6 
c c c c c c c c c c c c c c c c 
`)
        tiles.placeOnTile(EndWall, tiles.getTileLocation(2, 13))
        EndWall = sprites.create(img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . 3 . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, SpriteKind.BuildWall)
        EndWall.setImage(img`
c c c c c c c c c c c c c c c c 
6 6 6 6 c c 6 6 c c 6 6 6 6 6 c 
6 6 6 6 c 6 6 6 c c 6 6 6 6 6 c 
c c c c c 6 6 6 c c 6 6 6 6 6 c 
c c c c c c c c c c c c c c c c 
c c c 6 6 6 6 c c 6 6 6 6 6 c c 
c c c 6 6 6 6 c c 6 6 6 6 6 c c 
c c c c c c c c c c c c c c c c 
6 6 6 6 6 c c 6 6 6 6 6 6 c c 6 
6 6 6 6 6 c c 6 6 6 6 6 6 c c 6 
6 6 6 6 6 c c 6 6 6 6 6 6 c c c 
c c c c c c c c c c c c c c c c 
c c c 6 6 6 6 c c c c c 6 6 6 6 
6 c c 6 6 6 6 c c 6 6 c 6 6 6 6 
6 c c 6 6 6 6 c c 6 6 c 6 6 6 6 
c c c c c c c c c c c c c c c c 
`)
        tiles.placeOnTile(EndWall, tiles.getTileLocation(3, 13))
        tiles.setWallAt(tiles.getTileLocation(1, 13), true)
        tiles.setWallAt(tiles.getTileLocation(2, 13), true)
        tiles.setWallAt(tiles.getTileLocation(3, 13), true)
    }
}
sprites.onOverlap(SpriteKind.Player, SpriteKind.Spike, function (sprite, otherSprite) {
    Hurt()
    pause(500)
})
sprites.onOverlap(SpriteKind.Player, SpriteKind.BatAggro3, function (sprite, otherSprite) {
    for (let value of sprites.allOfKind(SpriteKind.Bat3)) {
        sprites.setDataBoolean(value, "Aggro", true)
        value.follow(sprite, 120)
    }
})
sprites.onOverlap(SpriteKind.Player, SpriteKind.Sign_2, function (sprite, otherSprite) {
    animation.runImageAnimation(
    PowerUpMarkerUp,
    [img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . 1 1 . . . . . . . . . . . 
. . . 1 1 . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`,img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . 1 1 . . 1 1 . . . . . . . 
. . . 1 1 . . 1 1 . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`,img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . 1 1 . . 1 1 . . 1 1 . . . 
. . . 1 1 . . 1 1 . . 1 1 . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`,img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . 1 1 . . 1 1 . . 1 1 . . . 
. . . 1 1 . . 1 1 . . 1 1 . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`,img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`],
    200,
    false
    )
    if (controller.up.isPressed()) {
        game.setDialogFrame(img`
. . b b b b b b b b b b b b b b b b b b b b . . 
. b d 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 d b . 
b d 1 d b b b b b b b b b b b b b b b b d 1 d b 
b 1 d b b b b b b b b b b b b b b b b b b d 1 b 
b 1 b d 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 d b 1 b 
b 1 b 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 b 1 b 
b 1 b 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 b 1 b 
b 1 b 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 b 1 b 
b 1 b 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 b 1 b 
b 1 b 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 b 1 b 
b 1 b 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 b 1 b 
b 1 b 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 b 1 b 
b 1 b 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 b 1 b 
b 1 b 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 b 1 b 
b 1 b 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 b 1 b 
b 1 b 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 b 1 b 
b 1 b 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 b 1 b 
b 1 b 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 b 1 b 
b 1 b 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 b 1 b 
b 1 b d 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 d b 1 b 
b d 1 b b b b b b b b b b b b b b b b b b 1 d b 
b b d 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 d b b 
. b b b b b b b b b b b b b b b b b b b b b b . 
. . b b b b b b b b b b b b b b b b b b b b . . 
`)
        game.showLongText("Charge your shot to level 3, jump and shoot down to boost.", DialogLayout.Bottom)
    }
})
sprites.onDestroyed(SpriteKind.BossDeathPartical, function (sprite) {
    game.over(true, effects.starField)
})
sprites.onOverlap(SpriteKind.Player, SpriteKind.Box, function (sprite, otherSprite) {
    if (sprite.vx < 0) {
        sprite.x = otherSprite.x + 12
    } else {
        sprite.x = otherSprite.x - 12
    }
})
sprites.onOverlap(SpriteKind.Projectile, SpriteKind.Slime, function (sprite, otherSprite) {
    sprite.destroy()
    for (let index = 0; index < 4; index++) {
        otherSprite.setFlag(SpriteFlag.Invisible, true)
        pause(15)
        otherSprite.setFlag(SpriteFlag.Invisible, false)
        pause(15)
    }
    sprites.changeDataNumberBy(otherSprite, "Hits", sprites.readDataNumber(sprite, "Damage"))
    DmgNoSprite = sprites.create(img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, SpriteKind.DamageNumber)
    DmgNoSprite.setImage(DmgNumberList[DamageAmount])
    DmgNoSprite.setPosition(otherSprite.x, otherSprite.top)
    animation.runMovementAnimation(
    DmgNoSprite,
    animation.animationPresets(animation.bobbing),
    500,
    false
    )
    clock = game.runtime()
    if (sprites.readDataNumber(otherSprite, "Hits") <= 0) {
        SlimeDeathAnim = sprites.create(img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, SpriteKind.EnemyDeathPartical)
        SlimeDeathAnim.setPosition(otherSprite.x, otherSprite.y)
        otherSprite.destroy()
        animation.runImageAnimation(
        SlimeDeathAnim,
        [img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . 7 7 . . . . . . . 
. . . . . . 7 7 7 7 . . . . . . 
. . . . . 7 7 7 7 7 7 . . . . . 
. . . . 7 7 1 7 7 1 7 7 . . . . 
. . . 7 7 7 1 7 7 1 7 7 7 . . . 
. . 7 7 7 7 6 7 7 6 7 7 7 7 . . 
. . 7 7 7 7 7 7 7 7 7 7 7 7 . . 
. 7 7 7 7 7 7 7 7 7 7 7 7 7 7 . 
. . 7 7 7 7 7 7 7 7 7 7 7 7 . . 
. . . 7 7 7 7 7 7 7 7 7 7 . . . 
. . . . 7 7 7 7 7 7 7 7 . . . . 
`,img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . 7 7 . . . . . . . 
. . . . . . 7 7 7 7 . . . . . . 
. . . . . 7 7 7 7 7 7 . . . . . 
. . . . 7 7 7 7 7 7 7 7 . . . . 
. . . 7 7 7 1 7 7 1 7 7 7 . . . 
. . . 7 7 7 6 7 7 6 7 7 7 . . . 
. . 7 7 7 7 7 7 7 7 7 7 7 7 . . 
. . . . 7 7 7 7 7 7 7 7 . . . . 
`,img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . 7 . . . . . . . . . . 
. . . . 7 7 . . . . . . . . . . 
. . . 7 7 7 7 . . . . 7 . . . . 
. . 7 7 7 7 7 . . . 7 7 7 . . . 
. . . 7 7 7 7 . . . 7 7 7 7 . . 
. . . . . . . . . . 7 7 7 7 7 . 
. . . . . . . . . . 7 7 7 . . . 
. . . 7 7 7 . . 7 7 . . . . . . 
. . . 7 7 7 7 . 7 7 7 7 7 . . . 
. . 7 7 7 7 7 . . 7 7 7 7 7 . . 
. . . . 7 7 7 . . 7 7 7 . . . . 
`,img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . 7 . . . . . . . . . . . 
. . . 7 7 7 . . . . . . 7 . . . 
. . 7 7 7 . . . . . . . 7 7 . . 
. . . . 7 . . . . . . 7 7 . . . 
. . . . . . . . . . . . . 7 7 . 
. . . . . . . . . . . . . 7 . . 
. . . 7 . . . . 7 . . . . . . . 
. . . 7 7 . . . . . . 7 7 . . . 
. . 7 7 7 7 . . . . . 7 7 7 . . 
. . . . 7 7 7 . . . 7 7 . . . . 
. . . . . . . . . . . . . . . . 
`,img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . 7 . . . . . . . . . . . . . 
. 7 7 . . . . . . . . . . 7 . . 
7 7 . . . . . . . . . . . . 7 . 
. . . . . . . . . . . . 7 7 . . 
. . . . . . . . . . . . . . . 7 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . 7 . . . . . . . . . 7 . . 
. . . . 7 . . . . . . . . 7 7 . 
. . . 7 7 7 . . . . . 7 7 . . . 
`,img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . 7 . . . . . . . . . . 7 . . 
. 7 7 7 7 7 . . . . 7 7 . . 7 . 
`,img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`],
        100,
        false
        )
    }
})
sprites.onOverlap(SpriteKind.Player, SpriteKind.SkeletonArrow, function (sprite, otherSprite) {
    Hurt()
})
sprites.onOverlap(SpriteKind.Projectile, SpriteKind.Torch, function (sprite, otherSprite) {
    sprite.destroy()
    otherSprite.destroy(effects.disintegrate, 100)
    if (Math.percentChance(60)) {
        ItemDrop = Math.randomRange(1, 2)
        if (ItemDrop == 1) {
            Heart2 = sprites.create(img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . c 2 . . . 2 2 . . . . 
. . . . c 2 2 2 . 2 2 4 2 . . . 
. . . . c 2 2 2 2 2 4 2 2 . . . 
. . . . c 2 2 2 2 2 2 2 2 . . . 
. . . . . c 2 2 2 2 2 2 . . . . 
. . . . . . c 2 2 2 2 . . . . . 
. . . . . . . c 2 2 . . . . . . 
. . . . . . . . c . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, SpriteKind.Heart)
            Heart2.setPosition(otherSprite.x, otherSprite.y)
            animation.runMovementAnimation(
            Heart2,
            animation.animationPresets(animation.bobbing),
            2000,
            true
            )
        } else if (ItemDrop == 2) {
            PowerUp2 = sprites.create(img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . a a . . . . . . . . 
. . . . . a 1 1 a . . . . . . . 
. . . . a 1 1 1 1 a . . . . . . 
. . . a 1 1 1 1 1 1 a . . . . . 
. . a 1 1 1 1 1 1 1 1 a . . . . 
. . . a a a 1 1 a a a . . . . . 
. . . . . a 1 1 a . . . . . . . 
. . . . . a 1 1 a . . . . . . . 
. . . . . a 1 1 a . . . . . . . 
. . . . . a 1 1 a . . . . . . . 
. . . . . . a a . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, SpriteKind.PowerUp)
            PowerUp2.setPosition(otherSprite.x, otherSprite.y)
            animation.runMovementAnimation(
            PowerUp2,
            animation.animationPresets(animation.bobbing),
            2000,
            true
            )
        }
    } else {
        ItemDrop = 0
    }
})
sprites.onOverlap(SpriteKind.Player, SpriteKind.BatAggro, function (sprite, otherSprite) {
    for (let value of sprites.allOfKind(SpriteKind.Bat)) {
        sprites.setDataBoolean(value, "Aggro", true)
        value.follow(sprite, 120)
    }
})
scene.onOverlapTile(SpriteKind.Player, sprites.dungeon.hazardWater, function (sprite, location) {
    if (checkpoint == 0) {
        tiles.placeOnTile(mySprite, tiles.getTileLocation(1, 68))
    } else {
        tiles.placeOnTile(mySprite, tiles.getTileLocation(14, 25))
    }
})
sprites.onOverlap(SpriteKind.Projectile, SpriteKind.BossFireball, function (sprite, otherSprite) {
    sprite.destroy()
    otherSprite.destroy(effects.fire, 200)
})
scene.onHitWall(SpriteKind.SkeletonArrow, function (sprite) {
    SkeletonArrowBounceFromWall = sprites.create(img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, SpriteKind.ArrowEndAnim)
    SkeletonArrowBounceFromWall.setPosition(sprite.x, sprite.y)
    animation.runImageAnimation(
    SkeletonArrowBounceFromWall,
    [img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . 1 . . 4 . . . . . . 
. . . . . 1 e e e . . . . . . . 
. . . . . . 1 . . 4 . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`,img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . 1 1 . . . . . . . . . 
. . . . . 1 e . . . . . . . . . 
. . . . . . . e 4 . . . . . . . 
. . . . . . . 4 . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`,img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . 1 1 . . . . . . . . 
. . . . . . 1 e . . . . . . . . 
. . . . . . . . e 4 . . . . . . 
. . . . . . . . 4 . . . . . . . 
. . . . . . . . . . . . . . . . 
`,img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . 1 . . 4 . . . . . . 
. . . . . 1 e e e . . . . . . . 
`],
    100,
    false
    )
})
sprites.onOverlap(SpriteKind.Player, SpriteKind.LevelEnd, function (sprite, otherSprite) {
    PlayerUsingDoor = 1
    mySprite.destroy()
    animation.runImageAnimation(
    Exit,
    [img`
f c b f f c b f f c b f f c b f 
f c b f f c b f f c b f f c b f 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`,img`
f c b f f c b f f c b f f c b f 
f c b f f c b f f c b f f c b f 
f c b f f c b f f c b f f c b f 
f c b f f c b f f c b f f c b f 
f c b f f c b f f c b f f c b f 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`,img`
f c b f f c b f f c b f f c b f 
f c b f f c b f f c b f f c b f 
f c b f f c b f f c b f f c b f 
f c b f f c b f f c b f f c b f 
f c b f f c b f f c b f f c b f 
f c b f f c b f f c b f f c b f 
f c b f f c b f f c b f f c b f 
f c b f f c b f f c b f f c b f 
f c b f f c b f f c b f f c b f 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`,img`
f c b f f c b f f c b f f c b f 
f c b f f c b f f c b f f c b f 
f c b f f c b f f c b f f c b f 
f c b f f c b f f c b f f c b f 
f c b f f c b f f c b f f c b f 
f c b f f c b f f c b f f c b f 
f c b f f c b f f c b f f c b f 
f c b f f c b f f c b f f c b f 
f c b f f c b f f c b f f c b f 
f c b f f c b f f c b f f c b f 
f c b f f c b f f c b f f c b f 
f c b f f c b f f c b f f c b f 
f c b f f c b f f c b f f c b f 
f c b f f c b f f c b f f c b f 
f c b f f c b f f c b f f c b f 
f c b f f c b f f c b f f c b f 
`],
    100,
    false
    )
    pause(1000)
    color.FadeToBlack.startScreenEffect()
    color.pauseUntilFadeDone()
    Level += 1
    LevelClear()
})
sprites.onOverlap(SpriteKind.Projectile, SpriteKind.Bat, function (sprite, otherSprite) {
    sprite.destroy()
    for (let index = 0; index < 4; index++) {
        otherSprite.setFlag(SpriteFlag.Invisible, true)
        pause(15)
        otherSprite.setFlag(SpriteFlag.Invisible, false)
        pause(15)
    }
    sprites.changeDataNumberBy(otherSprite, "Hits", sprites.readDataNumber(sprite, "Damage"))
    DmgNoSprite = sprites.create(img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, SpriteKind.DamageNumber)
    DmgNoSprite.setImage(DmgNumberList[DamageAmount])
    DmgNoSprite.setPosition(otherSprite.x, otherSprite.top - 6)
    animation.runMovementAnimation(
    DmgNoSprite,
    animation.animationPresets(animation.bobbing),
    500,
    false
    )
    clock = game.runtime()
    if (sprites.readDataNumber(otherSprite, "Hits") <= 0) {
        otherSprite.destroy(effects.disintegrate, 500)
    }
})
function BossAttack1 () {
    BossClock = game.runtime()
    Boss.setFlag(SpriteFlag.Invisible, true)
    Boss.setPosition(mySprite.x, 155)
    for (let index = 0; index < 5; index++) {
        Boss.setFlag(SpriteFlag.Invisible, true)
        pause(100)
        Boss.setFlag(SpriteFlag.Invisible, false)
        pause(100)
    }
    Boss.setImage(img`
. . . d d d d d d d d d d d d d d d d d d d d d d d d d d . . . 
. . . d b b b b b b b b b b b b b b b b b b b b b b b b b . . . 
. . . d b b b b b b b b b b b b b b b b b b b b b b b b b . . . 
. d d d b b b b b b b b b b b b b b b b b b b b b b b b b d d . 
. c c b b b b b b b b b b b b b b b b b b b b b b b b b b b b . 
. c c b b b b b b b b b b b b b b b b b b b b b b b b b b b b . 
. c c b b b b b b b b b b b b b b b b b b b b b b b b b b b b . 
. c c b b b d d d d d b b b b b b b b b b b b d d d d d b b b . 
. c c b b b f f f f f d d d b b b b b b d d d f f f f f b b b . 
. c c b b b b b c f f f f f d b b b b d f f f f f c b b b b b . 
. c c b b b b b b f f f f f f b b b b f f f f f f b b b b b b . 
. c c b b b b b b b c f f f f b b b b f f f f c b b b b b b b . 
. c c b b b b b b b f f f f f f b b f f f f f f b b b b b b b . 
. c c b b b b b c c c c c c c c b b c c c c c c c b b b b b b . 
. c c b b b b b b b b b b b b b b b b b b b b b b b b b b b b . 
. c c b b b b b b b b b b b b b b b b b b b b b b b b b b b b . 
. c c b b b b b b b b b b b b b b b b b b b b b b b b b b b b . 
. c c b b b b b b b b b b b b b b b b b b b b b b b b b b b b . 
. c c b b b b b f d b b b d f d b b b d f d b b b d f b b b b . 
. c c b b b b f f f d b d f f f d b d f f f d b d f f f b b b . 
. c c b b b f f f f f d f f f f f d f f f f f d f f f f b b b . 
. c c b b f f f f f f f f f f f f f f f f f f f f f f c b b b . 
. c c b b f f f c f f f f f c f f f f f c f f f f f c b b b b . 
. c c b b c f c b c f f f c b c f f f c b c f f f c b b b b b . 
. c c b b b c b b b c f c b b b c f c b b b c f c b b b b b b . 
. c c b b b b b b b b b b b b b b b b b b b b b b b b b b b b . 
. c c b b b b b b b b b b b b b b b b b b b b b b b b b b b b . 
. c c b b b b b b b b b b b b b b b b b b b b b b b b b b b b . 
. c c c c b b b b b b b b b b b b b b b b b b b b b b b c c c . 
. . . c c b b b b b b b b b b b b b b b b b b b b b b b . . . . 
. . . c c b b b b b b b b b b b b b b b b b b b b b b b . . . . 
. . . c c c c c c c c c c c c c c c c c c c c c c c c c . . . . 
`)
    Boss.setVelocity(0, 200)
    if (game.runtime() > BossClock + 500) {
        scene.cameraShake(7, 500)
    }
}
sprites.onCreated(SpriteKind.BossFireball, function (sprite) {
    for (let value of sprites.allOfKind(SpriteKind.BossFireball)) {
        sprites.setDataNumber(value, "FireBallClock", game.runtime())
    }
    sprite.follow(mySprite, 30)
})
sprites.onOverlap(SpriteKind.Projectile, SpriteKind.Bat2, function (sprite, otherSprite) {
    sprite.destroy()
    for (let index = 0; index < 4; index++) {
        otherSprite.setFlag(SpriteFlag.Invisible, true)
        pause(15)
        otherSprite.setFlag(SpriteFlag.Invisible, false)
        pause(15)
    }
    sprites.changeDataNumberBy(otherSprite, "Hits", sprites.readDataNumber(sprite, "Damage"))
    DmgNoSprite = sprites.create(img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, SpriteKind.DamageNumber)
    DmgNoSprite.setImage(DmgNumberList[DamageAmount])
    DmgNoSprite.setPosition(otherSprite.x, otherSprite.top - 6)
    animation.runMovementAnimation(
    DmgNoSprite,
    animation.animationPresets(animation.bobbing),
    500,
    false
    )
    clock = game.runtime()
    if (sprites.readDataNumber(otherSprite, "Hits") <= 0) {
        otherSprite.destroy(effects.disintegrate, 500)
    }
})
function Hurt () {
    scene.cameraShake(2, 500)
    mySprite.setVelocity(SpriteFlipHoriz * 50, -150)
    info.changeLifeBy(-1)
    if (WeaponLevel >= 1) {
        animation.runImageAnimation(
        PowerUpMarkerUp,
        [img`
. . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . 
`,img`
. . . . . . . . . . . . 1 . . 
. . . . . . . . . . . . 1 . . 
1 . . 1 . 1 . 1 . . . . . . . 
1 . . 1 . 1 . 1 . . . . . . . 
1 1 . . 1 . . 1 1 . . . . . . 
. . . . . . . . . . . . . . . 
`,img`
. . . . . . . . . . . . 1 . . 
. . . . . . . . . . . . 1 . . 
1 . . 1 . 1 . 1 . . . . 1 . . 
1 . . 1 . 1 . 1 . . . . 1 . . 
1 1 . . 1 . . 1 1 . . . 1 . . 
. . . . . . . . . . . . . . . 
`,img`
. . . . . . . . . . . . 1 . . 
. . . . . . . . . . . . 1 . . 
1 . . 1 . 1 . 1 . . . . 1 . . 
1 . . 1 . 1 . 1 . . . 1 1 1 . 
1 1 . . 1 . . 1 1 . . . 1 . . 
. . . . . . . . . . . . . . . 
`,img`
. . . . . . . . . . . . 1 . . 
. . . . . . . . . . . . 1 . . 
1 . . 1 . 1 . 1 . . 1 . 1 . 1 
1 . . 1 . 1 . 1 . . . 1 1 1 . 
1 1 . . 1 . . 1 1 . . . 1 . . 
. . . . . . . . . . . . . . . 
`,img`
. . . . . . . . . . . . 1 . . 
. . . . . . . . . . . . 1 . . 
1 . . 1 . 1 . 1 . . 1 . 1 . 1 
1 . . 1 . 1 . 1 . . . 1 1 1 . 
1 1 . . 1 . . 1 1 . . . 1 . . 
. . . . . . . . . . . . . . . 
`,img`
. . . . . . . . . . . . . . . 
. . . . . . . . . . . . 1 . . 
1 . . 1 . 1 . 1 . . . . 1 . . 
1 . . 1 . 1 . 1 . . 1 . 1 . 1 
1 1 . . 1 . . 1 1 . . 1 1 1 . 
. . . . . . . . . . . . 1 . . 
`,img`
. . . . . . . . . . . . 1 . . 
. . . . . . . . . . . . 1 . . 
1 . . 1 . 1 . 1 . . 1 . 1 . 1 
1 . . 1 . 1 . 1 . . . 1 1 1 . 
1 1 . . 1 . . 1 1 . . . 1 . . 
. . . . . . . . . . . . . . . 
`,img`
. . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . 
`],
        100,
        false
        )
        WeaponLevel += -1
    }
    for (let index = 0; index < 4; index++) {
        mySprite.setFlag(SpriteFlag.Invisible, true)
        pause(50)
        mySprite.setFlag(SpriteFlag.Invisible, false)
        pause(50)
    }
}
sprites.onOverlap(SpriteKind.Player, SpriteKind.SkeleArcher, function (sprite, otherSprite) {
    Hurt()
    pause(500)
})
let Fireball: Sprite = null
let ChargeSpriteAnim = 0
let ClimbingAnimation = 0
let Dust2: Sprite = null
let AniFrame = 0
let WallJumpCheck = 0
let EnemyAnimFrame = 0
let sinWave = 0
let SkeletonArrow: Sprite = null
let BossClock = 0
let PlayerUsingDoor = 0
let SkeletonArrowBounceFromWall: Sprite = null
let SlimeDeathAnim: Sprite = null
let EndWall: Sprite = null
let JumpStuff: Sprite = null
let projectile: Sprite = null
let ShootUp = 0
let chargeShot = 0
let ChargeUpSprite: Sprite = null
let PowerUp2: Sprite = null
let Heart2: Sprite = null
let ItemDrop = 0
let Boss: Sprite = null
let BossIntroClock = 0
let BossDeathAnimation: Sprite = null
let BossDeathAnimationClock = 0
let PowerUpMarkerUp: Sprite = null
let EndCamera: Sprite = null
let BatVisionRange3: Sprite = null
let BatVisionRange2: Sprite = null
let BatVisionRange: Sprite = null
let Batno3: Sprite = null
let Sign1: Sprite = null
let Sign2: Sprite = null
let Batno2: Sprite = null
let Bat1: Sprite = null
let Rope: Sprite = null
let JumpPad: Sprite = null
let WallSpikeHazard: Sprite = null
let Torch2: Sprite = null
let SkeletonArcher: Sprite = null
let Slime: Sprite = null
let SpikeSprite: Sprite = null
let Box2: Sprite = null
let WallBuildItem: Sprite = null
let Exit: Sprite = null
let EndWall2: Sprite = null
let WallRight = 0
let BossDeathClock = 0
let mySprite: Sprite = null
let climbingladder = 0
let chargelevel = 0
let SkeleDeathAnim: Sprite = null
let clock = 0
let DamageAmount = 0
let DmgNumberList: Image[] = []
let DmgNoSprite: Sprite = null
let checkpoint = 0
let Level = 0
let bossIntro = 0
let WeaponLevel = 0
let SpriteFlipHoriz = 0
let LevelEndCameraPos = 0
SpriteFlipHoriz = 1
let EnemyDir = 1
WeaponLevel = 0
info.setLife(10)
let gravity = 350
bossIntro = 0
Level = 0
checkpoint = 0
LevelClear()
game.onUpdateInterval(2000, function () {
    for (let value of sprites.allOfKind(SpriteKind.SkeleArcher)) {
        clock = game.runtime()
        SkeletonArrow = sprites.create(img`
. 1 . . . 4 
1 e e e e . 
. 1 . . . 4 
`, SpriteKind.SkeletonArrow)
        SkeletonArrow.setPosition(value.x, value.y)
        SkeletonArrow.setVelocity(-100, 0)
        SkeletonArrow.setFlag(SpriteFlag.DestroyOnWall, true)
    }
})
game.onUpdate(function () {
    for (let value of sprites.allOfKind(SpriteKind.BossDeathPartical)) {
        if (game.runtime() > BossDeathClock + 800) {
            value.vy = 100
        }
        if (game.runtime() > BossDeathClock + 4000) {
            value.destroy(effects.disintegrate, 2000)
        }
    }
})
game.onUpdate(function () {
    if (game.runtime() > BossIntroClock + 5500) {
        if (bossIntro == 2) {
            Boss.z = 0
            Boss.vx = 55 * sprites.readDataNumber(Boss, "Right")
            if (Boss.isHittingTile(CollisionDirection.Left)) {
                sprites.setDataNumber(Boss, "Right", 1)
            }
            if (Boss.isHittingTile(CollisionDirection.Right)) {
                sprites.setDataNumber(Boss, "Right", -1)
            }
            Boss.y += 2 * Math.sin(sinWave * 1)
        }
        if (bossIntro == 3) {
            Boss.vx = 0
            if (game.runtime() > BossClock + 2000) {
                Boss.setImage(img`
. . . d d d d d d d d d d d d d d d d d d d d d d d d d d . . . 
. . . d b b b b b b b b b b b b b b b b b b b b b b b b b . . . 
. . . d b b b b b b b b b b b b b b b b b b b b b b b b b . . . 
. d d d b b b b b b b b b b b b b b b b b b b b b b b b b d d . 
. c c b b b b b b b b b b b b b b b b b b b b b b b b b b b b . 
. c c b b b b b b b b b b b b b b b b b b b b b b b b b b b b . 
. c c b b b b b b b b b b b b b b b b b b b b b b b b b b b b . 
. c c b b b d d d d d b b b b b b b b b b b b d d d d d b b b . 
. c c b b f f f f f f d d d b b b b b b d d d f f f f f f b b . 
. c c b b b b f f f f f f f d b b b b d f f f f f f f b b b b . 
. c c b b b b b f f f f f f f b b b b f f f f f f f b b b b b . 
. c c b b b b b f f f f f f f b b b b f f f f f f f b b b b b . 
. c c b b b b b b b f f f f b b b b b b f f f f b b b b b b b . 
. c c b b b b b c c c c c c b b b b b b c c c c c b b b b b b . 
. c c b b b b b b b b b b b b b b b b b b b b b b b b b b b b . 
. c c b b b b b b b b b b b b b b b b b b b b b b b b b b b b . 
. c c b b b b b b b b b b b b b b b b b b b b b b b b b b b b . 
. c c b b b b b b b b b b b b b b b b b b b b b b b b b b b b . 
. c c b b b b b b b b b b b b b b b b b b b b b b b b b b b b . 
. c c b b b b b b b b b b b b b b b b b b b b b b b b b b b b . 
. c c b b b b d f d b b b d f d b b b d f d b b b d f b b b b . 
. c c b b b b f f f d b d f f f d b d f f f d b d f f f b b b . 
. c c b b b f f f f f d f f f f f d f f f f f d f f f b b b b . 
. c c b b c f c b c f f f c b c f f f c b c f f f c b b b b b . 
. c c b b b c b b b c f c b b b c f c b b b c f c b b b b b b . 
. c c b b b b b b b b b b b b b b b b b b b b b b b b b b b b . 
. c c b b b b b b b b b b b b b b b b b b b b b b b b b b b b . 
. c c b b b b b b b b b b b b b b b b b b b b b b b b b b b b . 
. c c c c b b b b b b b b b b b b b b b b b b b b b b b c c c . 
. . . c c b b b b b b b b b b b b b b b b b b b b b b b . . . . 
. . . c c b b b b b b b b b b b b b b b b b b b b b b b . . . . 
. . . c c c c c c c c c c c c c c c c c c c c c c c c c . . . . 
`)
                Boss.y = 155
                Boss.vy = 0
                sinWave = 1
                bossIntro = 2
            }
        }
        for (let value of sprites.allOfKind(SpriteKind.BossFireball)) {
            if (EnemyAnimFrame == 0) {
                value.setImage(img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . 1 1 . . . . . . . 
. . . . . . . 1 1 . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`)
            }
            if (EnemyAnimFrame == 1) {
                value.setImage(img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . 1 1 1 1 . . . . . . 
. . . . . 1 . . . . 1 . . . . . 
. . . . 1 . . 1 1 . . 1 . . . . 
. . . . 1 . 1 1 1 1 . 1 . . . . 
. . . . 1 . 1 1 1 1 . 1 . . . . 
. . . . 1 . . 1 1 . . 1 . . . . 
. . . . . 1 . . . . 1 . . . . . 
. . . . . . 1 1 1 1 . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`)
            }
            if (EnemyAnimFrame == 2) {
                value.setImage(img`
. . . . . . . . . . . . . . . . 
. . . . . 1 1 1 1 1 1 . . . . . 
. . . . 1 . . . . . . 1 . . . . 
. . . 1 . . 1 1 1 1 . . 1 . . . 
. . 1 . . 1 . . . . 1 . . 1 . . 
. . 1 . 1 . 1 1 1 1 . 1 . 1 . . 
. . 1 . 1 . 1 1 1 1 . 1 . 1 . . 
. . 1 . 1 . 1 1 1 1 . 1 . 1 . . 
. . 1 . 1 . 1 1 1 1 . 1 . 1 . . 
. . 1 . . 1 . . . . 1 . . 1 . . 
. . . 1 . . 1 1 1 1 . . 1 . . . 
. . . . 1 . . . . . . 1 . . . . 
. . . . . 1 1 1 1 1 1 . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`)
            }
            if (game.runtime() > sprites.readDataNumber(value, "FireBallClock") + 5000) {
                value.destroy(effects.fire, 200)
            }
        }
    }
})
game.onUpdate(function () {
    for (let Slime2 of sprites.allOfKind(SpriteKind.Slime)) {
        if (EnemyAnimFrame == 0) {
            Slime2.setImage(img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . 7 7 7 7 . . . . . . 
. . . . . 7 7 7 7 7 7 . . . . . 
. . . . 7 7 7 7 7 7 7 7 . . . . 
. . . 7 7 7 1 7 7 1 7 7 7 . . . 
. . 7 7 7 7 6 7 7 6 7 7 7 7 . . 
. . 7 7 7 7 7 7 7 7 7 7 7 7 . . 
. . . 7 7 7 7 7 7 7 7 7 7 . . . 
. . . . 7 7 7 7 7 7 7 7 . . . . 
`)
        }
        if (EnemyAnimFrame == 1) {
            Slime2.setImage(img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . 7 . . . . . . 
. . . . . . . 7 7 . . . . . . . 
. . . . . . 7 7 7 7 . . . . . . 
. . . . . 7 7 7 7 7 7 . . . . . 
. . . . 7 7 1 7 1 7 7 7 . . . . 
. . . 7 7 7 6 7 6 7 7 7 7 . . . 
. . . 7 7 7 7 7 7 7 7 7 7 . . . 
. . . . 7 7 7 7 7 7 7 7 . . . . 
. . . . . 7 7 7 7 7 7 . . . . . 
`)
        }
        if (EnemyAnimFrame == 2) {
            Slime2.setImage(img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . 7 . . . . 
. . . . . . . . 7 . . . . . . . 
. . . . . . . 7 7 7 . . . . . . 
. . . . . . 7 7 7 7 7 . . . . . 
. . . . . 7 7 7 7 7 7 7 . . . . 
. . . . 7 7 1 7 7 1 7 7 7 . . . 
. . . 7 7 7 6 7 7 6 7 7 7 7 . . 
. . . . 7 7 7 7 7 7 7 7 7 . . . 
. . . . . 7 7 7 7 7 7 7 . . . . 
`)
        }
        Slime2.setVelocity(22 * sprites.readDataNumber(Slime2, "Right"), 100)
        if (sprites.readDataNumber(Slime2, "Right") == 1) {
            Slime2.image.flipX()
        }
        if (Slime2.isHittingTile(CollisionDirection.Left)) {
            sprites.setDataNumber(Slime2, "Right", 1)
        }
        if (Slime2.isHittingTile(CollisionDirection.Right)) {
            sprites.setDataNumber(Slime2, "Right", -1)
        }
    }
    for (let value8 of sprites.allOfKind(SpriteKind.Bat)) {
        if (EnemyAnimFrame == 0) {
            value8.setImage(img`
c . . . . . . . . . . . . . . c 
c c c . . . . . . . . . . c c c 
d c c c c b . . b . . . c c d d 
. d c c c b b b d . c c c d d . 
. d d c 1 b b 1 c c c c d d d . 
. . d d b 3 b b c c c c d d . . 
. . . d d b b b c c c d d . . . 
. . . . . . c c c c c c . . . . 
. . . . . . . c c c c c . . . . 
. . . . . . . . c . . c . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`)
        }
        if (EnemyAnimFrame == 1) {
            value8.setImage(img`
. . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . 
. . . . . . b . . b . . . . . . . . . 
. . . . c c b b b 3 . c c c c . . . . 
. . c c c 1 b b 1 c d c c c c c c . . 
. c c c c b 3 b b c c c c d c c c c . 
c c c d d d b b c c c c c d d d c c c 
. . d d d d d c c c c c d d d d d . . 
. . . . . . . . c c c c c . . . . . . 
. . . . . . . . . c . . c . . . . . . 
. . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . 
`)
        }
        if (EnemyAnimFrame == 2) {
            value8.setImage(img`
. . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . 
. . . . . . . b . . b . . . . . . . . 
. . . . c c b b b b 3 . . c c c . . . 
. . c c c c 1 b b 1 c b c c c c c . . 
c c c c c c b 3 b b c c c c c c c c c 
. . . . . . . b b c c c c c . . . . . 
. . . . . . . . c c c c c . . . . . . 
. . . . . . . . . . c . c . . . . . . 
. . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . 
`)
        }
        if (value8.isHittingTile(CollisionDirection.Left)) {
            sprites.setDataNumber(value8, "BatLeft", 1)
        }
        if (value8.isHittingTile(CollisionDirection.Right)) {
            sprites.setDataNumber(value8, "BatLeft", -1)
        }
        if (value8.isHittingTile(CollisionDirection.Bottom)) {
            sprites.setDataNumber(value8, "BatDown", -1)
        }
        if (value8.isHittingTile(CollisionDirection.Top)) {
            sprites.setDataNumber(value8, "BatDown", 1)
        }
        if (sprites.readDataNumber(value8, "BatLeft") == 1) {
            value8.image.flipX()
        }
        if (sprites.readDataBoolean(value8, "Aggro") == true && mySprite.x > value8.x) {
            sprites.setDataNumber(value8, "BatLeft", 1)
        } else {
            if (sprites.readDataBoolean(value8, "Aggro") == true && mySprite.x <= value8.x) {
                sprites.setDataNumber(value8, "BatLeft", -1)
            }
        }
        value8.setVelocity(5 * sprites.readDataNumber(value8, "BatLeft"), sprites.readDataNumber(value8, "BatDown") * 8)
        for (let value of sprites.allOfKind(SpriteKind.BatAggro)) {
            value.setFlag(SpriteFlag.Invisible, true)
            value.setPosition(value8.x, value8.y)
        }
    }
    for (let value8 of sprites.allOfKind(SpriteKind.Bat2)) {
        if (EnemyAnimFrame == 0) {
            value8.setImage(img`
. . . . . . . . . . . . . . . . 
c . . . . . . . . . . . . . . c 
c c c . . . . . . . . . . c c c 
d c c c c b . . b . . . c c d d 
. d c c c b b b d . c c c d d . 
. d d c 1 b b 1 c c c c d d d . 
. . d d b 3 b b c c c c d d . . 
. . . d d b b b c c c d d . . . 
. . . . . . c c c c c c . . . . 
. . . . . . . c c c c c . . . . 
. . . . . . . . c . . c . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`)
        }
        if (EnemyAnimFrame == 1) {
            value8.setImage(img`
. . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . 
. . . . . . b . . b . . . . . . . . . 
. . . . c c b b b 3 . c c c c . . . . 
. . c c c 1 b b 1 c d c c c c c c . . 
. c c c c b 3 b b c c c c d c c c c . 
c c c d d d b b c c c c c d d d c c c 
. . d d d d d c c c c c d d d d d . . 
. . . . . . . . c c c c c . . . . . . 
. . . . . . . . . c . . c . . . . . . 
. . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . 
`)
        }
        if (EnemyAnimFrame == 2) {
            value8.setImage(img`
. . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . 
. . . . . . . b . . b . . . . . . . . 
. . . . c c b b b b 3 . . c c c . . . 
. . c c c c 1 b b 1 c b c c c c c . . 
c c c c c c b 3 b b c c c c c c c c c 
. . . . . . . b b c c c c c . . . . . 
. . . . . . . . c c c c c . . . . . . 
. . . . . . . . . . c . c . . . . . . 
. . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . 
`)
        }
        if (value8.isHittingTile(CollisionDirection.Left)) {
            sprites.setDataNumber(value8, "BatLeft", 1)
        }
        if (value8.isHittingTile(CollisionDirection.Right)) {
            sprites.setDataNumber(value8, "BatLeft", -1)
        }
        if (value8.isHittingTile(CollisionDirection.Bottom)) {
            sprites.setDataNumber(value8, "BatDown", -1)
        }
        if (value8.isHittingTile(CollisionDirection.Top)) {
            sprites.setDataNumber(value8, "BatDown", 1)
        }
        if (sprites.readDataBoolean(value8, "Aggro") == true && mySprite.x > value8.x) {
            sprites.setDataNumber(value8, "BatLeft", 1)
        } else {
            if (sprites.readDataBoolean(value8, "Aggro") == true && mySprite.x <= value8.x) {
                sprites.setDataNumber(value8, "BatLeft", -1)
            }
        }
        if (sprites.readDataBoolean(value8, "Aggro") == false) {
            value8.setVelocity(5 * sprites.readDataNumber(value8, "BatLeft"), sprites.readDataNumber(value8, "BatDown") * 8)
        }
        if (sprites.readDataNumber(value8, "BatLeft") == 1) {
            value8.image.flipX()
        }
        for (let value of sprites.allOfKind(SpriteKind.BatAggro2)) {
            value.setFlag(SpriteFlag.Invisible, true)
            value.setPosition(value8.x, value8.y)
        }
    }
    for (let value8 of sprites.allOfKind(SpriteKind.Bat3)) {
        if (EnemyAnimFrame == 0) {
            value8.setImage(img`
c . . . . . . . . . . . . . . c 
c c c . . . . . . . . . . c c c 
d c c c c b . . b . . . c c d d 
. d c c c b b b d . c c c d d . 
. d d c 1 b b 1 c c c c d d d . 
. . d d b 3 b b c c c c d d . . 
. . . d d b b b c c c d d . . . 
. . . . . . c c c c c c . . . . 
. . . . . . . c c c c c . . . . 
. . . . . . . . c . . c . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`)
        }
        if (EnemyAnimFrame == 1) {
            value8.setImage(img`
. . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . 
. . . . . . b . . b . . . . . . . . . 
. . . . c c b b b 3 . c c c c . . . . 
. . c c c 1 b b 1 c d c c c c c c . . 
. c c c c b 3 b b c c c c d c c c c . 
c c c d d d b b c c c c c d d d c c c 
. . d d d d d c c c c c d d d d d . . 
. . . . . . . . c c c c c . . . . . . 
. . . . . . . . . c . . c . . . . . . 
. . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . 
`)
        }
        if (EnemyAnimFrame == 2) {
            value8.setImage(img`
. . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . 
. . . . . . . b . . b . . . . . . . . 
. . . . c c b b b b 3 . . c c c . . . 
. . c c c c 1 b b 1 c b c c c c c . . 
c c c c c c b 3 b b c c c c c c c c c 
. . . . . . . b b c c c c c . . . . . 
. . . . . . . . c c c c c . . . . . . 
. . . . . . . . . . c . c . . . . . . 
. . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . 
`)
        }
        if (value8.isHittingTile(CollisionDirection.Left)) {
            sprites.setDataNumber(value8, "BatLeft", 1)
        }
        if (value8.isHittingTile(CollisionDirection.Right)) {
            sprites.setDataNumber(value8, "BatLeft", -1)
        }
        if (value8.isHittingTile(CollisionDirection.Bottom)) {
            sprites.setDataNumber(value8, "BatDown", -1)
        }
        if (value8.isHittingTile(CollisionDirection.Top)) {
            sprites.setDataNumber(value8, "BatDown", 1)
        }
        if (sprites.readDataNumber(value8, "BatLeft") == 1) {
            value8.image.flipX()
        }
        if (sprites.readDataBoolean(value8, "Aggro") == true && mySprite.x > value8.x) {
            sprites.setDataNumber(value8, "BatLeft", 1)
        } else {
            if (sprites.readDataBoolean(value8, "Aggro") == true && mySprite.x <= value8.x) {
                sprites.setDataNumber(value8, "BatLeft", -1)
            }
        }
        value8.setVelocity(5 * sprites.readDataNumber(value8, "BatLeft"), sprites.readDataNumber(value8, "BatDown") * 8)
        for (let value of sprites.allOfKind(SpriteKind.BatAggro3)) {
            value.setFlag(SpriteFlag.Invisible, true)
            value.setPosition(value8.x, value8.y)
        }
    }
    for (let value of sprites.allOfKind(SpriteKind.SkeleArcher)) {
        if (EnemyAnimFrame == 0) {
            value.setImage(img`
. . . . . . . . . . . . . . . . 
. . . . . . 1 1 1 . . . . . . . 
. . . . . 1 1 1 1 1 . . . . . . 
. . . . . f 1 f 1 1 . . . . . . 
. . . . . 1 1 1 1 . . . . . . . 
. . . . e . 1 1 1 . . . . . . . 
. . . e . . . . 1 . . . . . . . 
. . e . . 1 b b b b . . . . . . 
. . e 1 1 . b b 1 b . . . . . . 
. . e . . 1 1 1 b b . . . . . . 
. . e . . . . . 1 . . . . . . . 
. . . e . . . c c c . . . . . . 
. . . . e . . c . c . . . . . . 
. . . . . . . c . c . . . . . . 
. . . . . . . 1 . 1 . . . . . . 
. . . . . . . 1 . 1 . . . . . . 
`)
        }
        if (EnemyAnimFrame == 1) {
            value.setImage(img`
. . . . . . . . . . . . . . . . 
. . . . . . 1 1 1 . . . . . . . 
. . . . . 1 1 1 1 1 . . . . . . 
. . . . . f 1 f 1 1 . . . . . . 
. . . . . 1 1 1 1 . . . . . . . 
. . . . e . 1 1 1 . . . . . . . 
. . e e . . . . 1 . . . . . . . 
. e . . . 1 b b b b . . . . . . 
. e 1 1 1 . b 1 1 b . . . . . . 
. e . . . 1 1 b b b . . . . . . 
. e . . . . . . 1 . . . . . . . 
. . e e . . . c c c . . . . . . 
. . . . e . c c . c . . . . . . 
. . . . . . c . . c . . . . . . 
. . . . . . 1 . . 1 . . . . . . 
. . . . . . . 1 . 1 . . . . . . 
`)
        }
        if (EnemyAnimFrame == 2) {
            value.setImage(img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . 1 1 1 . . . . . . . 
. . . . . 1 1 1 1 1 . . . . . . 
. . . . . f 1 f 1 1 . . . . . . 
. . . e . 1 1 1 1 . . . . . . . 
. . e . . . 1 1 1 . . . . . . . 
. e . . . . . . 1 . . . . . . . 
. e 1 1 1 1 b b b b . . . . . . 
. e . . . . b 1 1 b . . . . . . 
. e . . . 1 1 b b b . . . . . . 
. . e . . . . . 1 . . . . . . . 
. . . e . . . c c c . . . . . . 
. . . . . . c c . c . . . . . . 
. . . . . . 1 . . 1 . . . . . . 
. . . . . . . 1 . 1 . . . . . . 
`)
        }
    }
    if (mySprite.isHittingTile(CollisionDirection.Bottom)) {
        climbingladder = 0
        WallJumpCheck = 0
    }
    if (AniFrame > 2) {
        AniFrame = 1
    }
    if (controller.right.isPressed()) {
        mySprite.vx += 22
        SpriteFlipHoriz = 1
    } else if (controller.left.isPressed()) {
        mySprite.vx += -22
        SpriteFlipHoriz = -1
    }
    if (mySprite.vy > 0) {
        if (mySprite.isHittingTile(CollisionDirection.Right)) {
            WallRight = -1
            gravity = 10
            if (controller.right.isPressed() && mySprite.vy > 0.2) {
                Dust2 = sprites.create(img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . 1 . . . . 
. . . . . . . . . . 1 . 1 . . . 
. . . . . . . . . . . 1 . . . . 
. . . . . . . . . 1 . . . . . . 
. . . . . . . . 1 . 1 . . . . . 
. . . . . . . . . 1 . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, SpriteKind.Dust)
                Dust2.setPosition(mySprite.x + 0, mySprite.y - 0)
            }
        }
    }
    if (mySprite.vy > 0) {
        if (mySprite.isHittingTile(CollisionDirection.Left)) {
            WallRight = 1
            gravity = 10
            if (controller.left.isPressed() && mySprite.vy > 0.2) {
                Dust2 = sprites.create(img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . 1 . . . . 
. . . . . . . . . . 1 . 1 . . . 
. . . . . . . . . . . 1 . . . . 
. . . . . . . . . 1 . . . . . . 
. . . . . . . . 1 . 1 . . . . . 
. . . . . . . . . 1 . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, SpriteKind.Dust)
                Dust2.setPosition(mySprite.x - 6, mySprite.y - 0)
            }
        }
    }
    if (!(mySprite.isHittingTile(CollisionDirection.Right) || mySprite.isHittingTile(CollisionDirection.Left))) {
        gravity = 350
    }
    if (gravity == 10 && controller.A.isPressed()) {
        WallJumpCheck = 1
        WallJump()
    }
    mySprite.ay = gravity
    mySprite.vx = mySprite.vx * 0.8
    mySprite.setImage(img`
. . 3 3 3 3 3 . 
. 3 3 3 f f f 3 
3 3 3 f 1 f 1 . 
3 . 3 f f f f . 
. . 1 3 f f 3 . 
. 3 f 3 3 3 f 1 
. . 3 3 3 3 3 . 
. . . . . . . . 
`)
    if (ShootUp == 1 && AniFrame == 1) {
        mySprite.setImage(img`
. . . 3 3 3 3 . 
. . 3 3 1 f 1 3 
. 3 3 f f f f . 
3 3 1 3 f f 3 1 
3 . f 3 3 3 3 f 
. . 3 3 3 3 3 3 
. 3 3 3 3 3 3 . 
. . . . . . . . 
`)
    }
    if (ShootUp == 1 && AniFrame == 2) {
        mySprite.setImage(img`
. . . 3 3 3 3 . 
. . 3 3 1 f 1 3 
. 3 3 f f f f . 
. 3 1 3 f f 3 1 
3 3 f 3 3 3 3 f 
. . 3 3 3 3 3 . 
. . 3 3 3 3 3 3 
. . . . . . . . 
`)
    }
    if (AniFrame == 1) {
        mySprite.setImage(img`
. . 3 3 3 3 3 . 
. 3 3 3 f f f 3 
3 3 3 f 1 f 1 . 
3 . 3 f f f f . 
. . 1 3 f f 3 . 
. 3 f 3 3 3 f 1 
. . 3 3 3 3 3 . 
. . . . . . . . 
`)
    }
    if (AniFrame == 2) {
        mySprite.setImage(img`
. . . 3 3 3 3 . 
. . 3 3 f f f 3 
. 3 3 f 1 f 1 . 
3 3 3 f f f f . 
3 . f 3 f f 3 1 
. 3 1 3 3 3 f . 
. . . 3 3 3 3 3 
. . . . . . . . 
`)
    }
    if (climbingladder == 1 && ClimbingAnimation == 1) {
        mySprite.setImage(img`
. . . 3 3 3 3 . 
. 1 1 3 3 3 3 3 
. 3 b 3 3 3 b . 
. 3 b 3 3 b 3 3 
. . b 3 3 b 3 1 
. . b 3 b 3 1 1 
. . 3 b 3 3 . . 
. . . 3 3 . . . 
`)
    }
    if (climbingladder == 1 && ClimbingAnimation == 2) {
        mySprite.setImage(img`
. . . 3 3 3 3 . 
. . 3 3 3 3 3 3 
. 3 b 3 3 3 1 1 
. 3 b 3 3 3 b 1 
. 1 b 3 3 b 3 3 
. 1 1 b 3 b 3 . 
. . . 3 b 3 3 . 
. . . . 3 3 . . 
`)
    }
    if (mySprite.vy < 0) {
        mySprite.setImage(img`
. . . 3 3 3 3 . 
. . 3 3 f f f 3 
. 3 3 f 1 f 1 . 
3 3 1 3 f f f . 
. . f 3 3 3 3 1 
. 3 3 3 3 3 f . 
. . 3 3 3 3 . . 
. . . 3 3 . . . 
`)
        climbingladder = 0
    }
    if (mySprite.vy > 0) {
        mySprite.setImage(img`
3 . . 3 3 3 3 . 
3 3 3 3 f f f 3 
3 3 3 f 1 f 1 . 
. . 3 f f f f . 
. . f 3 f f f . 
. 3 1 3 3 3 3 1 
. . 3 3 3 3 f 3 
. . . 3 3 3 3 . 
`)
        climbingladder = 0
    }
    if (ShootUp == -1 && AniFrame == 1 && mySprite.vy != 0) {
        mySprite.setImage(img`
. . . 3 3 3 3 . 
. . 3 3 f f 3 . 
. 3 3 f f f f . 
. 3 3 f 1 f 1 . 
3 . f 3 f f 3 f 
. . 3 3 3 3 3 3 
. 3 3 1 3 3 1 . 
. . 3 . . 3 . . 
`)
    }
    if (ShootUp == -1 && AniFrame == 2 && mySprite.vy != 0) {
        mySprite.setImage(img`
. . . 3 3 3 3 . 
. . 3 3 f f f 3 
. 3 3 f f f f . 
. 3 3 f 1 f 1 . 
3 3 f 3 f f f 3 
. . 3 3 3 3 3 . 
. . 3 1 3 3 1 3 
. 3 3 . 3 . . . 
`)
    }
    if (SpriteFlipHoriz == -1) {
        mySprite.image.flipX()
    }
    if (controller.up.isPressed()) {
        ShootUp = 1
    } else if (controller.down.isPressed() && mySprite.vy != 0) {
        ShootUp = -1
    } else {
        ShootUp = 0
    }
    if (controller.B.isPressed()) {
        chargeShot += 1
        if (chargeShot > 150) {
            chargeShot = 150
        }
        if (chargeShot == 1) {
            ChargeUpSprite = sprites.create(img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, SpriteKind.ChargePartical)
            ChargeUpSprite.z = 10
        }
    } else {
        chargeShot = 0
    }
    if (chargeShot > 30 && ChargeSpriteAnim == 1) {
        ChargeUpSprite.setImage(img`
. 1 . 
1 . 1 
. 1 . 
`)
        if (chargeShot > 80) {
            ChargeUpSprite.setImage(img`
1 . . . 1 
. 1 . 1 . 
. . . . . 
. 1 . 1 . 
1 . . . 1 
`)
        }
        if (chargeShot > 120) {
            ChargeUpSprite.setImage(img`
. . . . . . . 
. 1 . . . 1 . 
. . 5 1 5 . . 
. . 1 5 1 . . 
. . 5 1 5 . . 
. 1 . . . 1 . 
. . . . . . . 
`)
        }
        if (SpriteFlipHoriz == 1) {
            ChargeUpSprite.setPosition(mySprite.x + 6, mySprite.y - 2)
        } else if (SpriteFlipHoriz == -1) {
            ChargeUpSprite.setPosition(mySprite.x - 6, mySprite.y - 2)
        }
        if (ShootUp == 1) {
            ChargeUpSprite.setPosition(mySprite.x + 0, mySprite.y + -6)
        }
        if (ShootUp == -1) {
            ChargeUpSprite.setPosition(mySprite.x - 0, mySprite.y + 5)
        }
    }
    if (chargeShot > 30 && ChargeSpriteAnim == 2) {
        ChargeUpSprite.setImage(img`
1 . 1 
. 5 . 
1 . 1 
`)
        if (chargeShot > 80) {
            ChargeUpSprite.setImage(img`
. . 1 . . 
. 1 . 1 . 
1 . 5 . 1 
. 1 . 1 . 
. . 1 . . 
`)
        }
        if (chargeShot > 130) {
            ChargeUpSprite.setImage(img`
. . . . . . . 
. . 1 . 1 . . 
. 1 . 5 . 1 . 
. . 5 1 5 . . 
. 1 . 5 . 1 . 
. . 1 . 1 . . 
. . . . . . . 
`)
        }
        if (SpriteFlipHoriz == 1) {
            ChargeUpSprite.setPosition(mySprite.x + 6, mySprite.y - 2)
        } else if (SpriteFlipHoriz == -1) {
            ChargeUpSprite.setPosition(mySprite.x - 6, mySprite.y - 2)
        }
        if (ShootUp == 1) {
            ChargeUpSprite.setPosition(mySprite.x + 0, mySprite.y + -6)
        }
        if (ShootUp == -1) {
            ChargeUpSprite.setPosition(mySprite.x - 0, mySprite.y + 5)
        }
    }
    for (let value7 of sprites.allOfKind(SpriteKind.DamageNumber)) {
        if (game.runtime() > clock + 500) {
            value7.destroy()
        }
    }
    for (let value8 of sprites.allOfKind(SpriteKind.EnemyDeathPartical)) {
        if (game.runtime() > clock + 700) {
            value8.destroy()
        }
    }
    for (let value8 of sprites.allOfKind(SpriteKind.ArrowEndAnim)) {
        if (game.runtime() > sprites.readDataNumber(value8, "WallHit")) {
            value8.destroy()
        }
    }
    EndCamera.setPosition(mySprite.x, 160)
    if (mySprite.y > 205) {
        scene.cameraFollowSprite(mySprite)
    } else {
        if (mySprite.y <= 205) {
            scene.cameraFollowSprite(EndCamera)
        }
    }
    PowerUpMarkerUp.setPosition(mySprite.x + 5, mySprite.y - 7)
})
forever(function () {
    if (bossIntro > 0) {
        sinWave += 1
        pause(200)
    }
    if (sinWave / 45 == 1) {
        bossIntro = 3
        BossAttack1()
    }
    if (sinWave % 20 == 0) {
        if (bossIntro >= 2) {
            for (let value of tiles.getTilesByType(myTiles.tile43)) {
                Fireball = sprites.create(img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . 4 . . . . . . . . 
. . . . . 4 4 4 4 4 4 . . . . . 
. . . . . 4 2 2 2 4 4 . . . . . 
. . . . . 4 2 5 2 2 4 4 . . . . 
. . . . . 4 2 5 5 2 2 4 . . . . 
. . . . . 4 2 2 2 4 2 4 . . . . 
. . . . . . . . . 4 2 4 . . . . 
. . . . . . . . 4 4 4 . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, SpriteKind.BossFireball)
                tiles.placeOnTile(Fireball, value)
            }
        }
    }
})
forever(function () {
    if (climbingladder == 1) {
        if (controller.down.isPressed() || controller.up.isPressed()) {
            ClimbingAnimation = 1
            pause(100)
            ClimbingAnimation = 2
            pause(100)
        }
    }
})
forever(function () {
    if (controller.left.isPressed() || controller.right.isPressed()) {
        AniFrame += 1
        pause(100)
    }
})
forever(function () {
    ChargeSpriteAnim = 1
    pause(100)
    ChargeSpriteAnim = 2
    pause(100)
})
forever(function () {
    EnemyAnimFrame = 0
    pause(200)
    EnemyAnimFrame = 1
    pause(200)
    EnemyAnimFrame = 2
    pause(200)
})
